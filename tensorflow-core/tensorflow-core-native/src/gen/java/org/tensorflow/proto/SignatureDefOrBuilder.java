// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/meta_graph.proto

package org.tensorflow.proto;

public interface SignatureDefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.SignatureDef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Named input parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; inputs = 1;</code>
   */
  int getInputsCount();
  /**
   * <pre>
   * Named input parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; inputs = 1;</code>
   */
  boolean containsInputs(
      java.lang.String key);
  /**
   * Use {@link #getInputsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.tensorflow.proto.TensorInfo>
  getInputs();
  /**
   * <pre>
   * Named input parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; inputs = 1;</code>
   */
  java.util.Map<java.lang.String, org.tensorflow.proto.TensorInfo>
  getInputsMap();
  /**
   * <pre>
   * Named input parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; inputs = 1;</code>
   */

  /* nullable */
org.tensorflow.proto.TensorInfo getInputsOrDefault(
      java.lang.String key,
      /* nullable */
org.tensorflow.proto.TensorInfo defaultValue);
  /**
   * <pre>
   * Named input parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; inputs = 1;</code>
   */

  org.tensorflow.proto.TensorInfo getInputsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Named output parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; outputs = 2;</code>
   */
  int getOutputsCount();
  /**
   * <pre>
   * Named output parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; outputs = 2;</code>
   */
  boolean containsOutputs(
      java.lang.String key);
  /**
   * Use {@link #getOutputsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.tensorflow.proto.TensorInfo>
  getOutputs();
  /**
   * <pre>
   * Named output parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; outputs = 2;</code>
   */
  java.util.Map<java.lang.String, org.tensorflow.proto.TensorInfo>
  getOutputsMap();
  /**
   * <pre>
   * Named output parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; outputs = 2;</code>
   */

  /* nullable */
org.tensorflow.proto.TensorInfo getOutputsOrDefault(
      java.lang.String key,
      /* nullable */
org.tensorflow.proto.TensorInfo defaultValue);
  /**
   * <pre>
   * Named output parameters.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorInfo&gt; outputs = 2;</code>
   */

  org.tensorflow.proto.TensorInfo getOutputsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Deprecated: TensorFlow 2 always sets this to a fixed value;
   * open-source TF Serving stopped checking by default since release 2.4.
   * In TensorFlow 1, the method_name enabled users to mark a SignatureDef as
   * supporting a particular method. Multiple SignatureDefs in a single
   * MetaGraphDef could have the same method_name (e.g., to support multi-headed
   * computation).
   * </pre>
   *
   * <code>string method_name = 3;</code>
   * @return The methodName.
   */
  java.lang.String getMethodName();
  /**
   * <pre>
   * Deprecated: TensorFlow 2 always sets this to a fixed value;
   * open-source TF Serving stopped checking by default since release 2.4.
   * In TensorFlow 1, the method_name enabled users to mark a SignatureDef as
   * supporting a particular method. Multiple SignatureDefs in a single
   * MetaGraphDef could have the same method_name (e.g., to support multi-headed
   * computation).
   * </pre>
   *
   * <code>string method_name = 3;</code>
   * @return The bytes for methodName.
   */
  com.google.protobuf.ByteString
      getMethodNameBytes();

  /**
   * <pre>
   * Named input to corresponding default values if any.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorProto&gt; defaults = 4;</code>
   */
  int getDefaultsCount();
  /**
   * <pre>
   * Named input to corresponding default values if any.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorProto&gt; defaults = 4;</code>
   */
  boolean containsDefaults(
      java.lang.String key);
  /**
   * Use {@link #getDefaultsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.tensorflow.proto.TensorProto>
  getDefaults();
  /**
   * <pre>
   * Named input to corresponding default values if any.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorProto&gt; defaults = 4;</code>
   */
  java.util.Map<java.lang.String, org.tensorflow.proto.TensorProto>
  getDefaultsMap();
  /**
   * <pre>
   * Named input to corresponding default values if any.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorProto&gt; defaults = 4;</code>
   */

  /* nullable */
org.tensorflow.proto.TensorProto getDefaultsOrDefault(
      java.lang.String key,
      /* nullable */
org.tensorflow.proto.TensorProto defaultValue);
  /**
   * <pre>
   * Named input to corresponding default values if any.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.TensorProto&gt; defaults = 4;</code>
   */

  org.tensorflow.proto.TensorProto getDefaultsOrThrow(
      java.lang.String key);
}
