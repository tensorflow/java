// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tsl/protobuf/test_log.proto

package org.tensorflow.proto;

/**
 * <pre>
 * The output of one benchmark / test run.  Each run contains a list of
 * tests or benchmarks, stored as BenchmarkEntry messages.
 * This message should be emitted by the reporter (which runs the
 * test / BM in a subprocess and then reads the emitted BenchmarkEntry messages;
 * usually from a serialized json file, finally collecting them along
 * with additional information about the test run.
 * </pre>
 *
 * Protobuf type {@code tensorflow.TestResults}
 */
public final class TestResults extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.TestResults)
    TestResultsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TestResults.newBuilder() to construct.
  private TestResults(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TestResults() {
    target_ = "";
    name_ = "";
    benchmarkType_ = 0;
    runMode_ = "";
    tfVersion_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TestResults();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.proto.TestLogProtos.internal_static_tensorflow_TestResults_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.proto.TestLogProtos.internal_static_tensorflow_TestResults_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.proto.TestResults.class, org.tensorflow.proto.TestResults.Builder.class);
  }

  /**
   * <pre>
   * The type of benchmark.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.TestResults.BenchmarkType}
   */
  public enum BenchmarkType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Fallback for protos written before Type was introduced.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>CPP_MICROBENCHMARK = 1;</code>
     */
    CPP_MICROBENCHMARK(1),
    /**
     * <code>PYTHON_BENCHMARK = 2;</code>
     */
    PYTHON_BENCHMARK(2),
    /**
     * <code>ANDROID_BENCHMARK = 3;</code>
     */
    ANDROID_BENCHMARK(3),
    /**
     * <code>EDGE_BENCHMARK = 4;</code>
     */
    EDGE_BENCHMARK(4),
    /**
     * <code>IOS_BENCHMARK = 5;</code>
     */
    IOS_BENCHMARK(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Fallback for protos written before Type was introduced.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>CPP_MICROBENCHMARK = 1;</code>
     */
    public static final int CPP_MICROBENCHMARK_VALUE = 1;
    /**
     * <code>PYTHON_BENCHMARK = 2;</code>
     */
    public static final int PYTHON_BENCHMARK_VALUE = 2;
    /**
     * <code>ANDROID_BENCHMARK = 3;</code>
     */
    public static final int ANDROID_BENCHMARK_VALUE = 3;
    /**
     * <code>EDGE_BENCHMARK = 4;</code>
     */
    public static final int EDGE_BENCHMARK_VALUE = 4;
    /**
     * <code>IOS_BENCHMARK = 5;</code>
     */
    public static final int IOS_BENCHMARK_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BenchmarkType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BenchmarkType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return CPP_MICROBENCHMARK;
        case 2: return PYTHON_BENCHMARK;
        case 3: return ANDROID_BENCHMARK;
        case 4: return EDGE_BENCHMARK;
        case 5: return IOS_BENCHMARK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BenchmarkType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BenchmarkType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BenchmarkType>() {
            public BenchmarkType findValueByNumber(int number) {
              return BenchmarkType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.tensorflow.proto.TestResults.getDescriptor().getEnumTypes().get(0);
    }

    private static final BenchmarkType[] VALUES = values();

    public static BenchmarkType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BenchmarkType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.TestResults.BenchmarkType)
  }

  public static final int TARGET_FIELD_NUMBER = 1;
  private volatile java.lang.Object target_;
  /**
   * <pre>
   * The target of the run, e.g.:
   *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
   * </pre>
   *
   * <code>string target = 1;</code>
   * @return The target.
   */
  @java.lang.Override
  public java.lang.String getTarget() {
    java.lang.Object ref = target_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      target_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The target of the run, e.g.:
   *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
   * </pre>
   *
   * <code>string target = 1;</code>
   * @return The bytes for target.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTargetBytes() {
    java.lang.Object ref = target_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      target_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENTRIES_FIELD_NUMBER = 2;
  private org.tensorflow.proto.BenchmarkEntries entries_;
  /**
   * <pre>
   * The list of tests or benchmarks in this run.
   * </pre>
   *
   * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
   * @return Whether the entries field is set.
   */
  @java.lang.Override
  public boolean hasEntries() {
    return entries_ != null;
  }
  /**
   * <pre>
   * The list of tests or benchmarks in this run.
   * </pre>
   *
   * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
   * @return The entries.
   */
  @java.lang.Override
  public org.tensorflow.proto.BenchmarkEntries getEntries() {
    return entries_ == null ? org.tensorflow.proto.BenchmarkEntries.getDefaultInstance() : entries_;
  }
  /**
   * <pre>
   * The list of tests or benchmarks in this run.
   * </pre>
   *
   * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.BenchmarkEntriesOrBuilder getEntriesOrBuilder() {
    return getEntries();
  }

  public static final int BUILD_CONFIGURATION_FIELD_NUMBER = 3;
  private org.tensorflow.proto.BuildConfiguration buildConfiguration_;
  /**
   * <pre>
   * The configuration of the build (compiled opt? with cuda? any copts?)
   * </pre>
   *
   * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
   * @return Whether the buildConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasBuildConfiguration() {
    return buildConfiguration_ != null;
  }
  /**
   * <pre>
   * The configuration of the build (compiled opt? with cuda? any copts?)
   * </pre>
   *
   * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
   * @return The buildConfiguration.
   */
  @java.lang.Override
  public org.tensorflow.proto.BuildConfiguration getBuildConfiguration() {
    return buildConfiguration_ == null ? org.tensorflow.proto.BuildConfiguration.getDefaultInstance() : buildConfiguration_;
  }
  /**
   * <pre>
   * The configuration of the build (compiled opt? with cuda? any copts?)
   * </pre>
   *
   * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.BuildConfigurationOrBuilder getBuildConfigurationOrBuilder() {
    return getBuildConfiguration();
  }

  public static final int COMMIT_ID_FIELD_NUMBER = 4;
  private org.tensorflow.proto.CommitId commitId_;
  /**
   * <pre>
   * The commit id (git hash or changelist)
   * </pre>
   *
   * <code>.tensorflow.CommitId commit_id = 4;</code>
   * @return Whether the commitId field is set.
   */
  @java.lang.Override
  public boolean hasCommitId() {
    return commitId_ != null;
  }
  /**
   * <pre>
   * The commit id (git hash or changelist)
   * </pre>
   *
   * <code>.tensorflow.CommitId commit_id = 4;</code>
   * @return The commitId.
   */
  @java.lang.Override
  public org.tensorflow.proto.CommitId getCommitId() {
    return commitId_ == null ? org.tensorflow.proto.CommitId.getDefaultInstance() : commitId_;
  }
  /**
   * <pre>
   * The commit id (git hash or changelist)
   * </pre>
   *
   * <code>.tensorflow.CommitId commit_id = 4;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.CommitIdOrBuilder getCommitIdOrBuilder() {
    return getCommitId();
  }

  public static final int START_TIME_FIELD_NUMBER = 5;
  private long startTime_;
  /**
   * <pre>
   * The time the run started (in seconds of UTC time since Unix epoch)
   * </pre>
   *
   * <code>int64 start_time = 5;</code>
   * @return The startTime.
   */
  @java.lang.Override
  public long getStartTime() {
    return startTime_;
  }

  public static final int RUN_TIME_FIELD_NUMBER = 6;
  private double runTime_;
  /**
   * <pre>
   * The amount of time the total run took (wall time in seconds)
   * </pre>
   *
   * <code>double run_time = 6;</code>
   * @return The runTime.
   */
  @java.lang.Override
  public double getRunTime() {
    return runTime_;
  }

  public static final int MACHINE_CONFIGURATION_FIELD_NUMBER = 7;
  private org.tensorflow.proto.MachineConfiguration machineConfiguration_;
  /**
   * <pre>
   * Machine-specific parameters (Platform and CPU info)
   * </pre>
   *
   * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
   * @return Whether the machineConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasMachineConfiguration() {
    return machineConfiguration_ != null;
  }
  /**
   * <pre>
   * Machine-specific parameters (Platform and CPU info)
   * </pre>
   *
   * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
   * @return The machineConfiguration.
   */
  @java.lang.Override
  public org.tensorflow.proto.MachineConfiguration getMachineConfiguration() {
    return machineConfiguration_ == null ? org.tensorflow.proto.MachineConfiguration.getDefaultInstance() : machineConfiguration_;
  }
  /**
   * <pre>
   * Machine-specific parameters (Platform and CPU info)
   * </pre>
   *
   * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.MachineConfigurationOrBuilder getMachineConfigurationOrBuilder() {
    return getMachineConfiguration();
  }

  public static final int RUN_CONFIGURATION_FIELD_NUMBER = 8;
  private org.tensorflow.proto.RunConfiguration runConfiguration_;
  /**
   * <pre>
   * Run-specific parameters (arguments, etc)
   * </pre>
   *
   * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
   * @return Whether the runConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasRunConfiguration() {
    return runConfiguration_ != null;
  }
  /**
   * <pre>
   * Run-specific parameters (arguments, etc)
   * </pre>
   *
   * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
   * @return The runConfiguration.
   */
  @java.lang.Override
  public org.tensorflow.proto.RunConfiguration getRunConfiguration() {
    return runConfiguration_ == null ? org.tensorflow.proto.RunConfiguration.getDefaultInstance() : runConfiguration_;
  }
  /**
   * <pre>
   * Run-specific parameters (arguments, etc)
   * </pre>
   *
   * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.RunConfigurationOrBuilder getRunConfigurationOrBuilder() {
    return getRunConfiguration();
  }

  public static final int NAME_FIELD_NUMBER = 9;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Benchmark target identifier.
   * </pre>
   *
   * <code>string name = 9;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Benchmark target identifier.
   * </pre>
   *
   * <code>string name = 9;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BENCHMARK_TYPE_FIELD_NUMBER = 10;
  private int benchmarkType_;
  /**
   * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
   * @return The enum numeric value on the wire for benchmarkType.
   */
  @java.lang.Override public int getBenchmarkTypeValue() {
    return benchmarkType_;
  }
  /**
   * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
   * @return The benchmarkType.
   */
  @java.lang.Override public org.tensorflow.proto.TestResults.BenchmarkType getBenchmarkType() {
    @SuppressWarnings("deprecation")
    org.tensorflow.proto.TestResults.BenchmarkType result = org.tensorflow.proto.TestResults.BenchmarkType.valueOf(benchmarkType_);
    return result == null ? org.tensorflow.proto.TestResults.BenchmarkType.UNRECOGNIZED : result;
  }

  public static final int RUN_MODE_FIELD_NUMBER = 11;
  private volatile java.lang.Object runMode_;
  /**
   * <pre>
   * Used for differentiating between continuous and debug builds.
   * Must be one of:
   * * cbuild: results from continuous build.
   * * presubmit: results from oneshot requests.
   * * culprit: results from culprit finder rerun.
   * </pre>
   *
   * <code>string run_mode = 11;</code>
   * @return The runMode.
   */
  @java.lang.Override
  public java.lang.String getRunMode() {
    java.lang.Object ref = runMode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      runMode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Used for differentiating between continuous and debug builds.
   * Must be one of:
   * * cbuild: results from continuous build.
   * * presubmit: results from oneshot requests.
   * * culprit: results from culprit finder rerun.
   * </pre>
   *
   * <code>string run_mode = 11;</code>
   * @return The bytes for runMode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRunModeBytes() {
    java.lang.Object ref = runMode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      runMode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TF_VERSION_FIELD_NUMBER = 12;
  private volatile java.lang.Object tfVersion_;
  /**
   * <pre>
   * TensorFlow version this benchmark runs against.
   * This can be either set to full version or just the major version.
   * </pre>
   *
   * <code>string tf_version = 12;</code>
   * @return The tfVersion.
   */
  @java.lang.Override
  public java.lang.String getTfVersion() {
    java.lang.Object ref = tfVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tfVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * TensorFlow version this benchmark runs against.
   * This can be either set to full version or just the major version.
   * </pre>
   *
   * <code>string tf_version = 12;</code>
   * @return The bytes for tfVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTfVersionBytes() {
    java.lang.Object ref = tfVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tfVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(target_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, target_);
    }
    if (entries_ != null) {
      output.writeMessage(2, getEntries());
    }
    if (buildConfiguration_ != null) {
      output.writeMessage(3, getBuildConfiguration());
    }
    if (commitId_ != null) {
      output.writeMessage(4, getCommitId());
    }
    if (startTime_ != 0L) {
      output.writeInt64(5, startTime_);
    }
    if (java.lang.Double.doubleToRawLongBits(runTime_) != 0) {
      output.writeDouble(6, runTime_);
    }
    if (machineConfiguration_ != null) {
      output.writeMessage(7, getMachineConfiguration());
    }
    if (runConfiguration_ != null) {
      output.writeMessage(8, getRunConfiguration());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, name_);
    }
    if (benchmarkType_ != org.tensorflow.proto.TestResults.BenchmarkType.UNKNOWN.getNumber()) {
      output.writeEnum(10, benchmarkType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(runMode_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, runMode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tfVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, tfVersion_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(target_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, target_);
    }
    if (entries_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getEntries());
    }
    if (buildConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBuildConfiguration());
    }
    if (commitId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCommitId());
    }
    if (startTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, startTime_);
    }
    if (java.lang.Double.doubleToRawLongBits(runTime_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, runTime_);
    }
    if (machineConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getMachineConfiguration());
    }
    if (runConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getRunConfiguration());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, name_);
    }
    if (benchmarkType_ != org.tensorflow.proto.TestResults.BenchmarkType.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, benchmarkType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(runMode_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, runMode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tfVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, tfVersion_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.proto.TestResults)) {
      return super.equals(obj);
    }
    org.tensorflow.proto.TestResults other = (org.tensorflow.proto.TestResults) obj;

    if (!getTarget()
        .equals(other.getTarget())) return false;
    if (hasEntries() != other.hasEntries()) return false;
    if (hasEntries()) {
      if (!getEntries()
          .equals(other.getEntries())) return false;
    }
    if (hasBuildConfiguration() != other.hasBuildConfiguration()) return false;
    if (hasBuildConfiguration()) {
      if (!getBuildConfiguration()
          .equals(other.getBuildConfiguration())) return false;
    }
    if (hasCommitId() != other.hasCommitId()) return false;
    if (hasCommitId()) {
      if (!getCommitId()
          .equals(other.getCommitId())) return false;
    }
    if (getStartTime()
        != other.getStartTime()) return false;
    if (java.lang.Double.doubleToLongBits(getRunTime())
        != java.lang.Double.doubleToLongBits(
            other.getRunTime())) return false;
    if (hasMachineConfiguration() != other.hasMachineConfiguration()) return false;
    if (hasMachineConfiguration()) {
      if (!getMachineConfiguration()
          .equals(other.getMachineConfiguration())) return false;
    }
    if (hasRunConfiguration() != other.hasRunConfiguration()) return false;
    if (hasRunConfiguration()) {
      if (!getRunConfiguration()
          .equals(other.getRunConfiguration())) return false;
    }
    if (!getName()
        .equals(other.getName())) return false;
    if (benchmarkType_ != other.benchmarkType_) return false;
    if (!getRunMode()
        .equals(other.getRunMode())) return false;
    if (!getTfVersion()
        .equals(other.getTfVersion())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TARGET_FIELD_NUMBER;
    hash = (53 * hash) + getTarget().hashCode();
    if (hasEntries()) {
      hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getEntries().hashCode();
    }
    if (hasBuildConfiguration()) {
      hash = (37 * hash) + BUILD_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getBuildConfiguration().hashCode();
    }
    if (hasCommitId()) {
      hash = (37 * hash) + COMMIT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCommitId().hashCode();
    }
    hash = (37 * hash) + START_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStartTime());
    hash = (37 * hash) + RUN_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getRunTime()));
    if (hasMachineConfiguration()) {
      hash = (37 * hash) + MACHINE_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getMachineConfiguration().hashCode();
    }
    if (hasRunConfiguration()) {
      hash = (37 * hash) + RUN_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getRunConfiguration().hashCode();
    }
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + BENCHMARK_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + benchmarkType_;
    hash = (37 * hash) + RUN_MODE_FIELD_NUMBER;
    hash = (53 * hash) + getRunMode().hashCode();
    hash = (37 * hash) + TF_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getTfVersion().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.proto.TestResults parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.TestResults parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.TestResults parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.TestResults parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.TestResults parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.TestResults parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.proto.TestResults prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The output of one benchmark / test run.  Each run contains a list of
   * tests or benchmarks, stored as BenchmarkEntry messages.
   * This message should be emitted by the reporter (which runs the
   * test / BM in a subprocess and then reads the emitted BenchmarkEntry messages;
   * usually from a serialized json file, finally collecting them along
   * with additional information about the test run.
   * </pre>
   *
   * Protobuf type {@code tensorflow.TestResults}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.TestResults)
      org.tensorflow.proto.TestResultsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.TestLogProtos.internal_static_tensorflow_TestResults_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.TestLogProtos.internal_static_tensorflow_TestResults_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.TestResults.class, org.tensorflow.proto.TestResults.Builder.class);
    }

    // Construct using org.tensorflow.proto.TestResults.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      target_ = "";

      if (entriesBuilder_ == null) {
        entries_ = null;
      } else {
        entries_ = null;
        entriesBuilder_ = null;
      }
      if (buildConfigurationBuilder_ == null) {
        buildConfiguration_ = null;
      } else {
        buildConfiguration_ = null;
        buildConfigurationBuilder_ = null;
      }
      if (commitIdBuilder_ == null) {
        commitId_ = null;
      } else {
        commitId_ = null;
        commitIdBuilder_ = null;
      }
      startTime_ = 0L;

      runTime_ = 0D;

      if (machineConfigurationBuilder_ == null) {
        machineConfiguration_ = null;
      } else {
        machineConfiguration_ = null;
        machineConfigurationBuilder_ = null;
      }
      if (runConfigurationBuilder_ == null) {
        runConfiguration_ = null;
      } else {
        runConfiguration_ = null;
        runConfigurationBuilder_ = null;
      }
      name_ = "";

      benchmarkType_ = 0;

      runMode_ = "";

      tfVersion_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.proto.TestLogProtos.internal_static_tensorflow_TestResults_descriptor;
    }

    @java.lang.Override
    public org.tensorflow.proto.TestResults getDefaultInstanceForType() {
      return org.tensorflow.proto.TestResults.getDefaultInstance();
    }

    @java.lang.Override
    public org.tensorflow.proto.TestResults build() {
      org.tensorflow.proto.TestResults result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tensorflow.proto.TestResults buildPartial() {
      org.tensorflow.proto.TestResults result = new org.tensorflow.proto.TestResults(this);
      result.target_ = target_;
      if (entriesBuilder_ == null) {
        result.entries_ = entries_;
      } else {
        result.entries_ = entriesBuilder_.build();
      }
      if (buildConfigurationBuilder_ == null) {
        result.buildConfiguration_ = buildConfiguration_;
      } else {
        result.buildConfiguration_ = buildConfigurationBuilder_.build();
      }
      if (commitIdBuilder_ == null) {
        result.commitId_ = commitId_;
      } else {
        result.commitId_ = commitIdBuilder_.build();
      }
      result.startTime_ = startTime_;
      result.runTime_ = runTime_;
      if (machineConfigurationBuilder_ == null) {
        result.machineConfiguration_ = machineConfiguration_;
      } else {
        result.machineConfiguration_ = machineConfigurationBuilder_.build();
      }
      if (runConfigurationBuilder_ == null) {
        result.runConfiguration_ = runConfiguration_;
      } else {
        result.runConfiguration_ = runConfigurationBuilder_.build();
      }
      result.name_ = name_;
      result.benchmarkType_ = benchmarkType_;
      result.runMode_ = runMode_;
      result.tfVersion_ = tfVersion_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.proto.TestResults) {
        return mergeFrom((org.tensorflow.proto.TestResults)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.proto.TestResults other) {
      if (other == org.tensorflow.proto.TestResults.getDefaultInstance()) return this;
      if (!other.getTarget().isEmpty()) {
        target_ = other.target_;
        onChanged();
      }
      if (other.hasEntries()) {
        mergeEntries(other.getEntries());
      }
      if (other.hasBuildConfiguration()) {
        mergeBuildConfiguration(other.getBuildConfiguration());
      }
      if (other.hasCommitId()) {
        mergeCommitId(other.getCommitId());
      }
      if (other.getStartTime() != 0L) {
        setStartTime(other.getStartTime());
      }
      if (other.getRunTime() != 0D) {
        setRunTime(other.getRunTime());
      }
      if (other.hasMachineConfiguration()) {
        mergeMachineConfiguration(other.getMachineConfiguration());
      }
      if (other.hasRunConfiguration()) {
        mergeRunConfiguration(other.getRunConfiguration());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.benchmarkType_ != 0) {
        setBenchmarkTypeValue(other.getBenchmarkTypeValue());
      }
      if (!other.getRunMode().isEmpty()) {
        runMode_ = other.runMode_;
        onChanged();
      }
      if (!other.getTfVersion().isEmpty()) {
        tfVersion_ = other.tfVersion_;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              target_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getEntriesFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBuildConfigurationFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getCommitIdFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 34
            case 40: {
              startTime_ = input.readInt64();

              break;
            } // case 40
            case 49: {
              runTime_ = input.readDouble();

              break;
            } // case 49
            case 58: {
              input.readMessage(
                  getMachineConfigurationFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getRunConfigurationFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 66
            case 74: {
              name_ = input.readStringRequireUtf8();

              break;
            } // case 74
            case 80: {
              benchmarkType_ = input.readEnum();

              break;
            } // case 80
            case 90: {
              runMode_ = input.readStringRequireUtf8();

              break;
            } // case 90
            case 98: {
              tfVersion_ = input.readStringRequireUtf8();

              break;
            } // case 98
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private java.lang.Object target_ = "";
    /**
     * <pre>
     * The target of the run, e.g.:
     *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
     * </pre>
     *
     * <code>string target = 1;</code>
     * @return The target.
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        target_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The target of the run, e.g.:
     *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
     * </pre>
     *
     * <code>string target = 1;</code>
     * @return The bytes for target.
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The target of the run, e.g.:
     *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
     * </pre>
     *
     * <code>string target = 1;</code>
     * @param value The target to set.
     * @return This builder for chaining.
     */
    public Builder setTarget(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      target_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The target of the run, e.g.:
     *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
     * </pre>
     *
     * <code>string target = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTarget() {
      
      target_ = getDefaultInstance().getTarget();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The target of the run, e.g.:
     *  //tensorflow/core:kernels_adjust_contrast_op_benchmark_test
     * </pre>
     *
     * <code>string target = 1;</code>
     * @param value The bytes for target to set.
     * @return This builder for chaining.
     */
    public Builder setTargetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      target_ = value;
      onChanged();
      return this;
    }

    private org.tensorflow.proto.BenchmarkEntries entries_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.BenchmarkEntries, org.tensorflow.proto.BenchmarkEntries.Builder, org.tensorflow.proto.BenchmarkEntriesOrBuilder> entriesBuilder_;
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     * @return Whether the entries field is set.
     */
    public boolean hasEntries() {
      return entriesBuilder_ != null || entries_ != null;
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     * @return The entries.
     */
    public org.tensorflow.proto.BenchmarkEntries getEntries() {
      if (entriesBuilder_ == null) {
        return entries_ == null ? org.tensorflow.proto.BenchmarkEntries.getDefaultInstance() : entries_;
      } else {
        return entriesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    public Builder setEntries(org.tensorflow.proto.BenchmarkEntries value) {
      if (entriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entries_ = value;
        onChanged();
      } else {
        entriesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    public Builder setEntries(
        org.tensorflow.proto.BenchmarkEntries.Builder builderForValue) {
      if (entriesBuilder_ == null) {
        entries_ = builderForValue.build();
        onChanged();
      } else {
        entriesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    public Builder mergeEntries(org.tensorflow.proto.BenchmarkEntries value) {
      if (entriesBuilder_ == null) {
        if (entries_ != null) {
          entries_ =
            org.tensorflow.proto.BenchmarkEntries.newBuilder(entries_).mergeFrom(value).buildPartial();
        } else {
          entries_ = value;
        }
        onChanged();
      } else {
        entriesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    public Builder clearEntries() {
      if (entriesBuilder_ == null) {
        entries_ = null;
        onChanged();
      } else {
        entries_ = null;
        entriesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    public org.tensorflow.proto.BenchmarkEntries.Builder getEntriesBuilder() {
      
      onChanged();
      return getEntriesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    public org.tensorflow.proto.BenchmarkEntriesOrBuilder getEntriesOrBuilder() {
      if (entriesBuilder_ != null) {
        return entriesBuilder_.getMessageOrBuilder();
      } else {
        return entries_ == null ?
            org.tensorflow.proto.BenchmarkEntries.getDefaultInstance() : entries_;
      }
    }
    /**
     * <pre>
     * The list of tests or benchmarks in this run.
     * </pre>
     *
     * <code>.tensorflow.BenchmarkEntries entries = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.BenchmarkEntries, org.tensorflow.proto.BenchmarkEntries.Builder, org.tensorflow.proto.BenchmarkEntriesOrBuilder> 
        getEntriesFieldBuilder() {
      if (entriesBuilder_ == null) {
        entriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.BenchmarkEntries, org.tensorflow.proto.BenchmarkEntries.Builder, org.tensorflow.proto.BenchmarkEntriesOrBuilder>(
                getEntries(),
                getParentForChildren(),
                isClean());
        entries_ = null;
      }
      return entriesBuilder_;
    }

    private org.tensorflow.proto.BuildConfiguration buildConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.BuildConfiguration, org.tensorflow.proto.BuildConfiguration.Builder, org.tensorflow.proto.BuildConfigurationOrBuilder> buildConfigurationBuilder_;
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     * @return Whether the buildConfiguration field is set.
     */
    public boolean hasBuildConfiguration() {
      return buildConfigurationBuilder_ != null || buildConfiguration_ != null;
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     * @return The buildConfiguration.
     */
    public org.tensorflow.proto.BuildConfiguration getBuildConfiguration() {
      if (buildConfigurationBuilder_ == null) {
        return buildConfiguration_ == null ? org.tensorflow.proto.BuildConfiguration.getDefaultInstance() : buildConfiguration_;
      } else {
        return buildConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    public Builder setBuildConfiguration(org.tensorflow.proto.BuildConfiguration value) {
      if (buildConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        buildConfiguration_ = value;
        onChanged();
      } else {
        buildConfigurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    public Builder setBuildConfiguration(
        org.tensorflow.proto.BuildConfiguration.Builder builderForValue) {
      if (buildConfigurationBuilder_ == null) {
        buildConfiguration_ = builderForValue.build();
        onChanged();
      } else {
        buildConfigurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    public Builder mergeBuildConfiguration(org.tensorflow.proto.BuildConfiguration value) {
      if (buildConfigurationBuilder_ == null) {
        if (buildConfiguration_ != null) {
          buildConfiguration_ =
            org.tensorflow.proto.BuildConfiguration.newBuilder(buildConfiguration_).mergeFrom(value).buildPartial();
        } else {
          buildConfiguration_ = value;
        }
        onChanged();
      } else {
        buildConfigurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    public Builder clearBuildConfiguration() {
      if (buildConfigurationBuilder_ == null) {
        buildConfiguration_ = null;
        onChanged();
      } else {
        buildConfiguration_ = null;
        buildConfigurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    public org.tensorflow.proto.BuildConfiguration.Builder getBuildConfigurationBuilder() {
      
      onChanged();
      return getBuildConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    public org.tensorflow.proto.BuildConfigurationOrBuilder getBuildConfigurationOrBuilder() {
      if (buildConfigurationBuilder_ != null) {
        return buildConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return buildConfiguration_ == null ?
            org.tensorflow.proto.BuildConfiguration.getDefaultInstance() : buildConfiguration_;
      }
    }
    /**
     * <pre>
     * The configuration of the build (compiled opt? with cuda? any copts?)
     * </pre>
     *
     * <code>.tensorflow.BuildConfiguration build_configuration = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.BuildConfiguration, org.tensorflow.proto.BuildConfiguration.Builder, org.tensorflow.proto.BuildConfigurationOrBuilder> 
        getBuildConfigurationFieldBuilder() {
      if (buildConfigurationBuilder_ == null) {
        buildConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.BuildConfiguration, org.tensorflow.proto.BuildConfiguration.Builder, org.tensorflow.proto.BuildConfigurationOrBuilder>(
                getBuildConfiguration(),
                getParentForChildren(),
                isClean());
        buildConfiguration_ = null;
      }
      return buildConfigurationBuilder_;
    }

    private org.tensorflow.proto.CommitId commitId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.CommitId, org.tensorflow.proto.CommitId.Builder, org.tensorflow.proto.CommitIdOrBuilder> commitIdBuilder_;
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     * @return Whether the commitId field is set.
     */
    public boolean hasCommitId() {
      return commitIdBuilder_ != null || commitId_ != null;
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     * @return The commitId.
     */
    public org.tensorflow.proto.CommitId getCommitId() {
      if (commitIdBuilder_ == null) {
        return commitId_ == null ? org.tensorflow.proto.CommitId.getDefaultInstance() : commitId_;
      } else {
        return commitIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    public Builder setCommitId(org.tensorflow.proto.CommitId value) {
      if (commitIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        commitId_ = value;
        onChanged();
      } else {
        commitIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    public Builder setCommitId(
        org.tensorflow.proto.CommitId.Builder builderForValue) {
      if (commitIdBuilder_ == null) {
        commitId_ = builderForValue.build();
        onChanged();
      } else {
        commitIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    public Builder mergeCommitId(org.tensorflow.proto.CommitId value) {
      if (commitIdBuilder_ == null) {
        if (commitId_ != null) {
          commitId_ =
            org.tensorflow.proto.CommitId.newBuilder(commitId_).mergeFrom(value).buildPartial();
        } else {
          commitId_ = value;
        }
        onChanged();
      } else {
        commitIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    public Builder clearCommitId() {
      if (commitIdBuilder_ == null) {
        commitId_ = null;
        onChanged();
      } else {
        commitId_ = null;
        commitIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    public org.tensorflow.proto.CommitId.Builder getCommitIdBuilder() {
      
      onChanged();
      return getCommitIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    public org.tensorflow.proto.CommitIdOrBuilder getCommitIdOrBuilder() {
      if (commitIdBuilder_ != null) {
        return commitIdBuilder_.getMessageOrBuilder();
      } else {
        return commitId_ == null ?
            org.tensorflow.proto.CommitId.getDefaultInstance() : commitId_;
      }
    }
    /**
     * <pre>
     * The commit id (git hash or changelist)
     * </pre>
     *
     * <code>.tensorflow.CommitId commit_id = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.CommitId, org.tensorflow.proto.CommitId.Builder, org.tensorflow.proto.CommitIdOrBuilder> 
        getCommitIdFieldBuilder() {
      if (commitIdBuilder_ == null) {
        commitIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.CommitId, org.tensorflow.proto.CommitId.Builder, org.tensorflow.proto.CommitIdOrBuilder>(
                getCommitId(),
                getParentForChildren(),
                isClean());
        commitId_ = null;
      }
      return commitIdBuilder_;
    }

    private long startTime_ ;
    /**
     * <pre>
     * The time the run started (in seconds of UTC time since Unix epoch)
     * </pre>
     *
     * <code>int64 start_time = 5;</code>
     * @return The startTime.
     */
    @java.lang.Override
    public long getStartTime() {
      return startTime_;
    }
    /**
     * <pre>
     * The time the run started (in seconds of UTC time since Unix epoch)
     * </pre>
     *
     * <code>int64 start_time = 5;</code>
     * @param value The startTime to set.
     * @return This builder for chaining.
     */
    public Builder setStartTime(long value) {
      
      startTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The time the run started (in seconds of UTC time since Unix epoch)
     * </pre>
     *
     * <code>int64 start_time = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartTime() {
      
      startTime_ = 0L;
      onChanged();
      return this;
    }

    private double runTime_ ;
    /**
     * <pre>
     * The amount of time the total run took (wall time in seconds)
     * </pre>
     *
     * <code>double run_time = 6;</code>
     * @return The runTime.
     */
    @java.lang.Override
    public double getRunTime() {
      return runTime_;
    }
    /**
     * <pre>
     * The amount of time the total run took (wall time in seconds)
     * </pre>
     *
     * <code>double run_time = 6;</code>
     * @param value The runTime to set.
     * @return This builder for chaining.
     */
    public Builder setRunTime(double value) {
      
      runTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The amount of time the total run took (wall time in seconds)
     * </pre>
     *
     * <code>double run_time = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearRunTime() {
      
      runTime_ = 0D;
      onChanged();
      return this;
    }

    private org.tensorflow.proto.MachineConfiguration machineConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.MachineConfiguration, org.tensorflow.proto.MachineConfiguration.Builder, org.tensorflow.proto.MachineConfigurationOrBuilder> machineConfigurationBuilder_;
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     * @return Whether the machineConfiguration field is set.
     */
    public boolean hasMachineConfiguration() {
      return machineConfigurationBuilder_ != null || machineConfiguration_ != null;
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     * @return The machineConfiguration.
     */
    public org.tensorflow.proto.MachineConfiguration getMachineConfiguration() {
      if (machineConfigurationBuilder_ == null) {
        return machineConfiguration_ == null ? org.tensorflow.proto.MachineConfiguration.getDefaultInstance() : machineConfiguration_;
      } else {
        return machineConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    public Builder setMachineConfiguration(org.tensorflow.proto.MachineConfiguration value) {
      if (machineConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        machineConfiguration_ = value;
        onChanged();
      } else {
        machineConfigurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    public Builder setMachineConfiguration(
        org.tensorflow.proto.MachineConfiguration.Builder builderForValue) {
      if (machineConfigurationBuilder_ == null) {
        machineConfiguration_ = builderForValue.build();
        onChanged();
      } else {
        machineConfigurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    public Builder mergeMachineConfiguration(org.tensorflow.proto.MachineConfiguration value) {
      if (machineConfigurationBuilder_ == null) {
        if (machineConfiguration_ != null) {
          machineConfiguration_ =
            org.tensorflow.proto.MachineConfiguration.newBuilder(machineConfiguration_).mergeFrom(value).buildPartial();
        } else {
          machineConfiguration_ = value;
        }
        onChanged();
      } else {
        machineConfigurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    public Builder clearMachineConfiguration() {
      if (machineConfigurationBuilder_ == null) {
        machineConfiguration_ = null;
        onChanged();
      } else {
        machineConfiguration_ = null;
        machineConfigurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    public org.tensorflow.proto.MachineConfiguration.Builder getMachineConfigurationBuilder() {
      
      onChanged();
      return getMachineConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    public org.tensorflow.proto.MachineConfigurationOrBuilder getMachineConfigurationOrBuilder() {
      if (machineConfigurationBuilder_ != null) {
        return machineConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return machineConfiguration_ == null ?
            org.tensorflow.proto.MachineConfiguration.getDefaultInstance() : machineConfiguration_;
      }
    }
    /**
     * <pre>
     * Machine-specific parameters (Platform and CPU info)
     * </pre>
     *
     * <code>.tensorflow.MachineConfiguration machine_configuration = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.MachineConfiguration, org.tensorflow.proto.MachineConfiguration.Builder, org.tensorflow.proto.MachineConfigurationOrBuilder> 
        getMachineConfigurationFieldBuilder() {
      if (machineConfigurationBuilder_ == null) {
        machineConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.MachineConfiguration, org.tensorflow.proto.MachineConfiguration.Builder, org.tensorflow.proto.MachineConfigurationOrBuilder>(
                getMachineConfiguration(),
                getParentForChildren(),
                isClean());
        machineConfiguration_ = null;
      }
      return machineConfigurationBuilder_;
    }

    private org.tensorflow.proto.RunConfiguration runConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.RunConfiguration, org.tensorflow.proto.RunConfiguration.Builder, org.tensorflow.proto.RunConfigurationOrBuilder> runConfigurationBuilder_;
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     * @return Whether the runConfiguration field is set.
     */
    public boolean hasRunConfiguration() {
      return runConfigurationBuilder_ != null || runConfiguration_ != null;
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     * @return The runConfiguration.
     */
    public org.tensorflow.proto.RunConfiguration getRunConfiguration() {
      if (runConfigurationBuilder_ == null) {
        return runConfiguration_ == null ? org.tensorflow.proto.RunConfiguration.getDefaultInstance() : runConfiguration_;
      } else {
        return runConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    public Builder setRunConfiguration(org.tensorflow.proto.RunConfiguration value) {
      if (runConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        runConfiguration_ = value;
        onChanged();
      } else {
        runConfigurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    public Builder setRunConfiguration(
        org.tensorflow.proto.RunConfiguration.Builder builderForValue) {
      if (runConfigurationBuilder_ == null) {
        runConfiguration_ = builderForValue.build();
        onChanged();
      } else {
        runConfigurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    public Builder mergeRunConfiguration(org.tensorflow.proto.RunConfiguration value) {
      if (runConfigurationBuilder_ == null) {
        if (runConfiguration_ != null) {
          runConfiguration_ =
            org.tensorflow.proto.RunConfiguration.newBuilder(runConfiguration_).mergeFrom(value).buildPartial();
        } else {
          runConfiguration_ = value;
        }
        onChanged();
      } else {
        runConfigurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    public Builder clearRunConfiguration() {
      if (runConfigurationBuilder_ == null) {
        runConfiguration_ = null;
        onChanged();
      } else {
        runConfiguration_ = null;
        runConfigurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    public org.tensorflow.proto.RunConfiguration.Builder getRunConfigurationBuilder() {
      
      onChanged();
      return getRunConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    public org.tensorflow.proto.RunConfigurationOrBuilder getRunConfigurationOrBuilder() {
      if (runConfigurationBuilder_ != null) {
        return runConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return runConfiguration_ == null ?
            org.tensorflow.proto.RunConfiguration.getDefaultInstance() : runConfiguration_;
      }
    }
    /**
     * <pre>
     * Run-specific parameters (arguments, etc)
     * </pre>
     *
     * <code>.tensorflow.RunConfiguration run_configuration = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.RunConfiguration, org.tensorflow.proto.RunConfiguration.Builder, org.tensorflow.proto.RunConfigurationOrBuilder> 
        getRunConfigurationFieldBuilder() {
      if (runConfigurationBuilder_ == null) {
        runConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.RunConfiguration, org.tensorflow.proto.RunConfiguration.Builder, org.tensorflow.proto.RunConfigurationOrBuilder>(
                getRunConfiguration(),
                getParentForChildren(),
                isClean());
        runConfiguration_ = null;
      }
      return runConfigurationBuilder_;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Benchmark target identifier.
     * </pre>
     *
     * <code>string name = 9;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Benchmark target identifier.
     * </pre>
     *
     * <code>string name = 9;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Benchmark target identifier.
     * </pre>
     *
     * <code>string name = 9;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Benchmark target identifier.
     * </pre>
     *
     * <code>string name = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Benchmark target identifier.
     * </pre>
     *
     * <code>string name = 9;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int benchmarkType_ = 0;
    /**
     * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
     * @return The enum numeric value on the wire for benchmarkType.
     */
    @java.lang.Override public int getBenchmarkTypeValue() {
      return benchmarkType_;
    }
    /**
     * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
     * @param value The enum numeric value on the wire for benchmarkType to set.
     * @return This builder for chaining.
     */
    public Builder setBenchmarkTypeValue(int value) {
      
      benchmarkType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
     * @return The benchmarkType.
     */
    @java.lang.Override
    public org.tensorflow.proto.TestResults.BenchmarkType getBenchmarkType() {
      @SuppressWarnings("deprecation")
      org.tensorflow.proto.TestResults.BenchmarkType result = org.tensorflow.proto.TestResults.BenchmarkType.valueOf(benchmarkType_);
      return result == null ? org.tensorflow.proto.TestResults.BenchmarkType.UNRECOGNIZED : result;
    }
    /**
     * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
     * @param value The benchmarkType to set.
     * @return This builder for chaining.
     */
    public Builder setBenchmarkType(org.tensorflow.proto.TestResults.BenchmarkType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      benchmarkType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.tensorflow.TestResults.BenchmarkType benchmark_type = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearBenchmarkType() {
      
      benchmarkType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object runMode_ = "";
    /**
     * <pre>
     * Used for differentiating between continuous and debug builds.
     * Must be one of:
     * * cbuild: results from continuous build.
     * * presubmit: results from oneshot requests.
     * * culprit: results from culprit finder rerun.
     * </pre>
     *
     * <code>string run_mode = 11;</code>
     * @return The runMode.
     */
    public java.lang.String getRunMode() {
      java.lang.Object ref = runMode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        runMode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Used for differentiating between continuous and debug builds.
     * Must be one of:
     * * cbuild: results from continuous build.
     * * presubmit: results from oneshot requests.
     * * culprit: results from culprit finder rerun.
     * </pre>
     *
     * <code>string run_mode = 11;</code>
     * @return The bytes for runMode.
     */
    public com.google.protobuf.ByteString
        getRunModeBytes() {
      java.lang.Object ref = runMode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        runMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Used for differentiating between continuous and debug builds.
     * Must be one of:
     * * cbuild: results from continuous build.
     * * presubmit: results from oneshot requests.
     * * culprit: results from culprit finder rerun.
     * </pre>
     *
     * <code>string run_mode = 11;</code>
     * @param value The runMode to set.
     * @return This builder for chaining.
     */
    public Builder setRunMode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      runMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used for differentiating between continuous and debug builds.
     * Must be one of:
     * * cbuild: results from continuous build.
     * * presubmit: results from oneshot requests.
     * * culprit: results from culprit finder rerun.
     * </pre>
     *
     * <code>string run_mode = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearRunMode() {
      
      runMode_ = getDefaultInstance().getRunMode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used for differentiating between continuous and debug builds.
     * Must be one of:
     * * cbuild: results from continuous build.
     * * presubmit: results from oneshot requests.
     * * culprit: results from culprit finder rerun.
     * </pre>
     *
     * <code>string run_mode = 11;</code>
     * @param value The bytes for runMode to set.
     * @return This builder for chaining.
     */
    public Builder setRunModeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      runMode_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object tfVersion_ = "";
    /**
     * <pre>
     * TensorFlow version this benchmark runs against.
     * This can be either set to full version or just the major version.
     * </pre>
     *
     * <code>string tf_version = 12;</code>
     * @return The tfVersion.
     */
    public java.lang.String getTfVersion() {
      java.lang.Object ref = tfVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tfVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * TensorFlow version this benchmark runs against.
     * This can be either set to full version or just the major version.
     * </pre>
     *
     * <code>string tf_version = 12;</code>
     * @return The bytes for tfVersion.
     */
    public com.google.protobuf.ByteString
        getTfVersionBytes() {
      java.lang.Object ref = tfVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tfVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * TensorFlow version this benchmark runs against.
     * This can be either set to full version or just the major version.
     * </pre>
     *
     * <code>string tf_version = 12;</code>
     * @param value The tfVersion to set.
     * @return This builder for chaining.
     */
    public Builder setTfVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tfVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TensorFlow version this benchmark runs against.
     * This can be either set to full version or just the major version.
     * </pre>
     *
     * <code>string tf_version = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTfVersion() {
      
      tfVersion_ = getDefaultInstance().getTfVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TensorFlow version this benchmark runs against.
     * This can be either set to full version or just the major version.
     * </pre>
     *
     * <code>string tf_version = 12;</code>
     * @param value The bytes for tfVersion to set.
     * @return This builder for chaining.
     */
    public Builder setTfVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tfVersion_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.TestResults)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.TestResults)
  private static final org.tensorflow.proto.TestResults DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.proto.TestResults();
  }

  public static org.tensorflow.proto.TestResults getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TestResults>
      PARSER = new com.google.protobuf.AbstractParser<TestResults>() {
    @java.lang.Override
    public TestResults parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TestResults> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TestResults> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tensorflow.proto.TestResults getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

