// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/meta_graph.proto

package org.tensorflow.proto.framework;

/**
 * <pre>
 * Information about a Tensor necessary for feeding or retrieval.
 * </pre>
 *
 * Protobuf type {@code tensorflow.TensorInfo}
 */
public  final class TensorInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.TensorInfo)
    TensorInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TensorInfo.newBuilder() to construct.
  private TensorInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TensorInfo() {
    dtype_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TensorInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TensorInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            encodingCase_ = 1;
            encoding_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            dtype_ = rawValue;
            break;
          }
          case 26: {
            org.tensorflow.proto.framework.TensorShapeProto.Builder subBuilder = null;
            if (tensorShape_ != null) {
              subBuilder = tensorShape_.toBuilder();
            }
            tensorShape_ = input.readMessage(org.tensorflow.proto.framework.TensorShapeProto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tensorShape_);
              tensorShape_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder subBuilder = null;
            if (encodingCase_ == 4) {
              subBuilder = ((org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_).toBuilder();
            }
            encoding_ =
                input.readMessage(org.tensorflow.proto.framework.TensorInfo.CooSparse.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_);
              encoding_ = subBuilder.buildPartial();
            }
            encodingCase_ = 4;
            break;
          }
          case 42: {
            org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder subBuilder = null;
            if (encodingCase_ == 5) {
              subBuilder = ((org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_).toBuilder();
            }
            encoding_ =
                input.readMessage(org.tensorflow.proto.framework.TensorInfo.CompositeTensor.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_);
              encoding_ = subBuilder.buildPartial();
            }
            encodingCase_ = 5;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.proto.framework.TensorInfo.class, org.tensorflow.proto.framework.TensorInfo.Builder.class);
  }

  public interface CooSparseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.TensorInfo.CooSparse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The shape of the values Tensor is [?].  Its dtype must be the dtype of
     * the SparseTensor as a whole, given in the enclosing TensorInfo.
     * </pre>
     *
     * <code>string values_tensor_name = 1;</code>
     */
    java.lang.String getValuesTensorName();
    /**
     * <pre>
     * The shape of the values Tensor is [?].  Its dtype must be the dtype of
     * the SparseTensor as a whole, given in the enclosing TensorInfo.
     * </pre>
     *
     * <code>string values_tensor_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getValuesTensorNameBytes();

    /**
     * <pre>
     * The indices Tensor must have dtype int64 and shape [?, ?].
     * </pre>
     *
     * <code>string indices_tensor_name = 2;</code>
     */
    java.lang.String getIndicesTensorName();
    /**
     * <pre>
     * The indices Tensor must have dtype int64 and shape [?, ?].
     * </pre>
     *
     * <code>string indices_tensor_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getIndicesTensorNameBytes();

    /**
     * <pre>
     * The dynamic logical shape represented by the SparseTensor is recorded in
     * the Tensor referenced here.  It must have dtype int64 and shape [?].
     * </pre>
     *
     * <code>string dense_shape_tensor_name = 3;</code>
     */
    java.lang.String getDenseShapeTensorName();
    /**
     * <pre>
     * The dynamic logical shape represented by the SparseTensor is recorded in
     * the Tensor referenced here.  It must have dtype int64 and shape [?].
     * </pre>
     *
     * <code>string dense_shape_tensor_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getDenseShapeTensorNameBytes();
  }
  /**
   * <pre>
   * For sparse tensors, The COO encoding stores a triple of values, indices,
   * and shape.
   * </pre>
   *
   * Protobuf type {@code tensorflow.TensorInfo.CooSparse}
   */
  public  static final class CooSparse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.TensorInfo.CooSparse)
      CooSparseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CooSparse.newBuilder() to construct.
    private CooSparse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CooSparse() {
      valuesTensorName_ = "";
      indicesTensorName_ = "";
      denseShapeTensorName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CooSparse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CooSparse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              valuesTensorName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              indicesTensorName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              denseShapeTensorName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CooSparse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CooSparse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.framework.TensorInfo.CooSparse.class, org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder.class);
    }

    public static final int VALUES_TENSOR_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object valuesTensorName_;
    /**
     * <pre>
     * The shape of the values Tensor is [?].  Its dtype must be the dtype of
     * the SparseTensor as a whole, given in the enclosing TensorInfo.
     * </pre>
     *
     * <code>string values_tensor_name = 1;</code>
     */
    public java.lang.String getValuesTensorName() {
      java.lang.Object ref = valuesTensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        valuesTensorName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The shape of the values Tensor is [?].  Its dtype must be the dtype of
     * the SparseTensor as a whole, given in the enclosing TensorInfo.
     * </pre>
     *
     * <code>string values_tensor_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getValuesTensorNameBytes() {
      java.lang.Object ref = valuesTensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        valuesTensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDICES_TENSOR_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object indicesTensorName_;
    /**
     * <pre>
     * The indices Tensor must have dtype int64 and shape [?, ?].
     * </pre>
     *
     * <code>string indices_tensor_name = 2;</code>
     */
    public java.lang.String getIndicesTensorName() {
      java.lang.Object ref = indicesTensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        indicesTensorName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The indices Tensor must have dtype int64 and shape [?, ?].
     * </pre>
     *
     * <code>string indices_tensor_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIndicesTensorNameBytes() {
      java.lang.Object ref = indicesTensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        indicesTensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DENSE_SHAPE_TENSOR_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object denseShapeTensorName_;
    /**
     * <pre>
     * The dynamic logical shape represented by the SparseTensor is recorded in
     * the Tensor referenced here.  It must have dtype int64 and shape [?].
     * </pre>
     *
     * <code>string dense_shape_tensor_name = 3;</code>
     */
    public java.lang.String getDenseShapeTensorName() {
      java.lang.Object ref = denseShapeTensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denseShapeTensorName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The dynamic logical shape represented by the SparseTensor is recorded in
     * the Tensor referenced here.  It must have dtype int64 and shape [?].
     * </pre>
     *
     * <code>string dense_shape_tensor_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDenseShapeTensorNameBytes() {
      java.lang.Object ref = denseShapeTensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denseShapeTensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getValuesTensorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, valuesTensorName_);
      }
      if (!getIndicesTensorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, indicesTensorName_);
      }
      if (!getDenseShapeTensorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, denseShapeTensorName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getValuesTensorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, valuesTensorName_);
      }
      if (!getIndicesTensorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, indicesTensorName_);
      }
      if (!getDenseShapeTensorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, denseShapeTensorName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.proto.framework.TensorInfo.CooSparse)) {
        return super.equals(obj);
      }
      org.tensorflow.proto.framework.TensorInfo.CooSparse other = (org.tensorflow.proto.framework.TensorInfo.CooSparse) obj;

      if (!getValuesTensorName()
          .equals(other.getValuesTensorName())) return false;
      if (!getIndicesTensorName()
          .equals(other.getIndicesTensorName())) return false;
      if (!getDenseShapeTensorName()
          .equals(other.getDenseShapeTensorName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUES_TENSOR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getValuesTensorName().hashCode();
      hash = (37 * hash) + INDICES_TENSOR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getIndicesTensorName().hashCode();
      hash = (37 * hash) + DENSE_SHAPE_TENSOR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDenseShapeTensorName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CooSparse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.proto.framework.TensorInfo.CooSparse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * For sparse tensors, The COO encoding stores a triple of values, indices,
     * and shape.
     * </pre>
     *
     * Protobuf type {@code tensorflow.TensorInfo.CooSparse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.TensorInfo.CooSparse)
        org.tensorflow.proto.framework.TensorInfo.CooSparseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CooSparse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CooSparse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.proto.framework.TensorInfo.CooSparse.class, org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder.class);
      }

      // Construct using org.tensorflow.proto.framework.TensorInfo.CooSparse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        valuesTensorName_ = "";

        indicesTensorName_ = "";

        denseShapeTensorName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CooSparse_descriptor;
      }

      @java.lang.Override
      public org.tensorflow.proto.framework.TensorInfo.CooSparse getDefaultInstanceForType() {
        return org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
      }

      @java.lang.Override
      public org.tensorflow.proto.framework.TensorInfo.CooSparse build() {
        org.tensorflow.proto.framework.TensorInfo.CooSparse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.tensorflow.proto.framework.TensorInfo.CooSparse buildPartial() {
        org.tensorflow.proto.framework.TensorInfo.CooSparse result = new org.tensorflow.proto.framework.TensorInfo.CooSparse(this);
        result.valuesTensorName_ = valuesTensorName_;
        result.indicesTensorName_ = indicesTensorName_;
        result.denseShapeTensorName_ = denseShapeTensorName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.proto.framework.TensorInfo.CooSparse) {
          return mergeFrom((org.tensorflow.proto.framework.TensorInfo.CooSparse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.proto.framework.TensorInfo.CooSparse other) {
        if (other == org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance()) return this;
        if (!other.getValuesTensorName().isEmpty()) {
          valuesTensorName_ = other.valuesTensorName_;
          onChanged();
        }
        if (!other.getIndicesTensorName().isEmpty()) {
          indicesTensorName_ = other.indicesTensorName_;
          onChanged();
        }
        if (!other.getDenseShapeTensorName().isEmpty()) {
          denseShapeTensorName_ = other.denseShapeTensorName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.proto.framework.TensorInfo.CooSparse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.proto.framework.TensorInfo.CooSparse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object valuesTensorName_ = "";
      /**
       * <pre>
       * The shape of the values Tensor is [?].  Its dtype must be the dtype of
       * the SparseTensor as a whole, given in the enclosing TensorInfo.
       * </pre>
       *
       * <code>string values_tensor_name = 1;</code>
       */
      public java.lang.String getValuesTensorName() {
        java.lang.Object ref = valuesTensorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          valuesTensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The shape of the values Tensor is [?].  Its dtype must be the dtype of
       * the SparseTensor as a whole, given in the enclosing TensorInfo.
       * </pre>
       *
       * <code>string values_tensor_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getValuesTensorNameBytes() {
        java.lang.Object ref = valuesTensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          valuesTensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The shape of the values Tensor is [?].  Its dtype must be the dtype of
       * the SparseTensor as a whole, given in the enclosing TensorInfo.
       * </pre>
       *
       * <code>string values_tensor_name = 1;</code>
       */
      public Builder setValuesTensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        valuesTensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the values Tensor is [?].  Its dtype must be the dtype of
       * the SparseTensor as a whole, given in the enclosing TensorInfo.
       * </pre>
       *
       * <code>string values_tensor_name = 1;</code>
       */
      public Builder clearValuesTensorName() {
        
        valuesTensorName_ = getDefaultInstance().getValuesTensorName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the values Tensor is [?].  Its dtype must be the dtype of
       * the SparseTensor as a whole, given in the enclosing TensorInfo.
       * </pre>
       *
       * <code>string values_tensor_name = 1;</code>
       */
      public Builder setValuesTensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        valuesTensorName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object indicesTensorName_ = "";
      /**
       * <pre>
       * The indices Tensor must have dtype int64 and shape [?, ?].
       * </pre>
       *
       * <code>string indices_tensor_name = 2;</code>
       */
      public java.lang.String getIndicesTensorName() {
        java.lang.Object ref = indicesTensorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          indicesTensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The indices Tensor must have dtype int64 and shape [?, ?].
       * </pre>
       *
       * <code>string indices_tensor_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIndicesTensorNameBytes() {
        java.lang.Object ref = indicesTensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          indicesTensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The indices Tensor must have dtype int64 and shape [?, ?].
       * </pre>
       *
       * <code>string indices_tensor_name = 2;</code>
       */
      public Builder setIndicesTensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        indicesTensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The indices Tensor must have dtype int64 and shape [?, ?].
       * </pre>
       *
       * <code>string indices_tensor_name = 2;</code>
       */
      public Builder clearIndicesTensorName() {
        
        indicesTensorName_ = getDefaultInstance().getIndicesTensorName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The indices Tensor must have dtype int64 and shape [?, ?].
       * </pre>
       *
       * <code>string indices_tensor_name = 2;</code>
       */
      public Builder setIndicesTensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        indicesTensorName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object denseShapeTensorName_ = "";
      /**
       * <pre>
       * The dynamic logical shape represented by the SparseTensor is recorded in
       * the Tensor referenced here.  It must have dtype int64 and shape [?].
       * </pre>
       *
       * <code>string dense_shape_tensor_name = 3;</code>
       */
      public java.lang.String getDenseShapeTensorName() {
        java.lang.Object ref = denseShapeTensorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          denseShapeTensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The dynamic logical shape represented by the SparseTensor is recorded in
       * the Tensor referenced here.  It must have dtype int64 and shape [?].
       * </pre>
       *
       * <code>string dense_shape_tensor_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDenseShapeTensorNameBytes() {
        java.lang.Object ref = denseShapeTensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          denseShapeTensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The dynamic logical shape represented by the SparseTensor is recorded in
       * the Tensor referenced here.  It must have dtype int64 and shape [?].
       * </pre>
       *
       * <code>string dense_shape_tensor_name = 3;</code>
       */
      public Builder setDenseShapeTensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        denseShapeTensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dynamic logical shape represented by the SparseTensor is recorded in
       * the Tensor referenced here.  It must have dtype int64 and shape [?].
       * </pre>
       *
       * <code>string dense_shape_tensor_name = 3;</code>
       */
      public Builder clearDenseShapeTensorName() {
        
        denseShapeTensorName_ = getDefaultInstance().getDenseShapeTensorName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dynamic logical shape represented by the SparseTensor is recorded in
       * the Tensor referenced here.  It must have dtype int64 and shape [?].
       * </pre>
       *
       * <code>string dense_shape_tensor_name = 3;</code>
       */
      public Builder setDenseShapeTensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        denseShapeTensorName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.TensorInfo.CooSparse)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.TensorInfo.CooSparse)
    private static final org.tensorflow.proto.framework.TensorInfo.CooSparse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.proto.framework.TensorInfo.CooSparse();
    }

    public static org.tensorflow.proto.framework.TensorInfo.CooSparse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CooSparse>
        PARSER = new com.google.protobuf.AbstractParser<CooSparse>() {
      @java.lang.Override
      public CooSparse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CooSparse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CooSparse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CooSparse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.TensorInfo.CooSparse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CompositeTensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.TensorInfo.CompositeTensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The serialized TypeSpec for the composite tensor.
     * </pre>
     *
     * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
     */
    boolean hasTypeSpec();
    /**
     * <pre>
     * The serialized TypeSpec for the composite tensor.
     * </pre>
     *
     * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
     */
    org.tensorflow.proto.framework.TypeSpecProto getTypeSpec();
    /**
     * <pre>
     * The serialized TypeSpec for the composite tensor.
     * </pre>
     *
     * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
     */
    org.tensorflow.proto.framework.TypeSpecProtoOrBuilder getTypeSpecOrBuilder();

    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    java.util.List<org.tensorflow.proto.framework.TensorInfo> 
        getComponentsList();
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    org.tensorflow.proto.framework.TensorInfo getComponents(int index);
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    int getComponentsCount();
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    java.util.List<? extends org.tensorflow.proto.framework.TensorInfoOrBuilder> 
        getComponentsOrBuilderList();
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    org.tensorflow.proto.framework.TensorInfoOrBuilder getComponentsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Generic encoding for composite tensors.
   * </pre>
   *
   * Protobuf type {@code tensorflow.TensorInfo.CompositeTensor}
   */
  public  static final class CompositeTensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.TensorInfo.CompositeTensor)
      CompositeTensorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompositeTensor.newBuilder() to construct.
    private CompositeTensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompositeTensor() {
      components_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CompositeTensor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompositeTensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.tensorflow.proto.framework.TypeSpecProto.Builder subBuilder = null;
              if (typeSpec_ != null) {
                subBuilder = typeSpec_.toBuilder();
              }
              typeSpec_ = input.readMessage(org.tensorflow.proto.framework.TypeSpecProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeSpec_);
                typeSpec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                components_ = new java.util.ArrayList<org.tensorflow.proto.framework.TensorInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              components_.add(
                  input.readMessage(org.tensorflow.proto.framework.TensorInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          components_ = java.util.Collections.unmodifiableList(components_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CompositeTensor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CompositeTensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.framework.TensorInfo.CompositeTensor.class, org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder.class);
    }

    public static final int TYPE_SPEC_FIELD_NUMBER = 1;
    private org.tensorflow.proto.framework.TypeSpecProto typeSpec_;
    /**
     * <pre>
     * The serialized TypeSpec for the composite tensor.
     * </pre>
     *
     * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
     */
    public boolean hasTypeSpec() {
      return typeSpec_ != null;
    }
    /**
     * <pre>
     * The serialized TypeSpec for the composite tensor.
     * </pre>
     *
     * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
     */
    public org.tensorflow.proto.framework.TypeSpecProto getTypeSpec() {
      return typeSpec_ == null ? org.tensorflow.proto.framework.TypeSpecProto.getDefaultInstance() : typeSpec_;
    }
    /**
     * <pre>
     * The serialized TypeSpec for the composite tensor.
     * </pre>
     *
     * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
     */
    public org.tensorflow.proto.framework.TypeSpecProtoOrBuilder getTypeSpecOrBuilder() {
      return getTypeSpec();
    }

    public static final int COMPONENTS_FIELD_NUMBER = 2;
    private java.util.List<org.tensorflow.proto.framework.TensorInfo> components_;
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    public java.util.List<org.tensorflow.proto.framework.TensorInfo> getComponentsList() {
      return components_;
    }
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    public java.util.List<? extends org.tensorflow.proto.framework.TensorInfoOrBuilder> 
        getComponentsOrBuilderList() {
      return components_;
    }
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    public int getComponentsCount() {
      return components_.size();
    }
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo getComponents(int index) {
      return components_.get(index);
    }
    /**
     * <pre>
     * A TensorInfo for each flattened component tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorInfo components = 2;</code>
     */
    public org.tensorflow.proto.framework.TensorInfoOrBuilder getComponentsOrBuilder(
        int index) {
      return components_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeSpec_ != null) {
        output.writeMessage(1, getTypeSpec());
      }
      for (int i = 0; i < components_.size(); i++) {
        output.writeMessage(2, components_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTypeSpec());
      }
      for (int i = 0; i < components_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, components_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.proto.framework.TensorInfo.CompositeTensor)) {
        return super.equals(obj);
      }
      org.tensorflow.proto.framework.TensorInfo.CompositeTensor other = (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) obj;

      if (hasTypeSpec() != other.hasTypeSpec()) return false;
      if (hasTypeSpec()) {
        if (!getTypeSpec()
            .equals(other.getTypeSpec())) return false;
      }
      if (!getComponentsList()
          .equals(other.getComponentsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeSpec()) {
        hash = (37 * hash) + TYPE_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getTypeSpec().hashCode();
      }
      if (getComponentsCount() > 0) {
        hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
        hash = (53 * hash) + getComponentsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.proto.framework.TensorInfo.CompositeTensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Generic encoding for composite tensors.
     * </pre>
     *
     * Protobuf type {@code tensorflow.TensorInfo.CompositeTensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.TensorInfo.CompositeTensor)
        org.tensorflow.proto.framework.TensorInfo.CompositeTensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CompositeTensor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CompositeTensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.proto.framework.TensorInfo.CompositeTensor.class, org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder.class);
      }

      // Construct using org.tensorflow.proto.framework.TensorInfo.CompositeTensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getComponentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (typeSpecBuilder_ == null) {
          typeSpec_ = null;
        } else {
          typeSpec_ = null;
          typeSpecBuilder_ = null;
        }
        if (componentsBuilder_ == null) {
          components_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          componentsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_CompositeTensor_descriptor;
      }

      @java.lang.Override
      public org.tensorflow.proto.framework.TensorInfo.CompositeTensor getDefaultInstanceForType() {
        return org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
      }

      @java.lang.Override
      public org.tensorflow.proto.framework.TensorInfo.CompositeTensor build() {
        org.tensorflow.proto.framework.TensorInfo.CompositeTensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.tensorflow.proto.framework.TensorInfo.CompositeTensor buildPartial() {
        org.tensorflow.proto.framework.TensorInfo.CompositeTensor result = new org.tensorflow.proto.framework.TensorInfo.CompositeTensor(this);
        int from_bitField0_ = bitField0_;
        if (typeSpecBuilder_ == null) {
          result.typeSpec_ = typeSpec_;
        } else {
          result.typeSpec_ = typeSpecBuilder_.build();
        }
        if (componentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            components_ = java.util.Collections.unmodifiableList(components_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.components_ = components_;
        } else {
          result.components_ = componentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.proto.framework.TensorInfo.CompositeTensor) {
          return mergeFrom((org.tensorflow.proto.framework.TensorInfo.CompositeTensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.proto.framework.TensorInfo.CompositeTensor other) {
        if (other == org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance()) return this;
        if (other.hasTypeSpec()) {
          mergeTypeSpec(other.getTypeSpec());
        }
        if (componentsBuilder_ == null) {
          if (!other.components_.isEmpty()) {
            if (components_.isEmpty()) {
              components_ = other.components_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComponentsIsMutable();
              components_.addAll(other.components_);
            }
            onChanged();
          }
        } else {
          if (!other.components_.isEmpty()) {
            if (componentsBuilder_.isEmpty()) {
              componentsBuilder_.dispose();
              componentsBuilder_ = null;
              components_ = other.components_;
              bitField0_ = (bitField0_ & ~0x00000001);
              componentsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getComponentsFieldBuilder() : null;
            } else {
              componentsBuilder_.addAllMessages(other.components_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.proto.framework.TensorInfo.CompositeTensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.tensorflow.proto.framework.TypeSpecProto typeSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.framework.TypeSpecProto, org.tensorflow.proto.framework.TypeSpecProto.Builder, org.tensorflow.proto.framework.TypeSpecProtoOrBuilder> typeSpecBuilder_;
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public boolean hasTypeSpec() {
        return typeSpecBuilder_ != null || typeSpec_ != null;
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public org.tensorflow.proto.framework.TypeSpecProto getTypeSpec() {
        if (typeSpecBuilder_ == null) {
          return typeSpec_ == null ? org.tensorflow.proto.framework.TypeSpecProto.getDefaultInstance() : typeSpec_;
        } else {
          return typeSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public Builder setTypeSpec(org.tensorflow.proto.framework.TypeSpecProto value) {
        if (typeSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeSpec_ = value;
          onChanged();
        } else {
          typeSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public Builder setTypeSpec(
          org.tensorflow.proto.framework.TypeSpecProto.Builder builderForValue) {
        if (typeSpecBuilder_ == null) {
          typeSpec_ = builderForValue.build();
          onChanged();
        } else {
          typeSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public Builder mergeTypeSpec(org.tensorflow.proto.framework.TypeSpecProto value) {
        if (typeSpecBuilder_ == null) {
          if (typeSpec_ != null) {
            typeSpec_ =
              org.tensorflow.proto.framework.TypeSpecProto.newBuilder(typeSpec_).mergeFrom(value).buildPartial();
          } else {
            typeSpec_ = value;
          }
          onChanged();
        } else {
          typeSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public Builder clearTypeSpec() {
        if (typeSpecBuilder_ == null) {
          typeSpec_ = null;
          onChanged();
        } else {
          typeSpec_ = null;
          typeSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public org.tensorflow.proto.framework.TypeSpecProto.Builder getTypeSpecBuilder() {
        
        onChanged();
        return getTypeSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      public org.tensorflow.proto.framework.TypeSpecProtoOrBuilder getTypeSpecOrBuilder() {
        if (typeSpecBuilder_ != null) {
          return typeSpecBuilder_.getMessageOrBuilder();
        } else {
          return typeSpec_ == null ?
              org.tensorflow.proto.framework.TypeSpecProto.getDefaultInstance() : typeSpec_;
        }
      }
      /**
       * <pre>
       * The serialized TypeSpec for the composite tensor.
       * </pre>
       *
       * <code>.tensorflow.TypeSpecProto type_spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.framework.TypeSpecProto, org.tensorflow.proto.framework.TypeSpecProto.Builder, org.tensorflow.proto.framework.TypeSpecProtoOrBuilder> 
          getTypeSpecFieldBuilder() {
        if (typeSpecBuilder_ == null) {
          typeSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.proto.framework.TypeSpecProto, org.tensorflow.proto.framework.TypeSpecProto.Builder, org.tensorflow.proto.framework.TypeSpecProtoOrBuilder>(
                  getTypeSpec(),
                  getParentForChildren(),
                  isClean());
          typeSpec_ = null;
        }
        return typeSpecBuilder_;
      }

      private java.util.List<org.tensorflow.proto.framework.TensorInfo> components_ =
        java.util.Collections.emptyList();
      private void ensureComponentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          components_ = new java.util.ArrayList<org.tensorflow.proto.framework.TensorInfo>(components_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.proto.framework.TensorInfo, org.tensorflow.proto.framework.TensorInfo.Builder, org.tensorflow.proto.framework.TensorInfoOrBuilder> componentsBuilder_;

      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public java.util.List<org.tensorflow.proto.framework.TensorInfo> getComponentsList() {
        if (componentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(components_);
        } else {
          return componentsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public int getComponentsCount() {
        if (componentsBuilder_ == null) {
          return components_.size();
        } else {
          return componentsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public org.tensorflow.proto.framework.TensorInfo getComponents(int index) {
        if (componentsBuilder_ == null) {
          return components_.get(index);
        } else {
          return componentsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder setComponents(
          int index, org.tensorflow.proto.framework.TensorInfo value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.set(index, value);
          onChanged();
        } else {
          componentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder setComponents(
          int index, org.tensorflow.proto.framework.TensorInfo.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder addComponents(org.tensorflow.proto.framework.TensorInfo value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.add(value);
          onChanged();
        } else {
          componentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder addComponents(
          int index, org.tensorflow.proto.framework.TensorInfo value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentsIsMutable();
          components_.add(index, value);
          onChanged();
        } else {
          componentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder addComponents(
          org.tensorflow.proto.framework.TensorInfo.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.add(builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder addComponents(
          int index, org.tensorflow.proto.framework.TensorInfo.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder addAllComponents(
          java.lang.Iterable<? extends org.tensorflow.proto.framework.TensorInfo> values) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, components_);
          onChanged();
        } else {
          componentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder clearComponents() {
        if (componentsBuilder_ == null) {
          components_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          componentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public Builder removeComponents(int index) {
        if (componentsBuilder_ == null) {
          ensureComponentsIsMutable();
          components_.remove(index);
          onChanged();
        } else {
          componentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public org.tensorflow.proto.framework.TensorInfo.Builder getComponentsBuilder(
          int index) {
        return getComponentsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public org.tensorflow.proto.framework.TensorInfoOrBuilder getComponentsOrBuilder(
          int index) {
        if (componentsBuilder_ == null) {
          return components_.get(index);  } else {
          return componentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public java.util.List<? extends org.tensorflow.proto.framework.TensorInfoOrBuilder> 
           getComponentsOrBuilderList() {
        if (componentsBuilder_ != null) {
          return componentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(components_);
        }
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public org.tensorflow.proto.framework.TensorInfo.Builder addComponentsBuilder() {
        return getComponentsFieldBuilder().addBuilder(
            org.tensorflow.proto.framework.TensorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public org.tensorflow.proto.framework.TensorInfo.Builder addComponentsBuilder(
          int index) {
        return getComponentsFieldBuilder().addBuilder(
            index, org.tensorflow.proto.framework.TensorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * A TensorInfo for each flattened component tensor.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorInfo components = 2;</code>
       */
      public java.util.List<org.tensorflow.proto.framework.TensorInfo.Builder> 
           getComponentsBuilderList() {
        return getComponentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.proto.framework.TensorInfo, org.tensorflow.proto.framework.TensorInfo.Builder, org.tensorflow.proto.framework.TensorInfoOrBuilder> 
          getComponentsFieldBuilder() {
        if (componentsBuilder_ == null) {
          componentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.tensorflow.proto.framework.TensorInfo, org.tensorflow.proto.framework.TensorInfo.Builder, org.tensorflow.proto.framework.TensorInfoOrBuilder>(
                  components_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          components_ = null;
        }
        return componentsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.TensorInfo.CompositeTensor)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.TensorInfo.CompositeTensor)
    private static final org.tensorflow.proto.framework.TensorInfo.CompositeTensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.proto.framework.TensorInfo.CompositeTensor();
    }

    public static org.tensorflow.proto.framework.TensorInfo.CompositeTensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompositeTensor>
        PARSER = new com.google.protobuf.AbstractParser<CompositeTensor>() {
      @java.lang.Override
      public CompositeTensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompositeTensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompositeTensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CompositeTensor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.TensorInfo.CompositeTensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int encodingCase_ = 0;
  private java.lang.Object encoding_;
  public enum EncodingCase
      implements com.google.protobuf.Internal.EnumLite {
    NAME(1),
    COO_SPARSE(4),
    COMPOSITE_TENSOR(5),
    ENCODING_NOT_SET(0);
    private final int value;
    private EncodingCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EncodingCase valueOf(int value) {
      return forNumber(value);
    }

    public static EncodingCase forNumber(int value) {
      switch (value) {
        case 1: return NAME;
        case 4: return COO_SPARSE;
        case 5: return COMPOSITE_TENSOR;
        case 0: return ENCODING_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public EncodingCase
  getEncodingCase() {
    return EncodingCase.forNumber(
        encodingCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  /**
   * <pre>
   * For dense `Tensor`s, the name of the tensor in the graph.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = "";
    if (encodingCase_ == 1) {
      ref = encoding_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (encodingCase_ == 1) {
        encoding_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * For dense `Tensor`s, the name of the tensor in the graph.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = "";
    if (encodingCase_ == 1) {
      ref = encoding_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (encodingCase_ == 1) {
        encoding_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COO_SPARSE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * There are many possible encodings of sparse matrices
   * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
   * uses only the COO encoding.  This is supported and documented in the
   * SparseTensor Python class.
   * </pre>
   *
   * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
   */
  public boolean hasCooSparse() {
    return encodingCase_ == 4;
  }
  /**
   * <pre>
   * There are many possible encodings of sparse matrices
   * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
   * uses only the COO encoding.  This is supported and documented in the
   * SparseTensor Python class.
   * </pre>
   *
   * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
   */
  public org.tensorflow.proto.framework.TensorInfo.CooSparse getCooSparse() {
    if (encodingCase_ == 4) {
       return (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_;
    }
    return org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
  }
  /**
   * <pre>
   * There are many possible encodings of sparse matrices
   * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
   * uses only the COO encoding.  This is supported and documented in the
   * SparseTensor Python class.
   * </pre>
   *
   * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
   */
  public org.tensorflow.proto.framework.TensorInfo.CooSparseOrBuilder getCooSparseOrBuilder() {
    if (encodingCase_ == 4) {
       return (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_;
    }
    return org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
  }

  public static final int COMPOSITE_TENSOR_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Generic encoding for CompositeTensors.
   * </pre>
   *
   * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
   */
  public boolean hasCompositeTensor() {
    return encodingCase_ == 5;
  }
  /**
   * <pre>
   * Generic encoding for CompositeTensors.
   * </pre>
   *
   * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
   */
  public org.tensorflow.proto.framework.TensorInfo.CompositeTensor getCompositeTensor() {
    if (encodingCase_ == 5) {
       return (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_;
    }
    return org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
  }
  /**
   * <pre>
   * Generic encoding for CompositeTensors.
   * </pre>
   *
   * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
   */
  public org.tensorflow.proto.framework.TensorInfo.CompositeTensorOrBuilder getCompositeTensorOrBuilder() {
    if (encodingCase_ == 5) {
       return (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_;
    }
    return org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
  }

  public static final int DTYPE_FIELD_NUMBER = 2;
  private int dtype_;
  /**
   * <code>.tensorflow.DataType dtype = 2;</code>
   */
  public int getDtypeValue() {
    return dtype_;
  }
  /**
   * <code>.tensorflow.DataType dtype = 2;</code>
   */
  public org.tensorflow.proto.framework.DataType getDtype() {
    @SuppressWarnings("deprecation")
    org.tensorflow.proto.framework.DataType result = org.tensorflow.proto.framework.DataType.valueOf(dtype_);
    return result == null ? org.tensorflow.proto.framework.DataType.UNRECOGNIZED : result;
  }

  public static final int TENSOR_SHAPE_FIELD_NUMBER = 3;
  private org.tensorflow.proto.framework.TensorShapeProto tensorShape_;
  /**
   * <pre>
   * The static shape should be recorded here, to the extent that it can
   * be known in advance.  In the case of a SparseTensor, this field describes
   * the logical shape of the represented tensor (aka dense_shape).
   * </pre>
   *
   * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
   */
  public boolean hasTensorShape() {
    return tensorShape_ != null;
  }
  /**
   * <pre>
   * The static shape should be recorded here, to the extent that it can
   * be known in advance.  In the case of a SparseTensor, this field describes
   * the logical shape of the represented tensor (aka dense_shape).
   * </pre>
   *
   * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
   */
  public org.tensorflow.proto.framework.TensorShapeProto getTensorShape() {
    return tensorShape_ == null ? org.tensorflow.proto.framework.TensorShapeProto.getDefaultInstance() : tensorShape_;
  }
  /**
   * <pre>
   * The static shape should be recorded here, to the extent that it can
   * be known in advance.  In the case of a SparseTensor, this field describes
   * the logical shape of the represented tensor (aka dense_shape).
   * </pre>
   *
   * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
   */
  public org.tensorflow.proto.framework.TensorShapeProtoOrBuilder getTensorShapeOrBuilder() {
    return getTensorShape();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (encodingCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, encoding_);
    }
    if (dtype_ != org.tensorflow.proto.framework.DataType.DT_INVALID.getNumber()) {
      output.writeEnum(2, dtype_);
    }
    if (tensorShape_ != null) {
      output.writeMessage(3, getTensorShape());
    }
    if (encodingCase_ == 4) {
      output.writeMessage(4, (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_);
    }
    if (encodingCase_ == 5) {
      output.writeMessage(5, (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (encodingCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, encoding_);
    }
    if (dtype_ != org.tensorflow.proto.framework.DataType.DT_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, dtype_);
    }
    if (tensorShape_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTensorShape());
    }
    if (encodingCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_);
    }
    if (encodingCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.proto.framework.TensorInfo)) {
      return super.equals(obj);
    }
    org.tensorflow.proto.framework.TensorInfo other = (org.tensorflow.proto.framework.TensorInfo) obj;

    if (dtype_ != other.dtype_) return false;
    if (hasTensorShape() != other.hasTensorShape()) return false;
    if (hasTensorShape()) {
      if (!getTensorShape()
          .equals(other.getTensorShape())) return false;
    }
    if (!getEncodingCase().equals(other.getEncodingCase())) return false;
    switch (encodingCase_) {
      case 1:
        if (!getName()
            .equals(other.getName())) return false;
        break;
      case 4:
        if (!getCooSparse()
            .equals(other.getCooSparse())) return false;
        break;
      case 5:
        if (!getCompositeTensor()
            .equals(other.getCompositeTensor())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DTYPE_FIELD_NUMBER;
    hash = (53 * hash) + dtype_;
    if (hasTensorShape()) {
      hash = (37 * hash) + TENSOR_SHAPE_FIELD_NUMBER;
      hash = (53 * hash) + getTensorShape().hashCode();
    }
    switch (encodingCase_) {
      case 1:
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        break;
      case 4:
        hash = (37 * hash) + COO_SPARSE_FIELD_NUMBER;
        hash = (53 * hash) + getCooSparse().hashCode();
        break;
      case 5:
        hash = (37 * hash) + COMPOSITE_TENSOR_FIELD_NUMBER;
        hash = (53 * hash) + getCompositeTensor().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.framework.TensorInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.proto.framework.TensorInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Information about a Tensor necessary for feeding or retrieval.
   * </pre>
   *
   * Protobuf type {@code tensorflow.TensorInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.TensorInfo)
      org.tensorflow.proto.framework.TensorInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.framework.TensorInfo.class, org.tensorflow.proto.framework.TensorInfo.Builder.class);
    }

    // Construct using org.tensorflow.proto.framework.TensorInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      dtype_ = 0;

      if (tensorShapeBuilder_ == null) {
        tensorShape_ = null;
      } else {
        tensorShape_ = null;
        tensorShapeBuilder_ = null;
      }
      encodingCase_ = 0;
      encoding_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.proto.framework.MetaGraphProtos.internal_static_tensorflow_TensorInfo_descriptor;
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.TensorInfo getDefaultInstanceForType() {
      return org.tensorflow.proto.framework.TensorInfo.getDefaultInstance();
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.TensorInfo build() {
      org.tensorflow.proto.framework.TensorInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.TensorInfo buildPartial() {
      org.tensorflow.proto.framework.TensorInfo result = new org.tensorflow.proto.framework.TensorInfo(this);
      if (encodingCase_ == 1) {
        result.encoding_ = encoding_;
      }
      if (encodingCase_ == 4) {
        if (cooSparseBuilder_ == null) {
          result.encoding_ = encoding_;
        } else {
          result.encoding_ = cooSparseBuilder_.build();
        }
      }
      if (encodingCase_ == 5) {
        if (compositeTensorBuilder_ == null) {
          result.encoding_ = encoding_;
        } else {
          result.encoding_ = compositeTensorBuilder_.build();
        }
      }
      result.dtype_ = dtype_;
      if (tensorShapeBuilder_ == null) {
        result.tensorShape_ = tensorShape_;
      } else {
        result.tensorShape_ = tensorShapeBuilder_.build();
      }
      result.encodingCase_ = encodingCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.proto.framework.TensorInfo) {
        return mergeFrom((org.tensorflow.proto.framework.TensorInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.proto.framework.TensorInfo other) {
      if (other == org.tensorflow.proto.framework.TensorInfo.getDefaultInstance()) return this;
      if (other.dtype_ != 0) {
        setDtypeValue(other.getDtypeValue());
      }
      if (other.hasTensorShape()) {
        mergeTensorShape(other.getTensorShape());
      }
      switch (other.getEncodingCase()) {
        case NAME: {
          encodingCase_ = 1;
          encoding_ = other.encoding_;
          onChanged();
          break;
        }
        case COO_SPARSE: {
          mergeCooSparse(other.getCooSparse());
          break;
        }
        case COMPOSITE_TENSOR: {
          mergeCompositeTensor(other.getCompositeTensor());
          break;
        }
        case ENCODING_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.proto.framework.TensorInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.proto.framework.TensorInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int encodingCase_ = 0;
    private java.lang.Object encoding_;
    public EncodingCase
        getEncodingCase() {
      return EncodingCase.forNumber(
          encodingCase_);
    }

    public Builder clearEncoding() {
      encodingCase_ = 0;
      encoding_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * For dense `Tensor`s, the name of the tensor in the graph.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = "";
      if (encodingCase_ == 1) {
        ref = encoding_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (encodingCase_ == 1) {
          encoding_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For dense `Tensor`s, the name of the tensor in the graph.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = "";
      if (encodingCase_ == 1) {
        ref = encoding_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (encodingCase_ == 1) {
          encoding_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For dense `Tensor`s, the name of the tensor in the graph.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  encodingCase_ = 1;
      encoding_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For dense `Tensor`s, the name of the tensor in the graph.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public Builder clearName() {
      if (encodingCase_ == 1) {
        encodingCase_ = 0;
        encoding_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * For dense `Tensor`s, the name of the tensor in the graph.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      encodingCase_ = 1;
      encoding_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.framework.TensorInfo.CooSparse, org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder, org.tensorflow.proto.framework.TensorInfo.CooSparseOrBuilder> cooSparseBuilder_;
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public boolean hasCooSparse() {
      return encodingCase_ == 4;
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo.CooSparse getCooSparse() {
      if (cooSparseBuilder_ == null) {
        if (encodingCase_ == 4) {
          return (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_;
        }
        return org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
      } else {
        if (encodingCase_ == 4) {
          return cooSparseBuilder_.getMessage();
        }
        return org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public Builder setCooSparse(org.tensorflow.proto.framework.TensorInfo.CooSparse value) {
      if (cooSparseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encoding_ = value;
        onChanged();
      } else {
        cooSparseBuilder_.setMessage(value);
      }
      encodingCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public Builder setCooSparse(
        org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder builderForValue) {
      if (cooSparseBuilder_ == null) {
        encoding_ = builderForValue.build();
        onChanged();
      } else {
        cooSparseBuilder_.setMessage(builderForValue.build());
      }
      encodingCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public Builder mergeCooSparse(org.tensorflow.proto.framework.TensorInfo.CooSparse value) {
      if (cooSparseBuilder_ == null) {
        if (encodingCase_ == 4 &&
            encoding_ != org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance()) {
          encoding_ = org.tensorflow.proto.framework.TensorInfo.CooSparse.newBuilder((org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_)
              .mergeFrom(value).buildPartial();
        } else {
          encoding_ = value;
        }
        onChanged();
      } else {
        if (encodingCase_ == 4) {
          cooSparseBuilder_.mergeFrom(value);
        }
        cooSparseBuilder_.setMessage(value);
      }
      encodingCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public Builder clearCooSparse() {
      if (cooSparseBuilder_ == null) {
        if (encodingCase_ == 4) {
          encodingCase_ = 0;
          encoding_ = null;
          onChanged();
        }
      } else {
        if (encodingCase_ == 4) {
          encodingCase_ = 0;
          encoding_ = null;
        }
        cooSparseBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder getCooSparseBuilder() {
      return getCooSparseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo.CooSparseOrBuilder getCooSparseOrBuilder() {
      if ((encodingCase_ == 4) && (cooSparseBuilder_ != null)) {
        return cooSparseBuilder_.getMessageOrBuilder();
      } else {
        if (encodingCase_ == 4) {
          return (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_;
        }
        return org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * There are many possible encodings of sparse matrices
     * (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
     * uses only the COO encoding.  This is supported and documented in the
     * SparseTensor Python class.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CooSparse coo_sparse = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.framework.TensorInfo.CooSparse, org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder, org.tensorflow.proto.framework.TensorInfo.CooSparseOrBuilder> 
        getCooSparseFieldBuilder() {
      if (cooSparseBuilder_ == null) {
        if (!(encodingCase_ == 4)) {
          encoding_ = org.tensorflow.proto.framework.TensorInfo.CooSparse.getDefaultInstance();
        }
        cooSparseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.framework.TensorInfo.CooSparse, org.tensorflow.proto.framework.TensorInfo.CooSparse.Builder, org.tensorflow.proto.framework.TensorInfo.CooSparseOrBuilder>(
                (org.tensorflow.proto.framework.TensorInfo.CooSparse) encoding_,
                getParentForChildren(),
                isClean());
        encoding_ = null;
      }
      encodingCase_ = 4;
      onChanged();;
      return cooSparseBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.framework.TensorInfo.CompositeTensor, org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder, org.tensorflow.proto.framework.TensorInfo.CompositeTensorOrBuilder> compositeTensorBuilder_;
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public boolean hasCompositeTensor() {
      return encodingCase_ == 5;
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo.CompositeTensor getCompositeTensor() {
      if (compositeTensorBuilder_ == null) {
        if (encodingCase_ == 5) {
          return (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_;
        }
        return org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
      } else {
        if (encodingCase_ == 5) {
          return compositeTensorBuilder_.getMessage();
        }
        return org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public Builder setCompositeTensor(org.tensorflow.proto.framework.TensorInfo.CompositeTensor value) {
      if (compositeTensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encoding_ = value;
        onChanged();
      } else {
        compositeTensorBuilder_.setMessage(value);
      }
      encodingCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public Builder setCompositeTensor(
        org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder builderForValue) {
      if (compositeTensorBuilder_ == null) {
        encoding_ = builderForValue.build();
        onChanged();
      } else {
        compositeTensorBuilder_.setMessage(builderForValue.build());
      }
      encodingCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public Builder mergeCompositeTensor(org.tensorflow.proto.framework.TensorInfo.CompositeTensor value) {
      if (compositeTensorBuilder_ == null) {
        if (encodingCase_ == 5 &&
            encoding_ != org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance()) {
          encoding_ = org.tensorflow.proto.framework.TensorInfo.CompositeTensor.newBuilder((org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_)
              .mergeFrom(value).buildPartial();
        } else {
          encoding_ = value;
        }
        onChanged();
      } else {
        if (encodingCase_ == 5) {
          compositeTensorBuilder_.mergeFrom(value);
        }
        compositeTensorBuilder_.setMessage(value);
      }
      encodingCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public Builder clearCompositeTensor() {
      if (compositeTensorBuilder_ == null) {
        if (encodingCase_ == 5) {
          encodingCase_ = 0;
          encoding_ = null;
          onChanged();
        }
      } else {
        if (encodingCase_ == 5) {
          encodingCase_ = 0;
          encoding_ = null;
        }
        compositeTensorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder getCompositeTensorBuilder() {
      return getCompositeTensorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    public org.tensorflow.proto.framework.TensorInfo.CompositeTensorOrBuilder getCompositeTensorOrBuilder() {
      if ((encodingCase_ == 5) && (compositeTensorBuilder_ != null)) {
        return compositeTensorBuilder_.getMessageOrBuilder();
      } else {
        if (encodingCase_ == 5) {
          return (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_;
        }
        return org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Generic encoding for CompositeTensors.
     * </pre>
     *
     * <code>.tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.framework.TensorInfo.CompositeTensor, org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder, org.tensorflow.proto.framework.TensorInfo.CompositeTensorOrBuilder> 
        getCompositeTensorFieldBuilder() {
      if (compositeTensorBuilder_ == null) {
        if (!(encodingCase_ == 5)) {
          encoding_ = org.tensorflow.proto.framework.TensorInfo.CompositeTensor.getDefaultInstance();
        }
        compositeTensorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.framework.TensorInfo.CompositeTensor, org.tensorflow.proto.framework.TensorInfo.CompositeTensor.Builder, org.tensorflow.proto.framework.TensorInfo.CompositeTensorOrBuilder>(
                (org.tensorflow.proto.framework.TensorInfo.CompositeTensor) encoding_,
                getParentForChildren(),
                isClean());
        encoding_ = null;
      }
      encodingCase_ = 5;
      onChanged();;
      return compositeTensorBuilder_;
    }

    private int dtype_ = 0;
    /**
     * <code>.tensorflow.DataType dtype = 2;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 2;</code>
     */
    public Builder setDtypeValue(int value) {
      dtype_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.tensorflow.DataType dtype = 2;</code>
     */
    public org.tensorflow.proto.framework.DataType getDtype() {
      @SuppressWarnings("deprecation")
      org.tensorflow.proto.framework.DataType result = org.tensorflow.proto.framework.DataType.valueOf(dtype_);
      return result == null ? org.tensorflow.proto.framework.DataType.UNRECOGNIZED : result;
    }
    /**
     * <code>.tensorflow.DataType dtype = 2;</code>
     */
    public Builder setDtype(org.tensorflow.proto.framework.DataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      dtype_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.tensorflow.DataType dtype = 2;</code>
     */
    public Builder clearDtype() {
      
      dtype_ = 0;
      onChanged();
      return this;
    }

    private org.tensorflow.proto.framework.TensorShapeProto tensorShape_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.framework.TensorShapeProto, org.tensorflow.proto.framework.TensorShapeProto.Builder, org.tensorflow.proto.framework.TensorShapeProtoOrBuilder> tensorShapeBuilder_;
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public boolean hasTensorShape() {
      return tensorShapeBuilder_ != null || tensorShape_ != null;
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public org.tensorflow.proto.framework.TensorShapeProto getTensorShape() {
      if (tensorShapeBuilder_ == null) {
        return tensorShape_ == null ? org.tensorflow.proto.framework.TensorShapeProto.getDefaultInstance() : tensorShape_;
      } else {
        return tensorShapeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public Builder setTensorShape(org.tensorflow.proto.framework.TensorShapeProto value) {
      if (tensorShapeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tensorShape_ = value;
        onChanged();
      } else {
        tensorShapeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public Builder setTensorShape(
        org.tensorflow.proto.framework.TensorShapeProto.Builder builderForValue) {
      if (tensorShapeBuilder_ == null) {
        tensorShape_ = builderForValue.build();
        onChanged();
      } else {
        tensorShapeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public Builder mergeTensorShape(org.tensorflow.proto.framework.TensorShapeProto value) {
      if (tensorShapeBuilder_ == null) {
        if (tensorShape_ != null) {
          tensorShape_ =
            org.tensorflow.proto.framework.TensorShapeProto.newBuilder(tensorShape_).mergeFrom(value).buildPartial();
        } else {
          tensorShape_ = value;
        }
        onChanged();
      } else {
        tensorShapeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public Builder clearTensorShape() {
      if (tensorShapeBuilder_ == null) {
        tensorShape_ = null;
        onChanged();
      } else {
        tensorShape_ = null;
        tensorShapeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public org.tensorflow.proto.framework.TensorShapeProto.Builder getTensorShapeBuilder() {
      
      onChanged();
      return getTensorShapeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    public org.tensorflow.proto.framework.TensorShapeProtoOrBuilder getTensorShapeOrBuilder() {
      if (tensorShapeBuilder_ != null) {
        return tensorShapeBuilder_.getMessageOrBuilder();
      } else {
        return tensorShape_ == null ?
            org.tensorflow.proto.framework.TensorShapeProto.getDefaultInstance() : tensorShape_;
      }
    }
    /**
     * <pre>
     * The static shape should be recorded here, to the extent that it can
     * be known in advance.  In the case of a SparseTensor, this field describes
     * the logical shape of the represented tensor (aka dense_shape).
     * </pre>
     *
     * <code>.tensorflow.TensorShapeProto tensor_shape = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.proto.framework.TensorShapeProto, org.tensorflow.proto.framework.TensorShapeProto.Builder, org.tensorflow.proto.framework.TensorShapeProtoOrBuilder> 
        getTensorShapeFieldBuilder() {
      if (tensorShapeBuilder_ == null) {
        tensorShapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.framework.TensorShapeProto, org.tensorflow.proto.framework.TensorShapeProto.Builder, org.tensorflow.proto.framework.TensorShapeProtoOrBuilder>(
                getTensorShape(),
                getParentForChildren(),
                isClean());
        tensorShape_ = null;
      }
      return tensorShapeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.TensorInfo)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.TensorInfo)
  private static final org.tensorflow.proto.framework.TensorInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.proto.framework.TensorInfo();
  }

  public static org.tensorflow.proto.framework.TensorInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TensorInfo>
      PARSER = new com.google.protobuf.AbstractParser<TensorInfo>() {
    @java.lang.Override
    public TensorInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TensorInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TensorInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TensorInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tensorflow.proto.framework.TensorInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

