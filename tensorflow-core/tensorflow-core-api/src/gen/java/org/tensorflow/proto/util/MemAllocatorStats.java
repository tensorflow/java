// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/bfc_memory_map.proto

package org.tensorflow.proto.util;

/**
 * <pre>
 * Some of the data from AllocatorStats
 * </pre>
 *
 * Protobuf type {@code tensorflow.MemAllocatorStats}
 */
public  final class MemAllocatorStats extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.MemAllocatorStats)
    MemAllocatorStatsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MemAllocatorStats.newBuilder() to construct.
  private MemAllocatorStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MemAllocatorStats() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MemAllocatorStats();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MemAllocatorStats(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            numAllocs_ = input.readInt64();
            break;
          }
          case 16: {

            bytesInUse_ = input.readInt64();
            break;
          }
          case 24: {

            peakBytesInUse_ = input.readInt64();
            break;
          }
          case 32: {

            largestAllocSize_ = input.readInt64();
            break;
          }
          case 45: {

            fragmentationMetric_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.proto.util.BfcMemoryMapProtos.internal_static_tensorflow_MemAllocatorStats_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.proto.util.BfcMemoryMapProtos.internal_static_tensorflow_MemAllocatorStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.proto.util.MemAllocatorStats.class, org.tensorflow.proto.util.MemAllocatorStats.Builder.class);
  }

  public static final int NUM_ALLOCS_FIELD_NUMBER = 1;
  private long numAllocs_;
  /**
   * <code>int64 num_allocs = 1;</code>
   */
  public long getNumAllocs() {
    return numAllocs_;
  }

  public static final int BYTES_IN_USE_FIELD_NUMBER = 2;
  private long bytesInUse_;
  /**
   * <code>int64 bytes_in_use = 2;</code>
   */
  public long getBytesInUse() {
    return bytesInUse_;
  }

  public static final int PEAK_BYTES_IN_USE_FIELD_NUMBER = 3;
  private long peakBytesInUse_;
  /**
   * <code>int64 peak_bytes_in_use = 3;</code>
   */
  public long getPeakBytesInUse() {
    return peakBytesInUse_;
  }

  public static final int LARGEST_ALLOC_SIZE_FIELD_NUMBER = 4;
  private long largestAllocSize_;
  /**
   * <code>int64 largest_alloc_size = 4;</code>
   */
  public long getLargestAllocSize() {
    return largestAllocSize_;
  }

  public static final int FRAGMENTATION_METRIC_FIELD_NUMBER = 5;
  private float fragmentationMetric_;
  /**
   * <code>float fragmentation_metric = 5;</code>
   */
  public float getFragmentationMetric() {
    return fragmentationMetric_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (numAllocs_ != 0L) {
      output.writeInt64(1, numAllocs_);
    }
    if (bytesInUse_ != 0L) {
      output.writeInt64(2, bytesInUse_);
    }
    if (peakBytesInUse_ != 0L) {
      output.writeInt64(3, peakBytesInUse_);
    }
    if (largestAllocSize_ != 0L) {
      output.writeInt64(4, largestAllocSize_);
    }
    if (fragmentationMetric_ != 0F) {
      output.writeFloat(5, fragmentationMetric_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (numAllocs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, numAllocs_);
    }
    if (bytesInUse_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, bytesInUse_);
    }
    if (peakBytesInUse_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, peakBytesInUse_);
    }
    if (largestAllocSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, largestAllocSize_);
    }
    if (fragmentationMetric_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, fragmentationMetric_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.proto.util.MemAllocatorStats)) {
      return super.equals(obj);
    }
    org.tensorflow.proto.util.MemAllocatorStats other = (org.tensorflow.proto.util.MemAllocatorStats) obj;

    if (getNumAllocs()
        != other.getNumAllocs()) return false;
    if (getBytesInUse()
        != other.getBytesInUse()) return false;
    if (getPeakBytesInUse()
        != other.getPeakBytesInUse()) return false;
    if (getLargestAllocSize()
        != other.getLargestAllocSize()) return false;
    if (java.lang.Float.floatToIntBits(getFragmentationMetric())
        != java.lang.Float.floatToIntBits(
            other.getFragmentationMetric())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NUM_ALLOCS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNumAllocs());
    hash = (37 * hash) + BYTES_IN_USE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBytesInUse());
    hash = (37 * hash) + PEAK_BYTES_IN_USE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPeakBytesInUse());
    hash = (37 * hash) + LARGEST_ALLOC_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLargestAllocSize());
    hash = (37 * hash) + FRAGMENTATION_METRIC_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getFragmentationMetric());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.util.MemAllocatorStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.proto.util.MemAllocatorStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Some of the data from AllocatorStats
   * </pre>
   *
   * Protobuf type {@code tensorflow.MemAllocatorStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.MemAllocatorStats)
      org.tensorflow.proto.util.MemAllocatorStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.util.BfcMemoryMapProtos.internal_static_tensorflow_MemAllocatorStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.util.BfcMemoryMapProtos.internal_static_tensorflow_MemAllocatorStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.util.MemAllocatorStats.class, org.tensorflow.proto.util.MemAllocatorStats.Builder.class);
    }

    // Construct using org.tensorflow.proto.util.MemAllocatorStats.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      numAllocs_ = 0L;

      bytesInUse_ = 0L;

      peakBytesInUse_ = 0L;

      largestAllocSize_ = 0L;

      fragmentationMetric_ = 0F;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.proto.util.BfcMemoryMapProtos.internal_static_tensorflow_MemAllocatorStats_descriptor;
    }

    @java.lang.Override
    public org.tensorflow.proto.util.MemAllocatorStats getDefaultInstanceForType() {
      return org.tensorflow.proto.util.MemAllocatorStats.getDefaultInstance();
    }

    @java.lang.Override
    public org.tensorflow.proto.util.MemAllocatorStats build() {
      org.tensorflow.proto.util.MemAllocatorStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tensorflow.proto.util.MemAllocatorStats buildPartial() {
      org.tensorflow.proto.util.MemAllocatorStats result = new org.tensorflow.proto.util.MemAllocatorStats(this);
      result.numAllocs_ = numAllocs_;
      result.bytesInUse_ = bytesInUse_;
      result.peakBytesInUse_ = peakBytesInUse_;
      result.largestAllocSize_ = largestAllocSize_;
      result.fragmentationMetric_ = fragmentationMetric_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.proto.util.MemAllocatorStats) {
        return mergeFrom((org.tensorflow.proto.util.MemAllocatorStats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.proto.util.MemAllocatorStats other) {
      if (other == org.tensorflow.proto.util.MemAllocatorStats.getDefaultInstance()) return this;
      if (other.getNumAllocs() != 0L) {
        setNumAllocs(other.getNumAllocs());
      }
      if (other.getBytesInUse() != 0L) {
        setBytesInUse(other.getBytesInUse());
      }
      if (other.getPeakBytesInUse() != 0L) {
        setPeakBytesInUse(other.getPeakBytesInUse());
      }
      if (other.getLargestAllocSize() != 0L) {
        setLargestAllocSize(other.getLargestAllocSize());
      }
      if (other.getFragmentationMetric() != 0F) {
        setFragmentationMetric(other.getFragmentationMetric());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.proto.util.MemAllocatorStats parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.proto.util.MemAllocatorStats) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long numAllocs_ ;
    /**
     * <code>int64 num_allocs = 1;</code>
     */
    public long getNumAllocs() {
      return numAllocs_;
    }
    /**
     * <code>int64 num_allocs = 1;</code>
     */
    public Builder setNumAllocs(long value) {
      
      numAllocs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 num_allocs = 1;</code>
     */
    public Builder clearNumAllocs() {
      
      numAllocs_ = 0L;
      onChanged();
      return this;
    }

    private long bytesInUse_ ;
    /**
     * <code>int64 bytes_in_use = 2;</code>
     */
    public long getBytesInUse() {
      return bytesInUse_;
    }
    /**
     * <code>int64 bytes_in_use = 2;</code>
     */
    public Builder setBytesInUse(long value) {
      
      bytesInUse_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 bytes_in_use = 2;</code>
     */
    public Builder clearBytesInUse() {
      
      bytesInUse_ = 0L;
      onChanged();
      return this;
    }

    private long peakBytesInUse_ ;
    /**
     * <code>int64 peak_bytes_in_use = 3;</code>
     */
    public long getPeakBytesInUse() {
      return peakBytesInUse_;
    }
    /**
     * <code>int64 peak_bytes_in_use = 3;</code>
     */
    public Builder setPeakBytesInUse(long value) {
      
      peakBytesInUse_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 peak_bytes_in_use = 3;</code>
     */
    public Builder clearPeakBytesInUse() {
      
      peakBytesInUse_ = 0L;
      onChanged();
      return this;
    }

    private long largestAllocSize_ ;
    /**
     * <code>int64 largest_alloc_size = 4;</code>
     */
    public long getLargestAllocSize() {
      return largestAllocSize_;
    }
    /**
     * <code>int64 largest_alloc_size = 4;</code>
     */
    public Builder setLargestAllocSize(long value) {
      
      largestAllocSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 largest_alloc_size = 4;</code>
     */
    public Builder clearLargestAllocSize() {
      
      largestAllocSize_ = 0L;
      onChanged();
      return this;
    }

    private float fragmentationMetric_ ;
    /**
     * <code>float fragmentation_metric = 5;</code>
     */
    public float getFragmentationMetric() {
      return fragmentationMetric_;
    }
    /**
     * <code>float fragmentation_metric = 5;</code>
     */
    public Builder setFragmentationMetric(float value) {
      
      fragmentationMetric_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float fragmentation_metric = 5;</code>
     */
    public Builder clearFragmentationMetric() {
      
      fragmentationMetric_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.MemAllocatorStats)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.MemAllocatorStats)
  private static final org.tensorflow.proto.util.MemAllocatorStats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.proto.util.MemAllocatorStats();
  }

  public static org.tensorflow.proto.util.MemAllocatorStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MemAllocatorStats>
      PARSER = new com.google.protobuf.AbstractParser<MemAllocatorStats>() {
    @java.lang.Override
    public MemAllocatorStats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MemAllocatorStats(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MemAllocatorStats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MemAllocatorStats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tensorflow.proto.util.MemAllocatorStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

