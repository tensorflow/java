op {
  graph_op_name: "StatelessRandomUniformIntV2"
  visibility: HIDDEN
  in_arg {
    name: "shape"
    description: <<END
The shape of the output tensor.
END
  }
  in_arg {
    name: "key"
    description: <<END
Key for the counter-based RNG algorithm (shape uint64[1]).
END
  }
  in_arg {
    name: "counter"
    description: <<END
Initial counter for the counter-based RNG algorithm (shape uint64[2] or uint64[1] depending on the algorithm). If a larger vector is given, only the needed portion on the left (i.e. [:N]) will be used.
END
  }
  in_arg {
    name: "alg"
    description: <<END
The RNG algorithm (shape int32[]).
END
  }
  in_arg {
    name: "minval"
    description: <<END
Minimum value (inclusive, scalar).
END
  }
  in_arg {
    name: "maxval"
    description: <<END
Maximum value (exclusive, scalar).
END
  }
  out_arg {
    name: "output"
    description: <<END
Random values with specified shape.
END
  }
  attr {
    name: "dtype"
    description: <<END
The type of the output.
END
  }
  summary: "Outputs deterministic pseudorandom random integers from a uniform distribution."
  description: <<END
The generated values follow a uniform distribution in the range `[minval, maxval)`.

The outputs are a deterministic function of `shape`, `key`, `counter`, `alg`, `minval` and `maxval`.
END
}
