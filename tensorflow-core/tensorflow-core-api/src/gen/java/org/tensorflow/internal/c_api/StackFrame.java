// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.tensorflow.internal.c_api;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.tensorflow.internal.c_api.global.tensorflow.*;


// A struct representing a frame in a stack trace.
@Namespace("tensorflow") @Properties(inherit = org.tensorflow.internal.c_api.presets.tensorflow.class)
public class StackFrame extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public StackFrame() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public StackFrame(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public StackFrame(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public StackFrame position(long position) {
        return (StackFrame)super.position(position);
    }
    @Override public StackFrame getPointer(long i) {
        return new StackFrame((Pointer)this).position(position + i);
    }

  public native @StdString BytePointer file_name(); public native StackFrame file_name(BytePointer setter);
  public native int line_number(); public native StackFrame line_number(int setter);
  public native @StdString BytePointer function_name(); public native StackFrame function_name(BytePointer setter);

  public native @Cast("bool") @Name("operator ==") boolean equals(@Const @ByRef StackFrame other);

  public native @Cast("bool") @Name("operator !=") boolean notEquals(@Const @ByRef StackFrame other);
}
