// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/dataset_options.proto

package tensorflow.data;

public final class DatasetOptions {
  private DatasetOptions() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Represents the type of auto-sharding we enable.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.data.AutoShardPolicy}
   */
  public enum AutoShardPolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * AUTO: Attempts FILE-based sharding, falling back to DATA-based sharding.
     * </pre>
     *
     * <code>AUTO = 0;</code>
     */
    AUTO(0),
    /**
     * <pre>
     * FILE: Shards by input files (i.e. each worker will get a set of files to
     * process). When this option is selected, make sure that there is at least as
     * many files as workers. If there are fewer input files than workers, a
     * runtime error will be raised.
     * </pre>
     *
     * <code>FILE = 1;</code>
     */
    FILE(1),
    /**
     * <pre>
     * DATA: Shards by elements produced by the dataset. Each worker will process
     * the whole dataset and discard the portion that is not for itself. Note that
     * for this mode to correctly partitions the dataset elements, the dataset
     * needs to produce elements in a deterministic order.
     * </pre>
     *
     * <code>DATA = 2;</code>
     */
    DATA(2),
    /**
     * <pre>
     * HINT: Looks for the presence of `shard(SHARD_HINT, ...)` which is treated
     * as a placeholder to replace with `shard(num_workers, worker_index)`.
     * </pre>
     *
     * <code>HINT = 3;</code>
     */
    HINT(3),
    /**
     * <pre>
     * OFF: No sharding will be performed.
     * </pre>
     *
     * <code>OFF = -1;</code>
     */
    OFF(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * AUTO: Attempts FILE-based sharding, falling back to DATA-based sharding.
     * </pre>
     *
     * <code>AUTO = 0;</code>
     */
    public static final int AUTO_VALUE = 0;
    /**
     * <pre>
     * FILE: Shards by input files (i.e. each worker will get a set of files to
     * process). When this option is selected, make sure that there is at least as
     * many files as workers. If there are fewer input files than workers, a
     * runtime error will be raised.
     * </pre>
     *
     * <code>FILE = 1;</code>
     */
    public static final int FILE_VALUE = 1;
    /**
     * <pre>
     * DATA: Shards by elements produced by the dataset. Each worker will process
     * the whole dataset and discard the portion that is not for itself. Note that
     * for this mode to correctly partitions the dataset elements, the dataset
     * needs to produce elements in a deterministic order.
     * </pre>
     *
     * <code>DATA = 2;</code>
     */
    public static final int DATA_VALUE = 2;
    /**
     * <pre>
     * HINT: Looks for the presence of `shard(SHARD_HINT, ...)` which is treated
     * as a placeholder to replace with `shard(num_workers, worker_index)`.
     * </pre>
     *
     * <code>HINT = 3;</code>
     */
    public static final int HINT_VALUE = 3;
    /**
     * <pre>
     * OFF: No sharding will be performed.
     * </pre>
     *
     * <code>OFF = -1;</code>
     */
    public static final int OFF_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AutoShardPolicy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AutoShardPolicy forNumber(int value) {
      switch (value) {
        case 0: return AUTO;
        case 1: return FILE;
        case 2: return DATA;
        case 3: return HINT;
        case -1: return OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AutoShardPolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AutoShardPolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AutoShardPolicy>() {
            public AutoShardPolicy findValueByNumber(int number) {
              return AutoShardPolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.getDescriptor().getEnumTypes().get(0);
    }

    private static final AutoShardPolicy[] VALUES = values();

    public static AutoShardPolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AutoShardPolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.data.AutoShardPolicy)
  }

  /**
   * <pre>
   * Represents how to handle external state during serialization.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.data.ExternalStatePolicy}
   */
  public enum ExternalStatePolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>POLICY_WARN = 0;</code>
     */
    POLICY_WARN(0),
    /**
     * <code>POLICY_IGNORE = 1;</code>
     */
    POLICY_IGNORE(1),
    /**
     * <code>POLICY_FAIL = 2;</code>
     */
    POLICY_FAIL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>POLICY_WARN = 0;</code>
     */
    public static final int POLICY_WARN_VALUE = 0;
    /**
     * <code>POLICY_IGNORE = 1;</code>
     */
    public static final int POLICY_IGNORE_VALUE = 1;
    /**
     * <code>POLICY_FAIL = 2;</code>
     */
    public static final int POLICY_FAIL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExternalStatePolicy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ExternalStatePolicy forNumber(int value) {
      switch (value) {
        case 0: return POLICY_WARN;
        case 1: return POLICY_IGNORE;
        case 2: return POLICY_FAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExternalStatePolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExternalStatePolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExternalStatePolicy>() {
            public ExternalStatePolicy findValueByNumber(int number) {
              return ExternalStatePolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.getDescriptor().getEnumTypes().get(1);
    }

    private static final ExternalStatePolicy[] VALUES = values();

    public static ExternalStatePolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExternalStatePolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.data.ExternalStatePolicy)
  }

  public interface AutotuneOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.AutotuneOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool enabled = 1;</code>
     * @return Whether the enabled field is set.
     */
    boolean hasEnabled();
    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    boolean getEnabled();

    /**
     * <code>int32 cpu_budget = 2;</code>
     * @return Whether the cpuBudget field is set.
     */
    boolean hasCpuBudget();
    /**
     * <code>int32 cpu_budget = 2;</code>
     * @return The cpuBudget.
     */
    int getCpuBudget();

    /**
     * <code>int64 ram_budget = 3;</code>
     * @return Whether the ramBudget field is set.
     */
    boolean hasRamBudget();
    /**
     * <code>int64 ram_budget = 3;</code>
     * @return The ramBudget.
     */
    long getRamBudget();

    /**
     * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
     * @return Whether the autotuneAlgorithm field is set.
     */
    boolean hasAutotuneAlgorithm();
    /**
     * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
     * @return The enum numeric value on the wire for autotuneAlgorithm.
     */
    int getAutotuneAlgorithmValue();
    /**
     * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
     * @return The autotuneAlgorithm.
     */
    tensorflow.data.model.Model.AutotuneAlgorithm getAutotuneAlgorithm();

    public tensorflow.data.DatasetOptions.AutotuneOptions.OptionalEnabledCase getOptionalEnabledCase();

    public tensorflow.data.DatasetOptions.AutotuneOptions.OptionalCpuBudgetCase getOptionalCpuBudgetCase();

    public tensorflow.data.DatasetOptions.AutotuneOptions.OptionalRamBudgetCase getOptionalRamBudgetCase();

    public tensorflow.data.DatasetOptions.AutotuneOptions.OptionalAutotuneAlgorithmCase getOptionalAutotuneAlgorithmCase();
  }
  /**
   * <pre>
   * next: 5
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.AutotuneOptions}
   */
  public static final class AutotuneOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.AutotuneOptions)
      AutotuneOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AutotuneOptions.newBuilder() to construct.
    private AutotuneOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AutotuneOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AutotuneOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_AutotuneOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_AutotuneOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.AutotuneOptions.class, tensorflow.data.DatasetOptions.AutotuneOptions.Builder.class);
    }

    private int optionalEnabledCase_ = 0;
    private java.lang.Object optionalEnabled_;
    public enum OptionalEnabledCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ENABLED(1),
      OPTIONALENABLED_NOT_SET(0);
      private final int value;
      private OptionalEnabledCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalEnabledCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalEnabledCase forNumber(int value) {
        switch (value) {
          case 1: return ENABLED;
          case 0: return OPTIONALENABLED_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalEnabledCase
    getOptionalEnabledCase() {
      return OptionalEnabledCase.forNumber(
          optionalEnabledCase_);
    }

    private int optionalCpuBudgetCase_ = 0;
    private java.lang.Object optionalCpuBudget_;
    public enum OptionalCpuBudgetCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CPU_BUDGET(2),
      OPTIONALCPUBUDGET_NOT_SET(0);
      private final int value;
      private OptionalCpuBudgetCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalCpuBudgetCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalCpuBudgetCase forNumber(int value) {
        switch (value) {
          case 2: return CPU_BUDGET;
          case 0: return OPTIONALCPUBUDGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalCpuBudgetCase
    getOptionalCpuBudgetCase() {
      return OptionalCpuBudgetCase.forNumber(
          optionalCpuBudgetCase_);
    }

    private int optionalRamBudgetCase_ = 0;
    private java.lang.Object optionalRamBudget_;
    public enum OptionalRamBudgetCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RAM_BUDGET(3),
      OPTIONALRAMBUDGET_NOT_SET(0);
      private final int value;
      private OptionalRamBudgetCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalRamBudgetCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalRamBudgetCase forNumber(int value) {
        switch (value) {
          case 3: return RAM_BUDGET;
          case 0: return OPTIONALRAMBUDGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalRamBudgetCase
    getOptionalRamBudgetCase() {
      return OptionalRamBudgetCase.forNumber(
          optionalRamBudgetCase_);
    }

    private int optionalAutotuneAlgorithmCase_ = 0;
    private java.lang.Object optionalAutotuneAlgorithm_;
    public enum OptionalAutotuneAlgorithmCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      AUTOTUNE_ALGORITHM(4),
      OPTIONALAUTOTUNEALGORITHM_NOT_SET(0);
      private final int value;
      private OptionalAutotuneAlgorithmCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalAutotuneAlgorithmCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalAutotuneAlgorithmCase forNumber(int value) {
        switch (value) {
          case 4: return AUTOTUNE_ALGORITHM;
          case 0: return OPTIONALAUTOTUNEALGORITHM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalAutotuneAlgorithmCase
    getOptionalAutotuneAlgorithmCase() {
      return OptionalAutotuneAlgorithmCase.forNumber(
          optionalAutotuneAlgorithmCase_);
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    /**
     * <code>bool enabled = 1;</code>
     * @return Whether the enabled field is set.
     */
    @java.lang.Override
    public boolean hasEnabled() {
      return optionalEnabledCase_ == 1;
    }
    /**
     * <code>bool enabled = 1;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      if (optionalEnabledCase_ == 1) {
        return (java.lang.Boolean) optionalEnabled_;
      }
      return false;
    }

    public static final int CPU_BUDGET_FIELD_NUMBER = 2;
    /**
     * <code>int32 cpu_budget = 2;</code>
     * @return Whether the cpuBudget field is set.
     */
    @java.lang.Override
    public boolean hasCpuBudget() {
      return optionalCpuBudgetCase_ == 2;
    }
    /**
     * <code>int32 cpu_budget = 2;</code>
     * @return The cpuBudget.
     */
    @java.lang.Override
    public int getCpuBudget() {
      if (optionalCpuBudgetCase_ == 2) {
        return (java.lang.Integer) optionalCpuBudget_;
      }
      return 0;
    }

    public static final int RAM_BUDGET_FIELD_NUMBER = 3;
    /**
     * <code>int64 ram_budget = 3;</code>
     * @return Whether the ramBudget field is set.
     */
    @java.lang.Override
    public boolean hasRamBudget() {
      return optionalRamBudgetCase_ == 3;
    }
    /**
     * <code>int64 ram_budget = 3;</code>
     * @return The ramBudget.
     */
    @java.lang.Override
    public long getRamBudget() {
      if (optionalRamBudgetCase_ == 3) {
        return (java.lang.Long) optionalRamBudget_;
      }
      return 0L;
    }

    public static final int AUTOTUNE_ALGORITHM_FIELD_NUMBER = 4;
    /**
     * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
     * @return Whether the autotuneAlgorithm field is set.
     */
    public boolean hasAutotuneAlgorithm() {
      return optionalAutotuneAlgorithmCase_ == 4;
    }
    /**
     * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
     * @return The enum numeric value on the wire for autotuneAlgorithm.
     */
    public int getAutotuneAlgorithmValue() {
      if (optionalAutotuneAlgorithmCase_ == 4) {
        return (java.lang.Integer) optionalAutotuneAlgorithm_;
      }
      return 0;
    }
    /**
     * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
     * @return The autotuneAlgorithm.
     */
    public tensorflow.data.model.Model.AutotuneAlgorithm getAutotuneAlgorithm() {
      if (optionalAutotuneAlgorithmCase_ == 4) {
        @SuppressWarnings("deprecation")
        tensorflow.data.model.Model.AutotuneAlgorithm result = tensorflow.data.model.Model.AutotuneAlgorithm.valueOf(
            (java.lang.Integer) optionalAutotuneAlgorithm_);
        return result == null ? tensorflow.data.model.Model.AutotuneAlgorithm.UNRECOGNIZED : result;
      }
      return tensorflow.data.model.Model.AutotuneAlgorithm.DEFAULT;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalEnabledCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) optionalEnabled_));
      }
      if (optionalCpuBudgetCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) optionalCpuBudget_));
      }
      if (optionalRamBudgetCase_ == 3) {
        output.writeInt64(
            3, (long)((java.lang.Long) optionalRamBudget_));
      }
      if (optionalAutotuneAlgorithmCase_ == 4) {
        output.writeEnum(4, ((java.lang.Integer) optionalAutotuneAlgorithm_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalEnabledCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) optionalEnabled_));
      }
      if (optionalCpuBudgetCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) optionalCpuBudget_));
      }
      if (optionalRamBudgetCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              3, (long)((java.lang.Long) optionalRamBudget_));
      }
      if (optionalAutotuneAlgorithmCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, ((java.lang.Integer) optionalAutotuneAlgorithm_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.AutotuneOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.AutotuneOptions other = (tensorflow.data.DatasetOptions.AutotuneOptions) obj;

      if (!getOptionalEnabledCase().equals(other.getOptionalEnabledCase())) return false;
      switch (optionalEnabledCase_) {
        case 1:
          if (getEnabled()
              != other.getEnabled()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalCpuBudgetCase().equals(other.getOptionalCpuBudgetCase())) return false;
      switch (optionalCpuBudgetCase_) {
        case 2:
          if (getCpuBudget()
              != other.getCpuBudget()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalRamBudgetCase().equals(other.getOptionalRamBudgetCase())) return false;
      switch (optionalRamBudgetCase_) {
        case 3:
          if (getRamBudget()
              != other.getRamBudget()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalAutotuneAlgorithmCase().equals(other.getOptionalAutotuneAlgorithmCase())) return false;
      switch (optionalAutotuneAlgorithmCase_) {
        case 4:
          if (getAutotuneAlgorithmValue()
              != other.getAutotuneAlgorithmValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (optionalEnabledCase_) {
        case 1:
          hash = (37 * hash) + ENABLED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getEnabled());
          break;
        case 0:
        default:
      }
      switch (optionalCpuBudgetCase_) {
        case 2:
          hash = (37 * hash) + CPU_BUDGET_FIELD_NUMBER;
          hash = (53 * hash) + getCpuBudget();
          break;
        case 0:
        default:
      }
      switch (optionalRamBudgetCase_) {
        case 3:
          hash = (37 * hash) + RAM_BUDGET_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getRamBudget());
          break;
        case 0:
        default:
      }
      switch (optionalAutotuneAlgorithmCase_) {
        case 4:
          hash = (37 * hash) + AUTOTUNE_ALGORITHM_FIELD_NUMBER;
          hash = (53 * hash) + getAutotuneAlgorithmValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.AutotuneOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.AutotuneOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * next: 5
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.AutotuneOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.AutotuneOptions)
        tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_AutotuneOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_AutotuneOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.AutotuneOptions.class, tensorflow.data.DatasetOptions.AutotuneOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.AutotuneOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        optionalEnabledCase_ = 0;
        optionalEnabled_ = null;
        optionalCpuBudgetCase_ = 0;
        optionalCpuBudget_ = null;
        optionalRamBudgetCase_ = 0;
        optionalRamBudget_ = null;
        optionalAutotuneAlgorithmCase_ = 0;
        optionalAutotuneAlgorithm_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_AutotuneOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.AutotuneOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.AutotuneOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.AutotuneOptions build() {
        tensorflow.data.DatasetOptions.AutotuneOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.AutotuneOptions buildPartial() {
        tensorflow.data.DatasetOptions.AutotuneOptions result = new tensorflow.data.DatasetOptions.AutotuneOptions(this);
        if (optionalEnabledCase_ == 1) {
          result.optionalEnabled_ = optionalEnabled_;
        }
        if (optionalCpuBudgetCase_ == 2) {
          result.optionalCpuBudget_ = optionalCpuBudget_;
        }
        if (optionalRamBudgetCase_ == 3) {
          result.optionalRamBudget_ = optionalRamBudget_;
        }
        if (optionalAutotuneAlgorithmCase_ == 4) {
          result.optionalAutotuneAlgorithm_ = optionalAutotuneAlgorithm_;
        }
        result.optionalEnabledCase_ = optionalEnabledCase_;
        result.optionalCpuBudgetCase_ = optionalCpuBudgetCase_;
        result.optionalRamBudgetCase_ = optionalRamBudgetCase_;
        result.optionalAutotuneAlgorithmCase_ = optionalAutotuneAlgorithmCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.AutotuneOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.AutotuneOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.AutotuneOptions other) {
        if (other == tensorflow.data.DatasetOptions.AutotuneOptions.getDefaultInstance()) return this;
        switch (other.getOptionalEnabledCase()) {
          case ENABLED: {
            setEnabled(other.getEnabled());
            break;
          }
          case OPTIONALENABLED_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalCpuBudgetCase()) {
          case CPU_BUDGET: {
            setCpuBudget(other.getCpuBudget());
            break;
          }
          case OPTIONALCPUBUDGET_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalRamBudgetCase()) {
          case RAM_BUDGET: {
            setRamBudget(other.getRamBudget());
            break;
          }
          case OPTIONALRAMBUDGET_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalAutotuneAlgorithmCase()) {
          case AUTOTUNE_ALGORITHM: {
            setAutotuneAlgorithmValue(other.getAutotuneAlgorithmValue());
            break;
          }
          case OPTIONALAUTOTUNEALGORITHM_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                optionalEnabled_ = input.readBool();
                optionalEnabledCase_ = 1;
                break;
              } // case 8
              case 16: {
                optionalCpuBudget_ = input.readInt32();
                optionalCpuBudgetCase_ = 2;
                break;
              } // case 16
              case 24: {
                optionalRamBudget_ = input.readInt64();
                optionalRamBudgetCase_ = 3;
                break;
              } // case 24
              case 32: {
                int rawValue = input.readEnum();
                optionalAutotuneAlgorithmCase_ = 4;
                optionalAutotuneAlgorithm_ = rawValue;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalEnabledCase_ = 0;
      private java.lang.Object optionalEnabled_;
      public OptionalEnabledCase
          getOptionalEnabledCase() {
        return OptionalEnabledCase.forNumber(
            optionalEnabledCase_);
      }

      public Builder clearOptionalEnabled() {
        optionalEnabledCase_ = 0;
        optionalEnabled_ = null;
        onChanged();
        return this;
      }

      private int optionalCpuBudgetCase_ = 0;
      private java.lang.Object optionalCpuBudget_;
      public OptionalCpuBudgetCase
          getOptionalCpuBudgetCase() {
        return OptionalCpuBudgetCase.forNumber(
            optionalCpuBudgetCase_);
      }

      public Builder clearOptionalCpuBudget() {
        optionalCpuBudgetCase_ = 0;
        optionalCpuBudget_ = null;
        onChanged();
        return this;
      }

      private int optionalRamBudgetCase_ = 0;
      private java.lang.Object optionalRamBudget_;
      public OptionalRamBudgetCase
          getOptionalRamBudgetCase() {
        return OptionalRamBudgetCase.forNumber(
            optionalRamBudgetCase_);
      }

      public Builder clearOptionalRamBudget() {
        optionalRamBudgetCase_ = 0;
        optionalRamBudget_ = null;
        onChanged();
        return this;
      }

      private int optionalAutotuneAlgorithmCase_ = 0;
      private java.lang.Object optionalAutotuneAlgorithm_;
      public OptionalAutotuneAlgorithmCase
          getOptionalAutotuneAlgorithmCase() {
        return OptionalAutotuneAlgorithmCase.forNumber(
            optionalAutotuneAlgorithmCase_);
      }

      public Builder clearOptionalAutotuneAlgorithm() {
        optionalAutotuneAlgorithmCase_ = 0;
        optionalAutotuneAlgorithm_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bool enabled = 1;</code>
       * @return Whether the enabled field is set.
       */
      public boolean hasEnabled() {
        return optionalEnabledCase_ == 1;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @return The enabled.
       */
      public boolean getEnabled() {
        if (optionalEnabledCase_ == 1) {
          return (java.lang.Boolean) optionalEnabled_;
        }
        return false;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @param value The enabled to set.
       * @return This builder for chaining.
       */
      public Builder setEnabled(boolean value) {
        optionalEnabledCase_ = 1;
        optionalEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool enabled = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabled() {
        if (optionalEnabledCase_ == 1) {
          optionalEnabledCase_ = 0;
          optionalEnabled_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 cpu_budget = 2;</code>
       * @return Whether the cpuBudget field is set.
       */
      public boolean hasCpuBudget() {
        return optionalCpuBudgetCase_ == 2;
      }
      /**
       * <code>int32 cpu_budget = 2;</code>
       * @return The cpuBudget.
       */
      public int getCpuBudget() {
        if (optionalCpuBudgetCase_ == 2) {
          return (java.lang.Integer) optionalCpuBudget_;
        }
        return 0;
      }
      /**
       * <code>int32 cpu_budget = 2;</code>
       * @param value The cpuBudget to set.
       * @return This builder for chaining.
       */
      public Builder setCpuBudget(int value) {
        optionalCpuBudgetCase_ = 2;
        optionalCpuBudget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cpu_budget = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpuBudget() {
        if (optionalCpuBudgetCase_ == 2) {
          optionalCpuBudgetCase_ = 0;
          optionalCpuBudget_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int64 ram_budget = 3;</code>
       * @return Whether the ramBudget field is set.
       */
      public boolean hasRamBudget() {
        return optionalRamBudgetCase_ == 3;
      }
      /**
       * <code>int64 ram_budget = 3;</code>
       * @return The ramBudget.
       */
      public long getRamBudget() {
        if (optionalRamBudgetCase_ == 3) {
          return (java.lang.Long) optionalRamBudget_;
        }
        return 0L;
      }
      /**
       * <code>int64 ram_budget = 3;</code>
       * @param value The ramBudget to set.
       * @return This builder for chaining.
       */
      public Builder setRamBudget(long value) {
        optionalRamBudgetCase_ = 3;
        optionalRamBudget_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 ram_budget = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRamBudget() {
        if (optionalRamBudgetCase_ == 3) {
          optionalRamBudgetCase_ = 0;
          optionalRamBudget_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
       * @return Whether the autotuneAlgorithm field is set.
       */
      @java.lang.Override
      public boolean hasAutotuneAlgorithm() {
        return optionalAutotuneAlgorithmCase_ == 4;
      }
      /**
       * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
       * @return The enum numeric value on the wire for autotuneAlgorithm.
       */
      @java.lang.Override
      public int getAutotuneAlgorithmValue() {
        if (optionalAutotuneAlgorithmCase_ == 4) {
          return ((java.lang.Integer) optionalAutotuneAlgorithm_).intValue();
        }
        return 0;
      }
      /**
       * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
       * @param value The enum numeric value on the wire for autotuneAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAutotuneAlgorithmValue(int value) {
        optionalAutotuneAlgorithmCase_ = 4;
        optionalAutotuneAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
       * @return The autotuneAlgorithm.
       */
      @java.lang.Override
      public tensorflow.data.model.Model.AutotuneAlgorithm getAutotuneAlgorithm() {
        if (optionalAutotuneAlgorithmCase_ == 4) {
          @SuppressWarnings("deprecation")
          tensorflow.data.model.Model.AutotuneAlgorithm result = tensorflow.data.model.Model.AutotuneAlgorithm.valueOf(
              (java.lang.Integer) optionalAutotuneAlgorithm_);
          return result == null ? tensorflow.data.model.Model.AutotuneAlgorithm.UNRECOGNIZED : result;
        }
        return tensorflow.data.model.Model.AutotuneAlgorithm.DEFAULT;
      }
      /**
       * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
       * @param value The autotuneAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAutotuneAlgorithm(tensorflow.data.model.Model.AutotuneAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalAutotuneAlgorithmCase_ = 4;
        optionalAutotuneAlgorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.model.AutotuneAlgorithm autotune_algorithm = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutotuneAlgorithm() {
        if (optionalAutotuneAlgorithmCase_ == 4) {
          optionalAutotuneAlgorithmCase_ = 0;
          optionalAutotuneAlgorithm_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.AutotuneOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.AutotuneOptions)
    private static final tensorflow.data.DatasetOptions.AutotuneOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.AutotuneOptions();
    }

    public static tensorflow.data.DatasetOptions.AutotuneOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AutotuneOptions>
        PARSER = new com.google.protobuf.AbstractParser<AutotuneOptions>() {
      @java.lang.Override
      public AutotuneOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AutotuneOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AutotuneOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.AutotuneOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CardinalityOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.CardinalityOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
     * @return The enum numeric value on the wire for computeLevel.
     */
    int getComputeLevelValue();
    /**
     * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
     * @return The computeLevel.
     */
    tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel getComputeLevel();
  }
  /**
   * <pre>
   * next: 2
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.CardinalityOptions}
   */
  public static final class CardinalityOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.CardinalityOptions)
      CardinalityOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CardinalityOptions.newBuilder() to construct.
    private CardinalityOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CardinalityOptions() {
      computeLevel_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CardinalityOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_CardinalityOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_CardinalityOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.CardinalityOptions.class, tensorflow.data.DatasetOptions.CardinalityOptions.Builder.class);
    }

    /**
     * Protobuf enum {@code tensorflow.data.CardinalityOptions.ComputeLevel}
     */
    public enum ComputeLevel
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CARDINALITY_COMPUTE_UNSPECIFIED = 0;</code>
       */
      CARDINALITY_COMPUTE_UNSPECIFIED(0),
      /**
       * <pre>
       * Cardinality will only be computed if it can be determined in a cheap
       * manner (ie. without reading from file sources). If the cardinality would
       * be nontrivial to compute, Cardinality() will return UNKNOWN_CARDINALITY.
       * </pre>
       *
       * <code>CARDINALITY_COMPUTE_LOW = 1;</code>
       */
      CARDINALITY_COMPUTE_LOW(1),
      /**
       * <pre>
       * Moderate effort will be made to determine cardinality, such as reading
       * index data from source files. If significant work is needed to compute
       * cardinality (e.g. reading entire source file contents or executing user
       * defined functions), Cardinality() will return UNKNOWN_CARDINALITY.
       * </pre>
       *
       * <code>CARDINALITY_COMPUTE_MODERATE = 2;</code>
       */
      CARDINALITY_COMPUTE_MODERATE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CARDINALITY_COMPUTE_UNSPECIFIED = 0;</code>
       */
      public static final int CARDINALITY_COMPUTE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Cardinality will only be computed if it can be determined in a cheap
       * manner (ie. without reading from file sources). If the cardinality would
       * be nontrivial to compute, Cardinality() will return UNKNOWN_CARDINALITY.
       * </pre>
       *
       * <code>CARDINALITY_COMPUTE_LOW = 1;</code>
       */
      public static final int CARDINALITY_COMPUTE_LOW_VALUE = 1;
      /**
       * <pre>
       * Moderate effort will be made to determine cardinality, such as reading
       * index data from source files. If significant work is needed to compute
       * cardinality (e.g. reading entire source file contents or executing user
       * defined functions), Cardinality() will return UNKNOWN_CARDINALITY.
       * </pre>
       *
       * <code>CARDINALITY_COMPUTE_MODERATE = 2;</code>
       */
      public static final int CARDINALITY_COMPUTE_MODERATE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ComputeLevel valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ComputeLevel forNumber(int value) {
        switch (value) {
          case 0: return CARDINALITY_COMPUTE_UNSPECIFIED;
          case 1: return CARDINALITY_COMPUTE_LOW;
          case 2: return CARDINALITY_COMPUTE_MODERATE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ComputeLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ComputeLevel> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ComputeLevel>() {
              public ComputeLevel findValueByNumber(int number) {
                return ComputeLevel.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.CardinalityOptions.getDescriptor().getEnumTypes().get(0);
      }

      private static final ComputeLevel[] VALUES = values();

      public static ComputeLevel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ComputeLevel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tensorflow.data.CardinalityOptions.ComputeLevel)
    }

    public static final int COMPUTE_LEVEL_FIELD_NUMBER = 1;
    private int computeLevel_;
    /**
     * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
     * @return The enum numeric value on the wire for computeLevel.
     */
    @java.lang.Override public int getComputeLevelValue() {
      return computeLevel_;
    }
    /**
     * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
     * @return The computeLevel.
     */
    @java.lang.Override public tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel getComputeLevel() {
      @SuppressWarnings("deprecation")
      tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel result = tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel.valueOf(computeLevel_);
      return result == null ? tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (computeLevel_ != tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel.CARDINALITY_COMPUTE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, computeLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (computeLevel_ != tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel.CARDINALITY_COMPUTE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, computeLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.CardinalityOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.CardinalityOptions other = (tensorflow.data.DatasetOptions.CardinalityOptions) obj;

      if (computeLevel_ != other.computeLevel_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMPUTE_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + computeLevel_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.CardinalityOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.CardinalityOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * next: 2
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.CardinalityOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.CardinalityOptions)
        tensorflow.data.DatasetOptions.CardinalityOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_CardinalityOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_CardinalityOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.CardinalityOptions.class, tensorflow.data.DatasetOptions.CardinalityOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.CardinalityOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        computeLevel_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_CardinalityOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.CardinalityOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.CardinalityOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.CardinalityOptions build() {
        tensorflow.data.DatasetOptions.CardinalityOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.CardinalityOptions buildPartial() {
        tensorflow.data.DatasetOptions.CardinalityOptions result = new tensorflow.data.DatasetOptions.CardinalityOptions(this);
        result.computeLevel_ = computeLevel_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.CardinalityOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.CardinalityOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.CardinalityOptions other) {
        if (other == tensorflow.data.DatasetOptions.CardinalityOptions.getDefaultInstance()) return this;
        if (other.computeLevel_ != 0) {
          setComputeLevelValue(other.getComputeLevelValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                computeLevel_ = input.readEnum();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int computeLevel_ = 0;
      /**
       * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
       * @return The enum numeric value on the wire for computeLevel.
       */
      @java.lang.Override public int getComputeLevelValue() {
        return computeLevel_;
      }
      /**
       * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
       * @param value The enum numeric value on the wire for computeLevel to set.
       * @return This builder for chaining.
       */
      public Builder setComputeLevelValue(int value) {
        
        computeLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
       * @return The computeLevel.
       */
      @java.lang.Override
      public tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel getComputeLevel() {
        @SuppressWarnings("deprecation")
        tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel result = tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel.valueOf(computeLevel_);
        return result == null ? tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
       * @param value The computeLevel to set.
       * @return This builder for chaining.
       */
      public Builder setComputeLevel(tensorflow.data.DatasetOptions.CardinalityOptions.ComputeLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        computeLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.CardinalityOptions.ComputeLevel compute_level = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearComputeLevel() {
        
        computeLevel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.CardinalityOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.CardinalityOptions)
    private static final tensorflow.data.DatasetOptions.CardinalityOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.CardinalityOptions();
    }

    public static tensorflow.data.DatasetOptions.CardinalityOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CardinalityOptions>
        PARSER = new com.google.protobuf.AbstractParser<CardinalityOptions>() {
      @java.lang.Override
      public CardinalityOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CardinalityOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CardinalityOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.CardinalityOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DistributeOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.DistributeOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     * @return The enum numeric value on the wire for autoShardPolicy.
     */
    int getAutoShardPolicyValue();
    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     * @return The autoShardPolicy.
     */
    tensorflow.data.DatasetOptions.AutoShardPolicy getAutoShardPolicy();

    /**
     * <code>int32 num_devices = 2;</code>
     * @return Whether the numDevices field is set.
     */
    boolean hasNumDevices();
    /**
     * <code>int32 num_devices = 2;</code>
     * @return The numDevices.
     */
    int getNumDevices();

    public tensorflow.data.DatasetOptions.DistributeOptions.OptionalNumDevicesCase getOptionalNumDevicesCase();
  }
  /**
   * <pre>
   * next: 3
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.DistributeOptions}
   */
  public static final class DistributeOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.DistributeOptions)
      DistributeOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DistributeOptions.newBuilder() to construct.
    private DistributeOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DistributeOptions() {
      autoShardPolicy_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DistributeOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.DistributeOptions.class, tensorflow.data.DatasetOptions.DistributeOptions.Builder.class);
    }

    private int optionalNumDevicesCase_ = 0;
    private java.lang.Object optionalNumDevices_;
    public enum OptionalNumDevicesCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      NUM_DEVICES(2),
      OPTIONALNUMDEVICES_NOT_SET(0);
      private final int value;
      private OptionalNumDevicesCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalNumDevicesCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalNumDevicesCase forNumber(int value) {
        switch (value) {
          case 2: return NUM_DEVICES;
          case 0: return OPTIONALNUMDEVICES_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalNumDevicesCase
    getOptionalNumDevicesCase() {
      return OptionalNumDevicesCase.forNumber(
          optionalNumDevicesCase_);
    }

    public static final int AUTO_SHARD_POLICY_FIELD_NUMBER = 1;
    private int autoShardPolicy_;
    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     * @return The enum numeric value on the wire for autoShardPolicy.
     */
    @java.lang.Override public int getAutoShardPolicyValue() {
      return autoShardPolicy_;
    }
    /**
     * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
     * @return The autoShardPolicy.
     */
    @java.lang.Override public tensorflow.data.DatasetOptions.AutoShardPolicy getAutoShardPolicy() {
      @SuppressWarnings("deprecation")
      tensorflow.data.DatasetOptions.AutoShardPolicy result = tensorflow.data.DatasetOptions.AutoShardPolicy.valueOf(autoShardPolicy_);
      return result == null ? tensorflow.data.DatasetOptions.AutoShardPolicy.UNRECOGNIZED : result;
    }

    public static final int NUM_DEVICES_FIELD_NUMBER = 2;
    /**
     * <code>int32 num_devices = 2;</code>
     * @return Whether the numDevices field is set.
     */
    @java.lang.Override
    public boolean hasNumDevices() {
      return optionalNumDevicesCase_ == 2;
    }
    /**
     * <code>int32 num_devices = 2;</code>
     * @return The numDevices.
     */
    @java.lang.Override
    public int getNumDevices() {
      if (optionalNumDevicesCase_ == 2) {
        return (java.lang.Integer) optionalNumDevices_;
      }
      return 0;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (autoShardPolicy_ != tensorflow.data.DatasetOptions.AutoShardPolicy.AUTO.getNumber()) {
        output.writeEnum(1, autoShardPolicy_);
      }
      if (optionalNumDevicesCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) optionalNumDevices_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (autoShardPolicy_ != tensorflow.data.DatasetOptions.AutoShardPolicy.AUTO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, autoShardPolicy_);
      }
      if (optionalNumDevicesCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) optionalNumDevices_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.DistributeOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.DistributeOptions other = (tensorflow.data.DatasetOptions.DistributeOptions) obj;

      if (autoShardPolicy_ != other.autoShardPolicy_) return false;
      if (!getOptionalNumDevicesCase().equals(other.getOptionalNumDevicesCase())) return false;
      switch (optionalNumDevicesCase_) {
        case 2:
          if (getNumDevices()
              != other.getNumDevices()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUTO_SHARD_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + autoShardPolicy_;
      switch (optionalNumDevicesCase_) {
        case 2:
          hash = (37 * hash) + NUM_DEVICES_FIELD_NUMBER;
          hash = (53 * hash) + getNumDevices();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.DistributeOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.DistributeOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * next: 3
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.DistributeOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.DistributeOptions)
        tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.DistributeOptions.class, tensorflow.data.DatasetOptions.DistributeOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.DistributeOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        autoShardPolicy_ = 0;

        optionalNumDevicesCase_ = 0;
        optionalNumDevices_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_DistributeOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.DistributeOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.DistributeOptions build() {
        tensorflow.data.DatasetOptions.DistributeOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.DistributeOptions buildPartial() {
        tensorflow.data.DatasetOptions.DistributeOptions result = new tensorflow.data.DatasetOptions.DistributeOptions(this);
        result.autoShardPolicy_ = autoShardPolicy_;
        if (optionalNumDevicesCase_ == 2) {
          result.optionalNumDevices_ = optionalNumDevices_;
        }
        result.optionalNumDevicesCase_ = optionalNumDevicesCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.DistributeOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.DistributeOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.DistributeOptions other) {
        if (other == tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance()) return this;
        if (other.autoShardPolicy_ != 0) {
          setAutoShardPolicyValue(other.getAutoShardPolicyValue());
        }
        switch (other.getOptionalNumDevicesCase()) {
          case NUM_DEVICES: {
            setNumDevices(other.getNumDevices());
            break;
          }
          case OPTIONALNUMDEVICES_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                autoShardPolicy_ = input.readEnum();

                break;
              } // case 8
              case 16: {
                optionalNumDevices_ = input.readInt32();
                optionalNumDevicesCase_ = 2;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalNumDevicesCase_ = 0;
      private java.lang.Object optionalNumDevices_;
      public OptionalNumDevicesCase
          getOptionalNumDevicesCase() {
        return OptionalNumDevicesCase.forNumber(
            optionalNumDevicesCase_);
      }

      public Builder clearOptionalNumDevices() {
        optionalNumDevicesCase_ = 0;
        optionalNumDevices_ = null;
        onChanged();
        return this;
      }


      private int autoShardPolicy_ = 0;
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       * @return The enum numeric value on the wire for autoShardPolicy.
       */
      @java.lang.Override public int getAutoShardPolicyValue() {
        return autoShardPolicy_;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       * @param value The enum numeric value on the wire for autoShardPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setAutoShardPolicyValue(int value) {
        
        autoShardPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       * @return The autoShardPolicy.
       */
      @java.lang.Override
      public tensorflow.data.DatasetOptions.AutoShardPolicy getAutoShardPolicy() {
        @SuppressWarnings("deprecation")
        tensorflow.data.DatasetOptions.AutoShardPolicy result = tensorflow.data.DatasetOptions.AutoShardPolicy.valueOf(autoShardPolicy_);
        return result == null ? tensorflow.data.DatasetOptions.AutoShardPolicy.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       * @param value The autoShardPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setAutoShardPolicy(tensorflow.data.DatasetOptions.AutoShardPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        autoShardPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.AutoShardPolicy auto_shard_policy = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoShardPolicy() {
        
        autoShardPolicy_ = 0;
        onChanged();
        return this;
      }

      /**
       * <code>int32 num_devices = 2;</code>
       * @return Whether the numDevices field is set.
       */
      public boolean hasNumDevices() {
        return optionalNumDevicesCase_ == 2;
      }
      /**
       * <code>int32 num_devices = 2;</code>
       * @return The numDevices.
       */
      public int getNumDevices() {
        if (optionalNumDevicesCase_ == 2) {
          return (java.lang.Integer) optionalNumDevices_;
        }
        return 0;
      }
      /**
       * <code>int32 num_devices = 2;</code>
       * @param value The numDevices to set.
       * @return This builder for chaining.
       */
      public Builder setNumDevices(int value) {
        optionalNumDevicesCase_ = 2;
        optionalNumDevices_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_devices = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumDevices() {
        if (optionalNumDevicesCase_ == 2) {
          optionalNumDevicesCase_ = 0;
          optionalNumDevices_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.DistributeOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.DistributeOptions)
    private static final tensorflow.data.DatasetOptions.DistributeOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.DistributeOptions();
    }

    public static tensorflow.data.DatasetOptions.DistributeOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DistributeOptions>
        PARSER = new com.google.protobuf.AbstractParser<DistributeOptions>() {
      @java.lang.Override
      public DistributeOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DistributeOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DistributeOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.DistributeOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptimizationOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.OptimizationOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool apply_default_optimizations = 1;</code>
     * @return Whether the applyDefaultOptimizations field is set.
     */
    boolean hasApplyDefaultOptimizations();
    /**
     * <code>bool apply_default_optimizations = 1;</code>
     * @return The applyDefaultOptimizations.
     */
    boolean getApplyDefaultOptimizations();

    /**
     * <code>bool filter_fusion = 6;</code>
     * @return Whether the filterFusion field is set.
     */
    boolean hasFilterFusion();
    /**
     * <code>bool filter_fusion = 6;</code>
     * @return The filterFusion.
     */
    boolean getFilterFusion();

    /**
     * <code>bool map_and_batch_fusion = 9;</code>
     * @return Whether the mapAndBatchFusion field is set.
     */
    boolean hasMapAndBatchFusion();
    /**
     * <code>bool map_and_batch_fusion = 9;</code>
     * @return The mapAndBatchFusion.
     */
    boolean getMapAndBatchFusion();

    /**
     * <code>bool map_and_filter_fusion = 10;</code>
     * @return Whether the mapAndFilterFusion field is set.
     */
    boolean hasMapAndFilterFusion();
    /**
     * <code>bool map_and_filter_fusion = 10;</code>
     * @return The mapAndFilterFusion.
     */
    boolean getMapAndFilterFusion();

    /**
     * <code>bool map_fusion = 11;</code>
     * @return Whether the mapFusion field is set.
     */
    boolean hasMapFusion();
    /**
     * <code>bool map_fusion = 11;</code>
     * @return The mapFusion.
     */
    boolean getMapFusion();

    /**
     * <code>bool map_parallelization = 12;</code>
     * @return Whether the mapParallelization field is set.
     */
    boolean hasMapParallelization();
    /**
     * <code>bool map_parallelization = 12;</code>
     * @return The mapParallelization.
     */
    boolean getMapParallelization();

    /**
     * <code>bool noop_elimination = 14;</code>
     * @return Whether the noopElimination field is set.
     */
    boolean hasNoopElimination();
    /**
     * <code>bool noop_elimination = 14;</code>
     * @return The noopElimination.
     */
    boolean getNoopElimination();

    /**
     * <code>bool parallel_batch = 15;</code>
     * @return Whether the parallelBatch field is set.
     */
    boolean hasParallelBatch();
    /**
     * <code>bool parallel_batch = 15;</code>
     * @return The parallelBatch.
     */
    boolean getParallelBatch();

    /**
     * <code>bool shuffle_and_repeat_fusion = 17;</code>
     * @return Whether the shuffleAndRepeatFusion field is set.
     */
    boolean hasShuffleAndRepeatFusion();
    /**
     * <code>bool shuffle_and_repeat_fusion = 17;</code>
     * @return The shuffleAndRepeatFusion.
     */
    boolean getShuffleAndRepeatFusion();

    /**
     * <code>bool filter_parallelization = 18;</code>
     * @return Whether the filterParallelization field is set.
     */
    boolean hasFilterParallelization();
    /**
     * <code>bool filter_parallelization = 18;</code>
     * @return The filterParallelization.
     */
    boolean getFilterParallelization();

    /**
     * <code>bool inject_prefetch = 19;</code>
     * @return Whether the injectPrefetch field is set.
     */
    boolean hasInjectPrefetch();
    /**
     * <code>bool inject_prefetch = 19;</code>
     * @return The injectPrefetch.
     */
    boolean getInjectPrefetch();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalApplyDefaultOptimizationsCase getOptionalApplyDefaultOptimizationsCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalFilterFusionCase getOptionalFilterFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapAndBatchFusionCase getOptionalMapAndBatchFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapAndFilterFusionCase getOptionalMapAndFilterFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapFusionCase getOptionalMapFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalMapParallelizationCase getOptionalMapParallelizationCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalNoopEliminationCase getOptionalNoopEliminationCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalParallelBatchCase getOptionalParallelBatchCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalShuffleAndRepeatFusionCase getOptionalShuffleAndRepeatFusionCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalFilterParallelizationCase getOptionalFilterParallelizationCase();

    public tensorflow.data.DatasetOptions.OptimizationOptions.OptionalInjectPrefetchCase getOptionalInjectPrefetchCase();
  }
  /**
   * <pre>
   * next: 20
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.OptimizationOptions}
   */
  public static final class OptimizationOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.OptimizationOptions)
      OptimizationOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptimizationOptions.newBuilder() to construct.
    private OptimizationOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptimizationOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OptimizationOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.OptimizationOptions.class, tensorflow.data.DatasetOptions.OptimizationOptions.Builder.class);
    }

    private int optionalApplyDefaultOptimizationsCase_ = 0;
    private java.lang.Object optionalApplyDefaultOptimizations_;
    public enum OptionalApplyDefaultOptimizationsCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      APPLY_DEFAULT_OPTIMIZATIONS(1),
      OPTIONALAPPLYDEFAULTOPTIMIZATIONS_NOT_SET(0);
      private final int value;
      private OptionalApplyDefaultOptimizationsCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalApplyDefaultOptimizationsCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalApplyDefaultOptimizationsCase forNumber(int value) {
        switch (value) {
          case 1: return APPLY_DEFAULT_OPTIMIZATIONS;
          case 0: return OPTIONALAPPLYDEFAULTOPTIMIZATIONS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalApplyDefaultOptimizationsCase
    getOptionalApplyDefaultOptimizationsCase() {
      return OptionalApplyDefaultOptimizationsCase.forNumber(
          optionalApplyDefaultOptimizationsCase_);
    }

    private int optionalFilterFusionCase_ = 0;
    private java.lang.Object optionalFilterFusion_;
    public enum OptionalFilterFusionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      FILTER_FUSION(6),
      OPTIONALFILTERFUSION_NOT_SET(0);
      private final int value;
      private OptionalFilterFusionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalFilterFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalFilterFusionCase forNumber(int value) {
        switch (value) {
          case 6: return FILTER_FUSION;
          case 0: return OPTIONALFILTERFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalFilterFusionCase
    getOptionalFilterFusionCase() {
      return OptionalFilterFusionCase.forNumber(
          optionalFilterFusionCase_);
    }

    private int optionalMapAndBatchFusionCase_ = 0;
    private java.lang.Object optionalMapAndBatchFusion_;
    public enum OptionalMapAndBatchFusionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MAP_AND_BATCH_FUSION(9),
      OPTIONALMAPANDBATCHFUSION_NOT_SET(0);
      private final int value;
      private OptionalMapAndBatchFusionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapAndBatchFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapAndBatchFusionCase forNumber(int value) {
        switch (value) {
          case 9: return MAP_AND_BATCH_FUSION;
          case 0: return OPTIONALMAPANDBATCHFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapAndBatchFusionCase
    getOptionalMapAndBatchFusionCase() {
      return OptionalMapAndBatchFusionCase.forNumber(
          optionalMapAndBatchFusionCase_);
    }

    private int optionalMapAndFilterFusionCase_ = 0;
    private java.lang.Object optionalMapAndFilterFusion_;
    public enum OptionalMapAndFilterFusionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MAP_AND_FILTER_FUSION(10),
      OPTIONALMAPANDFILTERFUSION_NOT_SET(0);
      private final int value;
      private OptionalMapAndFilterFusionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapAndFilterFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapAndFilterFusionCase forNumber(int value) {
        switch (value) {
          case 10: return MAP_AND_FILTER_FUSION;
          case 0: return OPTIONALMAPANDFILTERFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapAndFilterFusionCase
    getOptionalMapAndFilterFusionCase() {
      return OptionalMapAndFilterFusionCase.forNumber(
          optionalMapAndFilterFusionCase_);
    }

    private int optionalMapFusionCase_ = 0;
    private java.lang.Object optionalMapFusion_;
    public enum OptionalMapFusionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MAP_FUSION(11),
      OPTIONALMAPFUSION_NOT_SET(0);
      private final int value;
      private OptionalMapFusionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapFusionCase forNumber(int value) {
        switch (value) {
          case 11: return MAP_FUSION;
          case 0: return OPTIONALMAPFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapFusionCase
    getOptionalMapFusionCase() {
      return OptionalMapFusionCase.forNumber(
          optionalMapFusionCase_);
    }

    private int optionalMapParallelizationCase_ = 0;
    private java.lang.Object optionalMapParallelization_;
    public enum OptionalMapParallelizationCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MAP_PARALLELIZATION(12),
      OPTIONALMAPPARALLELIZATION_NOT_SET(0);
      private final int value;
      private OptionalMapParallelizationCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMapParallelizationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMapParallelizationCase forNumber(int value) {
        switch (value) {
          case 12: return MAP_PARALLELIZATION;
          case 0: return OPTIONALMAPPARALLELIZATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMapParallelizationCase
    getOptionalMapParallelizationCase() {
      return OptionalMapParallelizationCase.forNumber(
          optionalMapParallelizationCase_);
    }

    private int optionalNoopEliminationCase_ = 0;
    private java.lang.Object optionalNoopElimination_;
    public enum OptionalNoopEliminationCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      NOOP_ELIMINATION(14),
      OPTIONALNOOPELIMINATION_NOT_SET(0);
      private final int value;
      private OptionalNoopEliminationCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalNoopEliminationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalNoopEliminationCase forNumber(int value) {
        switch (value) {
          case 14: return NOOP_ELIMINATION;
          case 0: return OPTIONALNOOPELIMINATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalNoopEliminationCase
    getOptionalNoopEliminationCase() {
      return OptionalNoopEliminationCase.forNumber(
          optionalNoopEliminationCase_);
    }

    private int optionalParallelBatchCase_ = 0;
    private java.lang.Object optionalParallelBatch_;
    public enum OptionalParallelBatchCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PARALLEL_BATCH(15),
      OPTIONALPARALLELBATCH_NOT_SET(0);
      private final int value;
      private OptionalParallelBatchCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalParallelBatchCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalParallelBatchCase forNumber(int value) {
        switch (value) {
          case 15: return PARALLEL_BATCH;
          case 0: return OPTIONALPARALLELBATCH_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalParallelBatchCase
    getOptionalParallelBatchCase() {
      return OptionalParallelBatchCase.forNumber(
          optionalParallelBatchCase_);
    }

    private int optionalShuffleAndRepeatFusionCase_ = 0;
    private java.lang.Object optionalShuffleAndRepeatFusion_;
    public enum OptionalShuffleAndRepeatFusionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SHUFFLE_AND_REPEAT_FUSION(17),
      OPTIONALSHUFFLEANDREPEATFUSION_NOT_SET(0);
      private final int value;
      private OptionalShuffleAndRepeatFusionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalShuffleAndRepeatFusionCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalShuffleAndRepeatFusionCase forNumber(int value) {
        switch (value) {
          case 17: return SHUFFLE_AND_REPEAT_FUSION;
          case 0: return OPTIONALSHUFFLEANDREPEATFUSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalShuffleAndRepeatFusionCase
    getOptionalShuffleAndRepeatFusionCase() {
      return OptionalShuffleAndRepeatFusionCase.forNumber(
          optionalShuffleAndRepeatFusionCase_);
    }

    private int optionalFilterParallelizationCase_ = 0;
    private java.lang.Object optionalFilterParallelization_;
    public enum OptionalFilterParallelizationCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      FILTER_PARALLELIZATION(18),
      OPTIONALFILTERPARALLELIZATION_NOT_SET(0);
      private final int value;
      private OptionalFilterParallelizationCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalFilterParallelizationCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalFilterParallelizationCase forNumber(int value) {
        switch (value) {
          case 18: return FILTER_PARALLELIZATION;
          case 0: return OPTIONALFILTERPARALLELIZATION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalFilterParallelizationCase
    getOptionalFilterParallelizationCase() {
      return OptionalFilterParallelizationCase.forNumber(
          optionalFilterParallelizationCase_);
    }

    private int optionalInjectPrefetchCase_ = 0;
    private java.lang.Object optionalInjectPrefetch_;
    public enum OptionalInjectPrefetchCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      INJECT_PREFETCH(19),
      OPTIONALINJECTPREFETCH_NOT_SET(0);
      private final int value;
      private OptionalInjectPrefetchCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalInjectPrefetchCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalInjectPrefetchCase forNumber(int value) {
        switch (value) {
          case 19: return INJECT_PREFETCH;
          case 0: return OPTIONALINJECTPREFETCH_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalInjectPrefetchCase
    getOptionalInjectPrefetchCase() {
      return OptionalInjectPrefetchCase.forNumber(
          optionalInjectPrefetchCase_);
    }

    public static final int APPLY_DEFAULT_OPTIMIZATIONS_FIELD_NUMBER = 1;
    /**
     * <code>bool apply_default_optimizations = 1;</code>
     * @return Whether the applyDefaultOptimizations field is set.
     */
    @java.lang.Override
    public boolean hasApplyDefaultOptimizations() {
      return optionalApplyDefaultOptimizationsCase_ == 1;
    }
    /**
     * <code>bool apply_default_optimizations = 1;</code>
     * @return The applyDefaultOptimizations.
     */
    @java.lang.Override
    public boolean getApplyDefaultOptimizations() {
      if (optionalApplyDefaultOptimizationsCase_ == 1) {
        return (java.lang.Boolean) optionalApplyDefaultOptimizations_;
      }
      return false;
    }

    public static final int FILTER_FUSION_FIELD_NUMBER = 6;
    /**
     * <code>bool filter_fusion = 6;</code>
     * @return Whether the filterFusion field is set.
     */
    @java.lang.Override
    public boolean hasFilterFusion() {
      return optionalFilterFusionCase_ == 6;
    }
    /**
     * <code>bool filter_fusion = 6;</code>
     * @return The filterFusion.
     */
    @java.lang.Override
    public boolean getFilterFusion() {
      if (optionalFilterFusionCase_ == 6) {
        return (java.lang.Boolean) optionalFilterFusion_;
      }
      return false;
    }

    public static final int MAP_AND_BATCH_FUSION_FIELD_NUMBER = 9;
    /**
     * <code>bool map_and_batch_fusion = 9;</code>
     * @return Whether the mapAndBatchFusion field is set.
     */
    @java.lang.Override
    public boolean hasMapAndBatchFusion() {
      return optionalMapAndBatchFusionCase_ == 9;
    }
    /**
     * <code>bool map_and_batch_fusion = 9;</code>
     * @return The mapAndBatchFusion.
     */
    @java.lang.Override
    public boolean getMapAndBatchFusion() {
      if (optionalMapAndBatchFusionCase_ == 9) {
        return (java.lang.Boolean) optionalMapAndBatchFusion_;
      }
      return false;
    }

    public static final int MAP_AND_FILTER_FUSION_FIELD_NUMBER = 10;
    /**
     * <code>bool map_and_filter_fusion = 10;</code>
     * @return Whether the mapAndFilterFusion field is set.
     */
    @java.lang.Override
    public boolean hasMapAndFilterFusion() {
      return optionalMapAndFilterFusionCase_ == 10;
    }
    /**
     * <code>bool map_and_filter_fusion = 10;</code>
     * @return The mapAndFilterFusion.
     */
    @java.lang.Override
    public boolean getMapAndFilterFusion() {
      if (optionalMapAndFilterFusionCase_ == 10) {
        return (java.lang.Boolean) optionalMapAndFilterFusion_;
      }
      return false;
    }

    public static final int MAP_FUSION_FIELD_NUMBER = 11;
    /**
     * <code>bool map_fusion = 11;</code>
     * @return Whether the mapFusion field is set.
     */
    @java.lang.Override
    public boolean hasMapFusion() {
      return optionalMapFusionCase_ == 11;
    }
    /**
     * <code>bool map_fusion = 11;</code>
     * @return The mapFusion.
     */
    @java.lang.Override
    public boolean getMapFusion() {
      if (optionalMapFusionCase_ == 11) {
        return (java.lang.Boolean) optionalMapFusion_;
      }
      return false;
    }

    public static final int MAP_PARALLELIZATION_FIELD_NUMBER = 12;
    /**
     * <code>bool map_parallelization = 12;</code>
     * @return Whether the mapParallelization field is set.
     */
    @java.lang.Override
    public boolean hasMapParallelization() {
      return optionalMapParallelizationCase_ == 12;
    }
    /**
     * <code>bool map_parallelization = 12;</code>
     * @return The mapParallelization.
     */
    @java.lang.Override
    public boolean getMapParallelization() {
      if (optionalMapParallelizationCase_ == 12) {
        return (java.lang.Boolean) optionalMapParallelization_;
      }
      return false;
    }

    public static final int NOOP_ELIMINATION_FIELD_NUMBER = 14;
    /**
     * <code>bool noop_elimination = 14;</code>
     * @return Whether the noopElimination field is set.
     */
    @java.lang.Override
    public boolean hasNoopElimination() {
      return optionalNoopEliminationCase_ == 14;
    }
    /**
     * <code>bool noop_elimination = 14;</code>
     * @return The noopElimination.
     */
    @java.lang.Override
    public boolean getNoopElimination() {
      if (optionalNoopEliminationCase_ == 14) {
        return (java.lang.Boolean) optionalNoopElimination_;
      }
      return false;
    }

    public static final int PARALLEL_BATCH_FIELD_NUMBER = 15;
    /**
     * <code>bool parallel_batch = 15;</code>
     * @return Whether the parallelBatch field is set.
     */
    @java.lang.Override
    public boolean hasParallelBatch() {
      return optionalParallelBatchCase_ == 15;
    }
    /**
     * <code>bool parallel_batch = 15;</code>
     * @return The parallelBatch.
     */
    @java.lang.Override
    public boolean getParallelBatch() {
      if (optionalParallelBatchCase_ == 15) {
        return (java.lang.Boolean) optionalParallelBatch_;
      }
      return false;
    }

    public static final int SHUFFLE_AND_REPEAT_FUSION_FIELD_NUMBER = 17;
    /**
     * <code>bool shuffle_and_repeat_fusion = 17;</code>
     * @return Whether the shuffleAndRepeatFusion field is set.
     */
    @java.lang.Override
    public boolean hasShuffleAndRepeatFusion() {
      return optionalShuffleAndRepeatFusionCase_ == 17;
    }
    /**
     * <code>bool shuffle_and_repeat_fusion = 17;</code>
     * @return The shuffleAndRepeatFusion.
     */
    @java.lang.Override
    public boolean getShuffleAndRepeatFusion() {
      if (optionalShuffleAndRepeatFusionCase_ == 17) {
        return (java.lang.Boolean) optionalShuffleAndRepeatFusion_;
      }
      return false;
    }

    public static final int FILTER_PARALLELIZATION_FIELD_NUMBER = 18;
    /**
     * <code>bool filter_parallelization = 18;</code>
     * @return Whether the filterParallelization field is set.
     */
    @java.lang.Override
    public boolean hasFilterParallelization() {
      return optionalFilterParallelizationCase_ == 18;
    }
    /**
     * <code>bool filter_parallelization = 18;</code>
     * @return The filterParallelization.
     */
    @java.lang.Override
    public boolean getFilterParallelization() {
      if (optionalFilterParallelizationCase_ == 18) {
        return (java.lang.Boolean) optionalFilterParallelization_;
      }
      return false;
    }

    public static final int INJECT_PREFETCH_FIELD_NUMBER = 19;
    /**
     * <code>bool inject_prefetch = 19;</code>
     * @return Whether the injectPrefetch field is set.
     */
    @java.lang.Override
    public boolean hasInjectPrefetch() {
      return optionalInjectPrefetchCase_ == 19;
    }
    /**
     * <code>bool inject_prefetch = 19;</code>
     * @return The injectPrefetch.
     */
    @java.lang.Override
    public boolean getInjectPrefetch() {
      if (optionalInjectPrefetchCase_ == 19) {
        return (java.lang.Boolean) optionalInjectPrefetch_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalApplyDefaultOptimizationsCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) optionalApplyDefaultOptimizations_));
      }
      if (optionalFilterFusionCase_ == 6) {
        output.writeBool(
            6, (boolean)((java.lang.Boolean) optionalFilterFusion_));
      }
      if (optionalMapAndBatchFusionCase_ == 9) {
        output.writeBool(
            9, (boolean)((java.lang.Boolean) optionalMapAndBatchFusion_));
      }
      if (optionalMapAndFilterFusionCase_ == 10) {
        output.writeBool(
            10, (boolean)((java.lang.Boolean) optionalMapAndFilterFusion_));
      }
      if (optionalMapFusionCase_ == 11) {
        output.writeBool(
            11, (boolean)((java.lang.Boolean) optionalMapFusion_));
      }
      if (optionalMapParallelizationCase_ == 12) {
        output.writeBool(
            12, (boolean)((java.lang.Boolean) optionalMapParallelization_));
      }
      if (optionalNoopEliminationCase_ == 14) {
        output.writeBool(
            14, (boolean)((java.lang.Boolean) optionalNoopElimination_));
      }
      if (optionalParallelBatchCase_ == 15) {
        output.writeBool(
            15, (boolean)((java.lang.Boolean) optionalParallelBatch_));
      }
      if (optionalShuffleAndRepeatFusionCase_ == 17) {
        output.writeBool(
            17, (boolean)((java.lang.Boolean) optionalShuffleAndRepeatFusion_));
      }
      if (optionalFilterParallelizationCase_ == 18) {
        output.writeBool(
            18, (boolean)((java.lang.Boolean) optionalFilterParallelization_));
      }
      if (optionalInjectPrefetchCase_ == 19) {
        output.writeBool(
            19, (boolean)((java.lang.Boolean) optionalInjectPrefetch_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalApplyDefaultOptimizationsCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) optionalApplyDefaultOptimizations_));
      }
      if (optionalFilterFusionCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              6, (boolean)((java.lang.Boolean) optionalFilterFusion_));
      }
      if (optionalMapAndBatchFusionCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              9, (boolean)((java.lang.Boolean) optionalMapAndBatchFusion_));
      }
      if (optionalMapAndFilterFusionCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              10, (boolean)((java.lang.Boolean) optionalMapAndFilterFusion_));
      }
      if (optionalMapFusionCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              11, (boolean)((java.lang.Boolean) optionalMapFusion_));
      }
      if (optionalMapParallelizationCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              12, (boolean)((java.lang.Boolean) optionalMapParallelization_));
      }
      if (optionalNoopEliminationCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              14, (boolean)((java.lang.Boolean) optionalNoopElimination_));
      }
      if (optionalParallelBatchCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              15, (boolean)((java.lang.Boolean) optionalParallelBatch_));
      }
      if (optionalShuffleAndRepeatFusionCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              17, (boolean)((java.lang.Boolean) optionalShuffleAndRepeatFusion_));
      }
      if (optionalFilterParallelizationCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              18, (boolean)((java.lang.Boolean) optionalFilterParallelization_));
      }
      if (optionalInjectPrefetchCase_ == 19) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              19, (boolean)((java.lang.Boolean) optionalInjectPrefetch_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.OptimizationOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.OptimizationOptions other = (tensorflow.data.DatasetOptions.OptimizationOptions) obj;

      if (!getOptionalApplyDefaultOptimizationsCase().equals(other.getOptionalApplyDefaultOptimizationsCase())) return false;
      switch (optionalApplyDefaultOptimizationsCase_) {
        case 1:
          if (getApplyDefaultOptimizations()
              != other.getApplyDefaultOptimizations()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalFilterFusionCase().equals(other.getOptionalFilterFusionCase())) return false;
      switch (optionalFilterFusionCase_) {
        case 6:
          if (getFilterFusion()
              != other.getFilterFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapAndBatchFusionCase().equals(other.getOptionalMapAndBatchFusionCase())) return false;
      switch (optionalMapAndBatchFusionCase_) {
        case 9:
          if (getMapAndBatchFusion()
              != other.getMapAndBatchFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapAndFilterFusionCase().equals(other.getOptionalMapAndFilterFusionCase())) return false;
      switch (optionalMapAndFilterFusionCase_) {
        case 10:
          if (getMapAndFilterFusion()
              != other.getMapAndFilterFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapFusionCase().equals(other.getOptionalMapFusionCase())) return false;
      switch (optionalMapFusionCase_) {
        case 11:
          if (getMapFusion()
              != other.getMapFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalMapParallelizationCase().equals(other.getOptionalMapParallelizationCase())) return false;
      switch (optionalMapParallelizationCase_) {
        case 12:
          if (getMapParallelization()
              != other.getMapParallelization()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalNoopEliminationCase().equals(other.getOptionalNoopEliminationCase())) return false;
      switch (optionalNoopEliminationCase_) {
        case 14:
          if (getNoopElimination()
              != other.getNoopElimination()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalParallelBatchCase().equals(other.getOptionalParallelBatchCase())) return false;
      switch (optionalParallelBatchCase_) {
        case 15:
          if (getParallelBatch()
              != other.getParallelBatch()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalShuffleAndRepeatFusionCase().equals(other.getOptionalShuffleAndRepeatFusionCase())) return false;
      switch (optionalShuffleAndRepeatFusionCase_) {
        case 17:
          if (getShuffleAndRepeatFusion()
              != other.getShuffleAndRepeatFusion()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalFilterParallelizationCase().equals(other.getOptionalFilterParallelizationCase())) return false;
      switch (optionalFilterParallelizationCase_) {
        case 18:
          if (getFilterParallelization()
              != other.getFilterParallelization()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalInjectPrefetchCase().equals(other.getOptionalInjectPrefetchCase())) return false;
      switch (optionalInjectPrefetchCase_) {
        case 19:
          if (getInjectPrefetch()
              != other.getInjectPrefetch()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (optionalApplyDefaultOptimizationsCase_) {
        case 1:
          hash = (37 * hash) + APPLY_DEFAULT_OPTIMIZATIONS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getApplyDefaultOptimizations());
          break;
        case 0:
        default:
      }
      switch (optionalFilterFusionCase_) {
        case 6:
          hash = (37 * hash) + FILTER_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFilterFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapAndBatchFusionCase_) {
        case 9:
          hash = (37 * hash) + MAP_AND_BATCH_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapAndBatchFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapAndFilterFusionCase_) {
        case 10:
          hash = (37 * hash) + MAP_AND_FILTER_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapAndFilterFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapFusionCase_) {
        case 11:
          hash = (37 * hash) + MAP_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapFusion());
          break;
        case 0:
        default:
      }
      switch (optionalMapParallelizationCase_) {
        case 12:
          hash = (37 * hash) + MAP_PARALLELIZATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getMapParallelization());
          break;
        case 0:
        default:
      }
      switch (optionalNoopEliminationCase_) {
        case 14:
          hash = (37 * hash) + NOOP_ELIMINATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getNoopElimination());
          break;
        case 0:
        default:
      }
      switch (optionalParallelBatchCase_) {
        case 15:
          hash = (37 * hash) + PARALLEL_BATCH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getParallelBatch());
          break;
        case 0:
        default:
      }
      switch (optionalShuffleAndRepeatFusionCase_) {
        case 17:
          hash = (37 * hash) + SHUFFLE_AND_REPEAT_FUSION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getShuffleAndRepeatFusion());
          break;
        case 0:
        default:
      }
      switch (optionalFilterParallelizationCase_) {
        case 18:
          hash = (37 * hash) + FILTER_PARALLELIZATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFilterParallelization());
          break;
        case 0:
        default:
      }
      switch (optionalInjectPrefetchCase_) {
        case 19:
          hash = (37 * hash) + INJECT_PREFETCH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getInjectPrefetch());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.OptimizationOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.OptimizationOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * next: 20
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.OptimizationOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.OptimizationOptions)
        tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.OptimizationOptions.class, tensorflow.data.DatasetOptions.OptimizationOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.OptimizationOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        optionalApplyDefaultOptimizationsCase_ = 0;
        optionalApplyDefaultOptimizations_ = null;
        optionalFilterFusionCase_ = 0;
        optionalFilterFusion_ = null;
        optionalMapAndBatchFusionCase_ = 0;
        optionalMapAndBatchFusion_ = null;
        optionalMapAndFilterFusionCase_ = 0;
        optionalMapAndFilterFusion_ = null;
        optionalMapFusionCase_ = 0;
        optionalMapFusion_ = null;
        optionalMapParallelizationCase_ = 0;
        optionalMapParallelization_ = null;
        optionalNoopEliminationCase_ = 0;
        optionalNoopElimination_ = null;
        optionalParallelBatchCase_ = 0;
        optionalParallelBatch_ = null;
        optionalShuffleAndRepeatFusionCase_ = 0;
        optionalShuffleAndRepeatFusion_ = null;
        optionalFilterParallelizationCase_ = 0;
        optionalFilterParallelization_ = null;
        optionalInjectPrefetchCase_ = 0;
        optionalInjectPrefetch_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_OptimizationOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.OptimizationOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.OptimizationOptions build() {
        tensorflow.data.DatasetOptions.OptimizationOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.OptimizationOptions buildPartial() {
        tensorflow.data.DatasetOptions.OptimizationOptions result = new tensorflow.data.DatasetOptions.OptimizationOptions(this);
        if (optionalApplyDefaultOptimizationsCase_ == 1) {
          result.optionalApplyDefaultOptimizations_ = optionalApplyDefaultOptimizations_;
        }
        if (optionalFilterFusionCase_ == 6) {
          result.optionalFilterFusion_ = optionalFilterFusion_;
        }
        if (optionalMapAndBatchFusionCase_ == 9) {
          result.optionalMapAndBatchFusion_ = optionalMapAndBatchFusion_;
        }
        if (optionalMapAndFilterFusionCase_ == 10) {
          result.optionalMapAndFilterFusion_ = optionalMapAndFilterFusion_;
        }
        if (optionalMapFusionCase_ == 11) {
          result.optionalMapFusion_ = optionalMapFusion_;
        }
        if (optionalMapParallelizationCase_ == 12) {
          result.optionalMapParallelization_ = optionalMapParallelization_;
        }
        if (optionalNoopEliminationCase_ == 14) {
          result.optionalNoopElimination_ = optionalNoopElimination_;
        }
        if (optionalParallelBatchCase_ == 15) {
          result.optionalParallelBatch_ = optionalParallelBatch_;
        }
        if (optionalShuffleAndRepeatFusionCase_ == 17) {
          result.optionalShuffleAndRepeatFusion_ = optionalShuffleAndRepeatFusion_;
        }
        if (optionalFilterParallelizationCase_ == 18) {
          result.optionalFilterParallelization_ = optionalFilterParallelization_;
        }
        if (optionalInjectPrefetchCase_ == 19) {
          result.optionalInjectPrefetch_ = optionalInjectPrefetch_;
        }
        result.optionalApplyDefaultOptimizationsCase_ = optionalApplyDefaultOptimizationsCase_;
        result.optionalFilterFusionCase_ = optionalFilterFusionCase_;
        result.optionalMapAndBatchFusionCase_ = optionalMapAndBatchFusionCase_;
        result.optionalMapAndFilterFusionCase_ = optionalMapAndFilterFusionCase_;
        result.optionalMapFusionCase_ = optionalMapFusionCase_;
        result.optionalMapParallelizationCase_ = optionalMapParallelizationCase_;
        result.optionalNoopEliminationCase_ = optionalNoopEliminationCase_;
        result.optionalParallelBatchCase_ = optionalParallelBatchCase_;
        result.optionalShuffleAndRepeatFusionCase_ = optionalShuffleAndRepeatFusionCase_;
        result.optionalFilterParallelizationCase_ = optionalFilterParallelizationCase_;
        result.optionalInjectPrefetchCase_ = optionalInjectPrefetchCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.OptimizationOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.OptimizationOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.OptimizationOptions other) {
        if (other == tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance()) return this;
        switch (other.getOptionalApplyDefaultOptimizationsCase()) {
          case APPLY_DEFAULT_OPTIMIZATIONS: {
            setApplyDefaultOptimizations(other.getApplyDefaultOptimizations());
            break;
          }
          case OPTIONALAPPLYDEFAULTOPTIMIZATIONS_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalFilterFusionCase()) {
          case FILTER_FUSION: {
            setFilterFusion(other.getFilterFusion());
            break;
          }
          case OPTIONALFILTERFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapAndBatchFusionCase()) {
          case MAP_AND_BATCH_FUSION: {
            setMapAndBatchFusion(other.getMapAndBatchFusion());
            break;
          }
          case OPTIONALMAPANDBATCHFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapAndFilterFusionCase()) {
          case MAP_AND_FILTER_FUSION: {
            setMapAndFilterFusion(other.getMapAndFilterFusion());
            break;
          }
          case OPTIONALMAPANDFILTERFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapFusionCase()) {
          case MAP_FUSION: {
            setMapFusion(other.getMapFusion());
            break;
          }
          case OPTIONALMAPFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalMapParallelizationCase()) {
          case MAP_PARALLELIZATION: {
            setMapParallelization(other.getMapParallelization());
            break;
          }
          case OPTIONALMAPPARALLELIZATION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalNoopEliminationCase()) {
          case NOOP_ELIMINATION: {
            setNoopElimination(other.getNoopElimination());
            break;
          }
          case OPTIONALNOOPELIMINATION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalParallelBatchCase()) {
          case PARALLEL_BATCH: {
            setParallelBatch(other.getParallelBatch());
            break;
          }
          case OPTIONALPARALLELBATCH_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalShuffleAndRepeatFusionCase()) {
          case SHUFFLE_AND_REPEAT_FUSION: {
            setShuffleAndRepeatFusion(other.getShuffleAndRepeatFusion());
            break;
          }
          case OPTIONALSHUFFLEANDREPEATFUSION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalFilterParallelizationCase()) {
          case FILTER_PARALLELIZATION: {
            setFilterParallelization(other.getFilterParallelization());
            break;
          }
          case OPTIONALFILTERPARALLELIZATION_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalInjectPrefetchCase()) {
          case INJECT_PREFETCH: {
            setInjectPrefetch(other.getInjectPrefetch());
            break;
          }
          case OPTIONALINJECTPREFETCH_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                optionalApplyDefaultOptimizations_ = input.readBool();
                optionalApplyDefaultOptimizationsCase_ = 1;
                break;
              } // case 8
              case 48: {
                optionalFilterFusion_ = input.readBool();
                optionalFilterFusionCase_ = 6;
                break;
              } // case 48
              case 72: {
                optionalMapAndBatchFusion_ = input.readBool();
                optionalMapAndBatchFusionCase_ = 9;
                break;
              } // case 72
              case 80: {
                optionalMapAndFilterFusion_ = input.readBool();
                optionalMapAndFilterFusionCase_ = 10;
                break;
              } // case 80
              case 88: {
                optionalMapFusion_ = input.readBool();
                optionalMapFusionCase_ = 11;
                break;
              } // case 88
              case 96: {
                optionalMapParallelization_ = input.readBool();
                optionalMapParallelizationCase_ = 12;
                break;
              } // case 96
              case 112: {
                optionalNoopElimination_ = input.readBool();
                optionalNoopEliminationCase_ = 14;
                break;
              } // case 112
              case 120: {
                optionalParallelBatch_ = input.readBool();
                optionalParallelBatchCase_ = 15;
                break;
              } // case 120
              case 136: {
                optionalShuffleAndRepeatFusion_ = input.readBool();
                optionalShuffleAndRepeatFusionCase_ = 17;
                break;
              } // case 136
              case 144: {
                optionalFilterParallelization_ = input.readBool();
                optionalFilterParallelizationCase_ = 18;
                break;
              } // case 144
              case 152: {
                optionalInjectPrefetch_ = input.readBool();
                optionalInjectPrefetchCase_ = 19;
                break;
              } // case 152
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalApplyDefaultOptimizationsCase_ = 0;
      private java.lang.Object optionalApplyDefaultOptimizations_;
      public OptionalApplyDefaultOptimizationsCase
          getOptionalApplyDefaultOptimizationsCase() {
        return OptionalApplyDefaultOptimizationsCase.forNumber(
            optionalApplyDefaultOptimizationsCase_);
      }

      public Builder clearOptionalApplyDefaultOptimizations() {
        optionalApplyDefaultOptimizationsCase_ = 0;
        optionalApplyDefaultOptimizations_ = null;
        onChanged();
        return this;
      }

      private int optionalFilterFusionCase_ = 0;
      private java.lang.Object optionalFilterFusion_;
      public OptionalFilterFusionCase
          getOptionalFilterFusionCase() {
        return OptionalFilterFusionCase.forNumber(
            optionalFilterFusionCase_);
      }

      public Builder clearOptionalFilterFusion() {
        optionalFilterFusionCase_ = 0;
        optionalFilterFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapAndBatchFusionCase_ = 0;
      private java.lang.Object optionalMapAndBatchFusion_;
      public OptionalMapAndBatchFusionCase
          getOptionalMapAndBatchFusionCase() {
        return OptionalMapAndBatchFusionCase.forNumber(
            optionalMapAndBatchFusionCase_);
      }

      public Builder clearOptionalMapAndBatchFusion() {
        optionalMapAndBatchFusionCase_ = 0;
        optionalMapAndBatchFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapAndFilterFusionCase_ = 0;
      private java.lang.Object optionalMapAndFilterFusion_;
      public OptionalMapAndFilterFusionCase
          getOptionalMapAndFilterFusionCase() {
        return OptionalMapAndFilterFusionCase.forNumber(
            optionalMapAndFilterFusionCase_);
      }

      public Builder clearOptionalMapAndFilterFusion() {
        optionalMapAndFilterFusionCase_ = 0;
        optionalMapAndFilterFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapFusionCase_ = 0;
      private java.lang.Object optionalMapFusion_;
      public OptionalMapFusionCase
          getOptionalMapFusionCase() {
        return OptionalMapFusionCase.forNumber(
            optionalMapFusionCase_);
      }

      public Builder clearOptionalMapFusion() {
        optionalMapFusionCase_ = 0;
        optionalMapFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalMapParallelizationCase_ = 0;
      private java.lang.Object optionalMapParallelization_;
      public OptionalMapParallelizationCase
          getOptionalMapParallelizationCase() {
        return OptionalMapParallelizationCase.forNumber(
            optionalMapParallelizationCase_);
      }

      public Builder clearOptionalMapParallelization() {
        optionalMapParallelizationCase_ = 0;
        optionalMapParallelization_ = null;
        onChanged();
        return this;
      }

      private int optionalNoopEliminationCase_ = 0;
      private java.lang.Object optionalNoopElimination_;
      public OptionalNoopEliminationCase
          getOptionalNoopEliminationCase() {
        return OptionalNoopEliminationCase.forNumber(
            optionalNoopEliminationCase_);
      }

      public Builder clearOptionalNoopElimination() {
        optionalNoopEliminationCase_ = 0;
        optionalNoopElimination_ = null;
        onChanged();
        return this;
      }

      private int optionalParallelBatchCase_ = 0;
      private java.lang.Object optionalParallelBatch_;
      public OptionalParallelBatchCase
          getOptionalParallelBatchCase() {
        return OptionalParallelBatchCase.forNumber(
            optionalParallelBatchCase_);
      }

      public Builder clearOptionalParallelBatch() {
        optionalParallelBatchCase_ = 0;
        optionalParallelBatch_ = null;
        onChanged();
        return this;
      }

      private int optionalShuffleAndRepeatFusionCase_ = 0;
      private java.lang.Object optionalShuffleAndRepeatFusion_;
      public OptionalShuffleAndRepeatFusionCase
          getOptionalShuffleAndRepeatFusionCase() {
        return OptionalShuffleAndRepeatFusionCase.forNumber(
            optionalShuffleAndRepeatFusionCase_);
      }

      public Builder clearOptionalShuffleAndRepeatFusion() {
        optionalShuffleAndRepeatFusionCase_ = 0;
        optionalShuffleAndRepeatFusion_ = null;
        onChanged();
        return this;
      }

      private int optionalFilterParallelizationCase_ = 0;
      private java.lang.Object optionalFilterParallelization_;
      public OptionalFilterParallelizationCase
          getOptionalFilterParallelizationCase() {
        return OptionalFilterParallelizationCase.forNumber(
            optionalFilterParallelizationCase_);
      }

      public Builder clearOptionalFilterParallelization() {
        optionalFilterParallelizationCase_ = 0;
        optionalFilterParallelization_ = null;
        onChanged();
        return this;
      }

      private int optionalInjectPrefetchCase_ = 0;
      private java.lang.Object optionalInjectPrefetch_;
      public OptionalInjectPrefetchCase
          getOptionalInjectPrefetchCase() {
        return OptionalInjectPrefetchCase.forNumber(
            optionalInjectPrefetchCase_);
      }

      public Builder clearOptionalInjectPrefetch() {
        optionalInjectPrefetchCase_ = 0;
        optionalInjectPrefetch_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bool apply_default_optimizations = 1;</code>
       * @return Whether the applyDefaultOptimizations field is set.
       */
      public boolean hasApplyDefaultOptimizations() {
        return optionalApplyDefaultOptimizationsCase_ == 1;
      }
      /**
       * <code>bool apply_default_optimizations = 1;</code>
       * @return The applyDefaultOptimizations.
       */
      public boolean getApplyDefaultOptimizations() {
        if (optionalApplyDefaultOptimizationsCase_ == 1) {
          return (java.lang.Boolean) optionalApplyDefaultOptimizations_;
        }
        return false;
      }
      /**
       * <code>bool apply_default_optimizations = 1;</code>
       * @param value The applyDefaultOptimizations to set.
       * @return This builder for chaining.
       */
      public Builder setApplyDefaultOptimizations(boolean value) {
        optionalApplyDefaultOptimizationsCase_ = 1;
        optionalApplyDefaultOptimizations_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool apply_default_optimizations = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearApplyDefaultOptimizations() {
        if (optionalApplyDefaultOptimizationsCase_ == 1) {
          optionalApplyDefaultOptimizationsCase_ = 0;
          optionalApplyDefaultOptimizations_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool filter_fusion = 6;</code>
       * @return Whether the filterFusion field is set.
       */
      public boolean hasFilterFusion() {
        return optionalFilterFusionCase_ == 6;
      }
      /**
       * <code>bool filter_fusion = 6;</code>
       * @return The filterFusion.
       */
      public boolean getFilterFusion() {
        if (optionalFilterFusionCase_ == 6) {
          return (java.lang.Boolean) optionalFilterFusion_;
        }
        return false;
      }
      /**
       * <code>bool filter_fusion = 6;</code>
       * @param value The filterFusion to set.
       * @return This builder for chaining.
       */
      public Builder setFilterFusion(boolean value) {
        optionalFilterFusionCase_ = 6;
        optionalFilterFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool filter_fusion = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilterFusion() {
        if (optionalFilterFusionCase_ == 6) {
          optionalFilterFusionCase_ = 0;
          optionalFilterFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       * @return Whether the mapAndBatchFusion field is set.
       */
      public boolean hasMapAndBatchFusion() {
        return optionalMapAndBatchFusionCase_ == 9;
      }
      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       * @return The mapAndBatchFusion.
       */
      public boolean getMapAndBatchFusion() {
        if (optionalMapAndBatchFusionCase_ == 9) {
          return (java.lang.Boolean) optionalMapAndBatchFusion_;
        }
        return false;
      }
      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       * @param value The mapAndBatchFusion to set.
       * @return This builder for chaining.
       */
      public Builder setMapAndBatchFusion(boolean value) {
        optionalMapAndBatchFusionCase_ = 9;
        optionalMapAndBatchFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_and_batch_fusion = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMapAndBatchFusion() {
        if (optionalMapAndBatchFusionCase_ == 9) {
          optionalMapAndBatchFusionCase_ = 0;
          optionalMapAndBatchFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       * @return Whether the mapAndFilterFusion field is set.
       */
      public boolean hasMapAndFilterFusion() {
        return optionalMapAndFilterFusionCase_ == 10;
      }
      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       * @return The mapAndFilterFusion.
       */
      public boolean getMapAndFilterFusion() {
        if (optionalMapAndFilterFusionCase_ == 10) {
          return (java.lang.Boolean) optionalMapAndFilterFusion_;
        }
        return false;
      }
      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       * @param value The mapAndFilterFusion to set.
       * @return This builder for chaining.
       */
      public Builder setMapAndFilterFusion(boolean value) {
        optionalMapAndFilterFusionCase_ = 10;
        optionalMapAndFilterFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_and_filter_fusion = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMapAndFilterFusion() {
        if (optionalMapAndFilterFusionCase_ == 10) {
          optionalMapAndFilterFusionCase_ = 0;
          optionalMapAndFilterFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_fusion = 11;</code>
       * @return Whether the mapFusion field is set.
       */
      public boolean hasMapFusion() {
        return optionalMapFusionCase_ == 11;
      }
      /**
       * <code>bool map_fusion = 11;</code>
       * @return The mapFusion.
       */
      public boolean getMapFusion() {
        if (optionalMapFusionCase_ == 11) {
          return (java.lang.Boolean) optionalMapFusion_;
        }
        return false;
      }
      /**
       * <code>bool map_fusion = 11;</code>
       * @param value The mapFusion to set.
       * @return This builder for chaining.
       */
      public Builder setMapFusion(boolean value) {
        optionalMapFusionCase_ = 11;
        optionalMapFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_fusion = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMapFusion() {
        if (optionalMapFusionCase_ == 11) {
          optionalMapFusionCase_ = 0;
          optionalMapFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool map_parallelization = 12;</code>
       * @return Whether the mapParallelization field is set.
       */
      public boolean hasMapParallelization() {
        return optionalMapParallelizationCase_ == 12;
      }
      /**
       * <code>bool map_parallelization = 12;</code>
       * @return The mapParallelization.
       */
      public boolean getMapParallelization() {
        if (optionalMapParallelizationCase_ == 12) {
          return (java.lang.Boolean) optionalMapParallelization_;
        }
        return false;
      }
      /**
       * <code>bool map_parallelization = 12;</code>
       * @param value The mapParallelization to set.
       * @return This builder for chaining.
       */
      public Builder setMapParallelization(boolean value) {
        optionalMapParallelizationCase_ = 12;
        optionalMapParallelization_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool map_parallelization = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearMapParallelization() {
        if (optionalMapParallelizationCase_ == 12) {
          optionalMapParallelizationCase_ = 0;
          optionalMapParallelization_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool noop_elimination = 14;</code>
       * @return Whether the noopElimination field is set.
       */
      public boolean hasNoopElimination() {
        return optionalNoopEliminationCase_ == 14;
      }
      /**
       * <code>bool noop_elimination = 14;</code>
       * @return The noopElimination.
       */
      public boolean getNoopElimination() {
        if (optionalNoopEliminationCase_ == 14) {
          return (java.lang.Boolean) optionalNoopElimination_;
        }
        return false;
      }
      /**
       * <code>bool noop_elimination = 14;</code>
       * @param value The noopElimination to set.
       * @return This builder for chaining.
       */
      public Builder setNoopElimination(boolean value) {
        optionalNoopEliminationCase_ = 14;
        optionalNoopElimination_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool noop_elimination = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearNoopElimination() {
        if (optionalNoopEliminationCase_ == 14) {
          optionalNoopEliminationCase_ = 0;
          optionalNoopElimination_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool parallel_batch = 15;</code>
       * @return Whether the parallelBatch field is set.
       */
      public boolean hasParallelBatch() {
        return optionalParallelBatchCase_ == 15;
      }
      /**
       * <code>bool parallel_batch = 15;</code>
       * @return The parallelBatch.
       */
      public boolean getParallelBatch() {
        if (optionalParallelBatchCase_ == 15) {
          return (java.lang.Boolean) optionalParallelBatch_;
        }
        return false;
      }
      /**
       * <code>bool parallel_batch = 15;</code>
       * @param value The parallelBatch to set.
       * @return This builder for chaining.
       */
      public Builder setParallelBatch(boolean value) {
        optionalParallelBatchCase_ = 15;
        optionalParallelBatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool parallel_batch = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearParallelBatch() {
        if (optionalParallelBatchCase_ == 15) {
          optionalParallelBatchCase_ = 0;
          optionalParallelBatch_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       * @return Whether the shuffleAndRepeatFusion field is set.
       */
      public boolean hasShuffleAndRepeatFusion() {
        return optionalShuffleAndRepeatFusionCase_ == 17;
      }
      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       * @return The shuffleAndRepeatFusion.
       */
      public boolean getShuffleAndRepeatFusion() {
        if (optionalShuffleAndRepeatFusionCase_ == 17) {
          return (java.lang.Boolean) optionalShuffleAndRepeatFusion_;
        }
        return false;
      }
      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       * @param value The shuffleAndRepeatFusion to set.
       * @return This builder for chaining.
       */
      public Builder setShuffleAndRepeatFusion(boolean value) {
        optionalShuffleAndRepeatFusionCase_ = 17;
        optionalShuffleAndRepeatFusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool shuffle_and_repeat_fusion = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearShuffleAndRepeatFusion() {
        if (optionalShuffleAndRepeatFusionCase_ == 17) {
          optionalShuffleAndRepeatFusionCase_ = 0;
          optionalShuffleAndRepeatFusion_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool filter_parallelization = 18;</code>
       * @return Whether the filterParallelization field is set.
       */
      public boolean hasFilterParallelization() {
        return optionalFilterParallelizationCase_ == 18;
      }
      /**
       * <code>bool filter_parallelization = 18;</code>
       * @return The filterParallelization.
       */
      public boolean getFilterParallelization() {
        if (optionalFilterParallelizationCase_ == 18) {
          return (java.lang.Boolean) optionalFilterParallelization_;
        }
        return false;
      }
      /**
       * <code>bool filter_parallelization = 18;</code>
       * @param value The filterParallelization to set.
       * @return This builder for chaining.
       */
      public Builder setFilterParallelization(boolean value) {
        optionalFilterParallelizationCase_ = 18;
        optionalFilterParallelization_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool filter_parallelization = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilterParallelization() {
        if (optionalFilterParallelizationCase_ == 18) {
          optionalFilterParallelizationCase_ = 0;
          optionalFilterParallelization_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool inject_prefetch = 19;</code>
       * @return Whether the injectPrefetch field is set.
       */
      public boolean hasInjectPrefetch() {
        return optionalInjectPrefetchCase_ == 19;
      }
      /**
       * <code>bool inject_prefetch = 19;</code>
       * @return The injectPrefetch.
       */
      public boolean getInjectPrefetch() {
        if (optionalInjectPrefetchCase_ == 19) {
          return (java.lang.Boolean) optionalInjectPrefetch_;
        }
        return false;
      }
      /**
       * <code>bool inject_prefetch = 19;</code>
       * @param value The injectPrefetch to set.
       * @return This builder for chaining.
       */
      public Builder setInjectPrefetch(boolean value) {
        optionalInjectPrefetchCase_ = 19;
        optionalInjectPrefetch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool inject_prefetch = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearInjectPrefetch() {
        if (optionalInjectPrefetchCase_ == 19) {
          optionalInjectPrefetchCase_ = 0;
          optionalInjectPrefetch_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.OptimizationOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.OptimizationOptions)
    private static final tensorflow.data.DatasetOptions.OptimizationOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.OptimizationOptions();
    }

    public static tensorflow.data.DatasetOptions.OptimizationOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OptimizationOptions>
        PARSER = new com.google.protobuf.AbstractParser<OptimizationOptions>() {
      @java.lang.Override
      public OptimizationOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OptimizationOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptimizationOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.OptimizationOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThreadingOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.ThreadingOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 max_intra_op_parallelism = 1;</code>
     * @return Whether the maxIntraOpParallelism field is set.
     */
    boolean hasMaxIntraOpParallelism();
    /**
     * <code>int32 max_intra_op_parallelism = 1;</code>
     * @return The maxIntraOpParallelism.
     */
    int getMaxIntraOpParallelism();

    /**
     * <code>int32 private_threadpool_size = 2;</code>
     * @return Whether the privateThreadpoolSize field is set.
     */
    boolean hasPrivateThreadpoolSize();
    /**
     * <code>int32 private_threadpool_size = 2;</code>
     * @return The privateThreadpoolSize.
     */
    int getPrivateThreadpoolSize();

    public tensorflow.data.DatasetOptions.ThreadingOptions.OptionalMaxIntraOpParallelismCase getOptionalMaxIntraOpParallelismCase();

    public tensorflow.data.DatasetOptions.ThreadingOptions.OptionalPrivateThreadpoolSizeCase getOptionalPrivateThreadpoolSizeCase();
  }
  /**
   * <pre>
   * next: 3
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.ThreadingOptions}
   */
  public static final class ThreadingOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.ThreadingOptions)
      ThreadingOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ThreadingOptions.newBuilder() to construct.
    private ThreadingOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThreadingOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ThreadingOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.ThreadingOptions.class, tensorflow.data.DatasetOptions.ThreadingOptions.Builder.class);
    }

    private int optionalMaxIntraOpParallelismCase_ = 0;
    private java.lang.Object optionalMaxIntraOpParallelism_;
    public enum OptionalMaxIntraOpParallelismCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MAX_INTRA_OP_PARALLELISM(1),
      OPTIONALMAXINTRAOPPARALLELISM_NOT_SET(0);
      private final int value;
      private OptionalMaxIntraOpParallelismCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalMaxIntraOpParallelismCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalMaxIntraOpParallelismCase forNumber(int value) {
        switch (value) {
          case 1: return MAX_INTRA_OP_PARALLELISM;
          case 0: return OPTIONALMAXINTRAOPPARALLELISM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalMaxIntraOpParallelismCase
    getOptionalMaxIntraOpParallelismCase() {
      return OptionalMaxIntraOpParallelismCase.forNumber(
          optionalMaxIntraOpParallelismCase_);
    }

    private int optionalPrivateThreadpoolSizeCase_ = 0;
    private java.lang.Object optionalPrivateThreadpoolSize_;
    public enum OptionalPrivateThreadpoolSizeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PRIVATE_THREADPOOL_SIZE(2),
      OPTIONALPRIVATETHREADPOOLSIZE_NOT_SET(0);
      private final int value;
      private OptionalPrivateThreadpoolSizeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalPrivateThreadpoolSizeCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalPrivateThreadpoolSizeCase forNumber(int value) {
        switch (value) {
          case 2: return PRIVATE_THREADPOOL_SIZE;
          case 0: return OPTIONALPRIVATETHREADPOOLSIZE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalPrivateThreadpoolSizeCase
    getOptionalPrivateThreadpoolSizeCase() {
      return OptionalPrivateThreadpoolSizeCase.forNumber(
          optionalPrivateThreadpoolSizeCase_);
    }

    public static final int MAX_INTRA_OP_PARALLELISM_FIELD_NUMBER = 1;
    /**
     * <code>int32 max_intra_op_parallelism = 1;</code>
     * @return Whether the maxIntraOpParallelism field is set.
     */
    @java.lang.Override
    public boolean hasMaxIntraOpParallelism() {
      return optionalMaxIntraOpParallelismCase_ == 1;
    }
    /**
     * <code>int32 max_intra_op_parallelism = 1;</code>
     * @return The maxIntraOpParallelism.
     */
    @java.lang.Override
    public int getMaxIntraOpParallelism() {
      if (optionalMaxIntraOpParallelismCase_ == 1) {
        return (java.lang.Integer) optionalMaxIntraOpParallelism_;
      }
      return 0;
    }

    public static final int PRIVATE_THREADPOOL_SIZE_FIELD_NUMBER = 2;
    /**
     * <code>int32 private_threadpool_size = 2;</code>
     * @return Whether the privateThreadpoolSize field is set.
     */
    @java.lang.Override
    public boolean hasPrivateThreadpoolSize() {
      return optionalPrivateThreadpoolSizeCase_ == 2;
    }
    /**
     * <code>int32 private_threadpool_size = 2;</code>
     * @return The privateThreadpoolSize.
     */
    @java.lang.Override
    public int getPrivateThreadpoolSize() {
      if (optionalPrivateThreadpoolSizeCase_ == 2) {
        return (java.lang.Integer) optionalPrivateThreadpoolSize_;
      }
      return 0;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalMaxIntraOpParallelismCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) optionalMaxIntraOpParallelism_));
      }
      if (optionalPrivateThreadpoolSizeCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) optionalPrivateThreadpoolSize_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalMaxIntraOpParallelismCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) optionalMaxIntraOpParallelism_));
      }
      if (optionalPrivateThreadpoolSizeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) optionalPrivateThreadpoolSize_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.ThreadingOptions)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.ThreadingOptions other = (tensorflow.data.DatasetOptions.ThreadingOptions) obj;

      if (!getOptionalMaxIntraOpParallelismCase().equals(other.getOptionalMaxIntraOpParallelismCase())) return false;
      switch (optionalMaxIntraOpParallelismCase_) {
        case 1:
          if (getMaxIntraOpParallelism()
              != other.getMaxIntraOpParallelism()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalPrivateThreadpoolSizeCase().equals(other.getOptionalPrivateThreadpoolSizeCase())) return false;
      switch (optionalPrivateThreadpoolSizeCase_) {
        case 2:
          if (getPrivateThreadpoolSize()
              != other.getPrivateThreadpoolSize()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (optionalMaxIntraOpParallelismCase_) {
        case 1:
          hash = (37 * hash) + MAX_INTRA_OP_PARALLELISM_FIELD_NUMBER;
          hash = (53 * hash) + getMaxIntraOpParallelism();
          break;
        case 0:
        default:
      }
      switch (optionalPrivateThreadpoolSizeCase_) {
        case 2:
          hash = (37 * hash) + PRIVATE_THREADPOOL_SIZE_FIELD_NUMBER;
          hash = (53 * hash) + getPrivateThreadpoolSize();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.ThreadingOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.ThreadingOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * next: 3
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.ThreadingOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.ThreadingOptions)
        tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.ThreadingOptions.class, tensorflow.data.DatasetOptions.ThreadingOptions.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.ThreadingOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        optionalMaxIntraOpParallelismCase_ = 0;
        optionalMaxIntraOpParallelism_ = null;
        optionalPrivateThreadpoolSizeCase_ = 0;
        optionalPrivateThreadpoolSize_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_ThreadingOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.ThreadingOptions getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.ThreadingOptions build() {
        tensorflow.data.DatasetOptions.ThreadingOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.ThreadingOptions buildPartial() {
        tensorflow.data.DatasetOptions.ThreadingOptions result = new tensorflow.data.DatasetOptions.ThreadingOptions(this);
        if (optionalMaxIntraOpParallelismCase_ == 1) {
          result.optionalMaxIntraOpParallelism_ = optionalMaxIntraOpParallelism_;
        }
        if (optionalPrivateThreadpoolSizeCase_ == 2) {
          result.optionalPrivateThreadpoolSize_ = optionalPrivateThreadpoolSize_;
        }
        result.optionalMaxIntraOpParallelismCase_ = optionalMaxIntraOpParallelismCase_;
        result.optionalPrivateThreadpoolSizeCase_ = optionalPrivateThreadpoolSizeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.ThreadingOptions) {
          return mergeFrom((tensorflow.data.DatasetOptions.ThreadingOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.ThreadingOptions other) {
        if (other == tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance()) return this;
        switch (other.getOptionalMaxIntraOpParallelismCase()) {
          case MAX_INTRA_OP_PARALLELISM: {
            setMaxIntraOpParallelism(other.getMaxIntraOpParallelism());
            break;
          }
          case OPTIONALMAXINTRAOPPARALLELISM_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalPrivateThreadpoolSizeCase()) {
          case PRIVATE_THREADPOOL_SIZE: {
            setPrivateThreadpoolSize(other.getPrivateThreadpoolSize());
            break;
          }
          case OPTIONALPRIVATETHREADPOOLSIZE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                optionalMaxIntraOpParallelism_ = input.readInt32();
                optionalMaxIntraOpParallelismCase_ = 1;
                break;
              } // case 8
              case 16: {
                optionalPrivateThreadpoolSize_ = input.readInt32();
                optionalPrivateThreadpoolSizeCase_ = 2;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalMaxIntraOpParallelismCase_ = 0;
      private java.lang.Object optionalMaxIntraOpParallelism_;
      public OptionalMaxIntraOpParallelismCase
          getOptionalMaxIntraOpParallelismCase() {
        return OptionalMaxIntraOpParallelismCase.forNumber(
            optionalMaxIntraOpParallelismCase_);
      }

      public Builder clearOptionalMaxIntraOpParallelism() {
        optionalMaxIntraOpParallelismCase_ = 0;
        optionalMaxIntraOpParallelism_ = null;
        onChanged();
        return this;
      }

      private int optionalPrivateThreadpoolSizeCase_ = 0;
      private java.lang.Object optionalPrivateThreadpoolSize_;
      public OptionalPrivateThreadpoolSizeCase
          getOptionalPrivateThreadpoolSizeCase() {
        return OptionalPrivateThreadpoolSizeCase.forNumber(
            optionalPrivateThreadpoolSizeCase_);
      }

      public Builder clearOptionalPrivateThreadpoolSize() {
        optionalPrivateThreadpoolSizeCase_ = 0;
        optionalPrivateThreadpoolSize_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       * @return Whether the maxIntraOpParallelism field is set.
       */
      public boolean hasMaxIntraOpParallelism() {
        return optionalMaxIntraOpParallelismCase_ == 1;
      }
      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       * @return The maxIntraOpParallelism.
       */
      public int getMaxIntraOpParallelism() {
        if (optionalMaxIntraOpParallelismCase_ == 1) {
          return (java.lang.Integer) optionalMaxIntraOpParallelism_;
        }
        return 0;
      }
      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       * @param value The maxIntraOpParallelism to set.
       * @return This builder for chaining.
       */
      public Builder setMaxIntraOpParallelism(int value) {
        optionalMaxIntraOpParallelismCase_ = 1;
        optionalMaxIntraOpParallelism_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_intra_op_parallelism = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxIntraOpParallelism() {
        if (optionalMaxIntraOpParallelismCase_ == 1) {
          optionalMaxIntraOpParallelismCase_ = 0;
          optionalMaxIntraOpParallelism_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 private_threadpool_size = 2;</code>
       * @return Whether the privateThreadpoolSize field is set.
       */
      public boolean hasPrivateThreadpoolSize() {
        return optionalPrivateThreadpoolSizeCase_ == 2;
      }
      /**
       * <code>int32 private_threadpool_size = 2;</code>
       * @return The privateThreadpoolSize.
       */
      public int getPrivateThreadpoolSize() {
        if (optionalPrivateThreadpoolSizeCase_ == 2) {
          return (java.lang.Integer) optionalPrivateThreadpoolSize_;
        }
        return 0;
      }
      /**
       * <code>int32 private_threadpool_size = 2;</code>
       * @param value The privateThreadpoolSize to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateThreadpoolSize(int value) {
        optionalPrivateThreadpoolSizeCase_ = 2;
        optionalPrivateThreadpoolSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 private_threadpool_size = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateThreadpoolSize() {
        if (optionalPrivateThreadpoolSizeCase_ == 2) {
          optionalPrivateThreadpoolSizeCase_ = 0;
          optionalPrivateThreadpoolSize_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.ThreadingOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.ThreadingOptions)
    private static final tensorflow.data.DatasetOptions.ThreadingOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.ThreadingOptions();
    }

    public static tensorflow.data.DatasetOptions.ThreadingOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThreadingOptions>
        PARSER = new com.google.protobuf.AbstractParser<ThreadingOptions>() {
      @java.lang.Override
      public ThreadingOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ThreadingOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThreadingOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.ThreadingOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.Options)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool deterministic = 1;</code>
     * @return Whether the deterministic field is set.
     */
    boolean hasDeterministic();
    /**
     * <code>bool deterministic = 1;</code>
     * @return The deterministic.
     */
    boolean getDeterministic();

    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
     * @return Whether the autotuneOptions field is set.
     */
    boolean hasAutotuneOptions();
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
     * @return The autotuneOptions.
     */
    tensorflow.data.DatasetOptions.AutotuneOptions getAutotuneOptions();
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
     */
    tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder getAutotuneOptionsOrBuilder();

    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     * @return Whether the distributeOptions field is set.
     */
    boolean hasDistributeOptions();
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     * @return The distributeOptions.
     */
    tensorflow.data.DatasetOptions.DistributeOptions getDistributeOptions();
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder getDistributeOptionsOrBuilder();

    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     * @return Whether the optimizationOptions field is set.
     */
    boolean hasOptimizationOptions();
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     * @return The optimizationOptions.
     */
    tensorflow.data.DatasetOptions.OptimizationOptions getOptimizationOptions();
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder getOptimizationOptionsOrBuilder();

    /**
     * <code>bool slack = 4;</code>
     * @return Whether the slack field is set.
     */
    boolean hasSlack();
    /**
     * <code>bool slack = 4;</code>
     * @return The slack.
     */
    boolean getSlack();

    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     * @return Whether the threadingOptions field is set.
     */
    boolean hasThreadingOptions();
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     * @return The threadingOptions.
     */
    tensorflow.data.DatasetOptions.ThreadingOptions getThreadingOptions();
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder getThreadingOptionsOrBuilder();

    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     * @return Whether the externalStatePolicy field is set.
     */
    boolean hasExternalStatePolicy();
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     * @return The enum numeric value on the wire for externalStatePolicy.
     */
    int getExternalStatePolicyValue();
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     * @return The externalStatePolicy.
     */
    tensorflow.data.DatasetOptions.ExternalStatePolicy getExternalStatePolicy();

    /**
     * <code>bool symbolic_checkpoint = 8;</code>
     * @return Whether the symbolicCheckpoint field is set.
     */
    boolean hasSymbolicCheckpoint();
    /**
     * <code>bool symbolic_checkpoint = 8;</code>
     * @return The symbolicCheckpoint.
     */
    boolean getSymbolicCheckpoint();

    public tensorflow.data.DatasetOptions.Options.OptionalDeterministicCase getOptionalDeterministicCase();

    public tensorflow.data.DatasetOptions.Options.OptionalSlackCase getOptionalSlackCase();

    public tensorflow.data.DatasetOptions.Options.OptionalExternalStatePolicyCase getOptionalExternalStatePolicyCase();

    public tensorflow.data.DatasetOptions.Options.OptionalSymbolicCheckpointCase getOptionalSymbolicCheckpointCase();
  }
  /**
   * <pre>
   * Message stored with Dataset objects to control how datasets are processed and
   * optimized.
   * next: 9
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.Options}
   */
  public static final class Options extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.Options)
      OptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Options.newBuilder() to construct.
    private Options(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Options() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Options();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DatasetOptions.Options.class, tensorflow.data.DatasetOptions.Options.Builder.class);
    }

    private int optionalDeterministicCase_ = 0;
    private java.lang.Object optionalDeterministic_;
    public enum OptionalDeterministicCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DETERMINISTIC(1),
      OPTIONALDETERMINISTIC_NOT_SET(0);
      private final int value;
      private OptionalDeterministicCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalDeterministicCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalDeterministicCase forNumber(int value) {
        switch (value) {
          case 1: return DETERMINISTIC;
          case 0: return OPTIONALDETERMINISTIC_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalDeterministicCase
    getOptionalDeterministicCase() {
      return OptionalDeterministicCase.forNumber(
          optionalDeterministicCase_);
    }

    private int optionalSlackCase_ = 0;
    private java.lang.Object optionalSlack_;
    public enum OptionalSlackCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SLACK(4),
      OPTIONALSLACK_NOT_SET(0);
      private final int value;
      private OptionalSlackCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalSlackCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalSlackCase forNumber(int value) {
        switch (value) {
          case 4: return SLACK;
          case 0: return OPTIONALSLACK_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalSlackCase
    getOptionalSlackCase() {
      return OptionalSlackCase.forNumber(
          optionalSlackCase_);
    }

    private int optionalExternalStatePolicyCase_ = 0;
    private java.lang.Object optionalExternalStatePolicy_;
    public enum OptionalExternalStatePolicyCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      EXTERNAL_STATE_POLICY(6),
      OPTIONALEXTERNALSTATEPOLICY_NOT_SET(0);
      private final int value;
      private OptionalExternalStatePolicyCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalExternalStatePolicyCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalExternalStatePolicyCase forNumber(int value) {
        switch (value) {
          case 6: return EXTERNAL_STATE_POLICY;
          case 0: return OPTIONALEXTERNALSTATEPOLICY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalExternalStatePolicyCase
    getOptionalExternalStatePolicyCase() {
      return OptionalExternalStatePolicyCase.forNumber(
          optionalExternalStatePolicyCase_);
    }

    private int optionalSymbolicCheckpointCase_ = 0;
    private java.lang.Object optionalSymbolicCheckpoint_;
    public enum OptionalSymbolicCheckpointCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SYMBOLIC_CHECKPOINT(8),
      OPTIONALSYMBOLICCHECKPOINT_NOT_SET(0);
      private final int value;
      private OptionalSymbolicCheckpointCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalSymbolicCheckpointCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalSymbolicCheckpointCase forNumber(int value) {
        switch (value) {
          case 8: return SYMBOLIC_CHECKPOINT;
          case 0: return OPTIONALSYMBOLICCHECKPOINT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalSymbolicCheckpointCase
    getOptionalSymbolicCheckpointCase() {
      return OptionalSymbolicCheckpointCase.forNumber(
          optionalSymbolicCheckpointCase_);
    }

    public static final int DETERMINISTIC_FIELD_NUMBER = 1;
    /**
     * <code>bool deterministic = 1;</code>
     * @return Whether the deterministic field is set.
     */
    @java.lang.Override
    public boolean hasDeterministic() {
      return optionalDeterministicCase_ == 1;
    }
    /**
     * <code>bool deterministic = 1;</code>
     * @return The deterministic.
     */
    @java.lang.Override
    public boolean getDeterministic() {
      if (optionalDeterministicCase_ == 1) {
        return (java.lang.Boolean) optionalDeterministic_;
      }
      return false;
    }

    public static final int AUTOTUNE_OPTIONS_FIELD_NUMBER = 7;
    private tensorflow.data.DatasetOptions.AutotuneOptions autotuneOptions_;
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
     * @return Whether the autotuneOptions field is set.
     */
    @java.lang.Override
    public boolean hasAutotuneOptions() {
      return autotuneOptions_ != null;
    }
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
     * @return The autotuneOptions.
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.AutotuneOptions getAutotuneOptions() {
      return autotuneOptions_ == null ? tensorflow.data.DatasetOptions.AutotuneOptions.getDefaultInstance() : autotuneOptions_;
    }
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder getAutotuneOptionsOrBuilder() {
      return getAutotuneOptions();
    }

    public static final int DISTRIBUTE_OPTIONS_FIELD_NUMBER = 2;
    private tensorflow.data.DatasetOptions.DistributeOptions distributeOptions_;
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     * @return Whether the distributeOptions field is set.
     */
    @java.lang.Override
    public boolean hasDistributeOptions() {
      return distributeOptions_ != null;
    }
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     * @return The distributeOptions.
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.DistributeOptions getDistributeOptions() {
      return distributeOptions_ == null ? tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance() : distributeOptions_;
    }
    /**
     * <pre>
     * The distribution strategy options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder getDistributeOptionsOrBuilder() {
      return getDistributeOptions();
    }

    public static final int OPTIMIZATION_OPTIONS_FIELD_NUMBER = 3;
    private tensorflow.data.DatasetOptions.OptimizationOptions optimizationOptions_;
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     * @return Whether the optimizationOptions field is set.
     */
    @java.lang.Override
    public boolean hasOptimizationOptions() {
      return optimizationOptions_ != null;
    }
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     * @return The optimizationOptions.
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.OptimizationOptions getOptimizationOptions() {
      return optimizationOptions_ == null ? tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance() : optimizationOptions_;
    }
    /**
     * <pre>
     * The optimization options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder getOptimizationOptionsOrBuilder() {
      return getOptimizationOptions();
    }

    public static final int SLACK_FIELD_NUMBER = 4;
    /**
     * <code>bool slack = 4;</code>
     * @return Whether the slack field is set.
     */
    @java.lang.Override
    public boolean hasSlack() {
      return optionalSlackCase_ == 4;
    }
    /**
     * <code>bool slack = 4;</code>
     * @return The slack.
     */
    @java.lang.Override
    public boolean getSlack() {
      if (optionalSlackCase_ == 4) {
        return (java.lang.Boolean) optionalSlack_;
      }
      return false;
    }

    public static final int THREADING_OPTIONS_FIELD_NUMBER = 5;
    private tensorflow.data.DatasetOptions.ThreadingOptions threadingOptions_;
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     * @return Whether the threadingOptions field is set.
     */
    @java.lang.Override
    public boolean hasThreadingOptions() {
      return threadingOptions_ != null;
    }
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     * @return The threadingOptions.
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.ThreadingOptions getThreadingOptions() {
      return threadingOptions_ == null ? tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance() : threadingOptions_;
    }
    /**
     * <pre>
     * The threading options associated with the dataset.
     * </pre>
     *
     * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
     */
    @java.lang.Override
    public tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder getThreadingOptionsOrBuilder() {
      return getThreadingOptions();
    }

    public static final int EXTERNAL_STATE_POLICY_FIELD_NUMBER = 6;
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     * @return Whether the externalStatePolicy field is set.
     */
    public boolean hasExternalStatePolicy() {
      return optionalExternalStatePolicyCase_ == 6;
    }
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     * @return The enum numeric value on the wire for externalStatePolicy.
     */
    public int getExternalStatePolicyValue() {
      if (optionalExternalStatePolicyCase_ == 6) {
        return (java.lang.Integer) optionalExternalStatePolicy_;
      }
      return 0;
    }
    /**
     * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
     * @return The externalStatePolicy.
     */
    public tensorflow.data.DatasetOptions.ExternalStatePolicy getExternalStatePolicy() {
      if (optionalExternalStatePolicyCase_ == 6) {
        @SuppressWarnings("deprecation")
        tensorflow.data.DatasetOptions.ExternalStatePolicy result = tensorflow.data.DatasetOptions.ExternalStatePolicy.valueOf(
            (java.lang.Integer) optionalExternalStatePolicy_);
        return result == null ? tensorflow.data.DatasetOptions.ExternalStatePolicy.UNRECOGNIZED : result;
      }
      return tensorflow.data.DatasetOptions.ExternalStatePolicy.POLICY_WARN;
    }

    public static final int SYMBOLIC_CHECKPOINT_FIELD_NUMBER = 8;
    /**
     * <code>bool symbolic_checkpoint = 8;</code>
     * @return Whether the symbolicCheckpoint field is set.
     */
    @java.lang.Override
    public boolean hasSymbolicCheckpoint() {
      return optionalSymbolicCheckpointCase_ == 8;
    }
    /**
     * <code>bool symbolic_checkpoint = 8;</code>
     * @return The symbolicCheckpoint.
     */
    @java.lang.Override
    public boolean getSymbolicCheckpoint() {
      if (optionalSymbolicCheckpointCase_ == 8) {
        return (java.lang.Boolean) optionalSymbolicCheckpoint_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalDeterministicCase_ == 1) {
        output.writeBool(
            1, (boolean)((java.lang.Boolean) optionalDeterministic_));
      }
      if (distributeOptions_ != null) {
        output.writeMessage(2, getDistributeOptions());
      }
      if (optimizationOptions_ != null) {
        output.writeMessage(3, getOptimizationOptions());
      }
      if (optionalSlackCase_ == 4) {
        output.writeBool(
            4, (boolean)((java.lang.Boolean) optionalSlack_));
      }
      if (threadingOptions_ != null) {
        output.writeMessage(5, getThreadingOptions());
      }
      if (optionalExternalStatePolicyCase_ == 6) {
        output.writeEnum(6, ((java.lang.Integer) optionalExternalStatePolicy_));
      }
      if (autotuneOptions_ != null) {
        output.writeMessage(7, getAutotuneOptions());
      }
      if (optionalSymbolicCheckpointCase_ == 8) {
        output.writeBool(
            8, (boolean)((java.lang.Boolean) optionalSymbolicCheckpoint_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalDeterministicCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              1, (boolean)((java.lang.Boolean) optionalDeterministic_));
      }
      if (distributeOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDistributeOptions());
      }
      if (optimizationOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptimizationOptions());
      }
      if (optionalSlackCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              4, (boolean)((java.lang.Boolean) optionalSlack_));
      }
      if (threadingOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getThreadingOptions());
      }
      if (optionalExternalStatePolicyCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, ((java.lang.Integer) optionalExternalStatePolicy_));
      }
      if (autotuneOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getAutotuneOptions());
      }
      if (optionalSymbolicCheckpointCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              8, (boolean)((java.lang.Boolean) optionalSymbolicCheckpoint_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DatasetOptions.Options)) {
        return super.equals(obj);
      }
      tensorflow.data.DatasetOptions.Options other = (tensorflow.data.DatasetOptions.Options) obj;

      if (hasAutotuneOptions() != other.hasAutotuneOptions()) return false;
      if (hasAutotuneOptions()) {
        if (!getAutotuneOptions()
            .equals(other.getAutotuneOptions())) return false;
      }
      if (hasDistributeOptions() != other.hasDistributeOptions()) return false;
      if (hasDistributeOptions()) {
        if (!getDistributeOptions()
            .equals(other.getDistributeOptions())) return false;
      }
      if (hasOptimizationOptions() != other.hasOptimizationOptions()) return false;
      if (hasOptimizationOptions()) {
        if (!getOptimizationOptions()
            .equals(other.getOptimizationOptions())) return false;
      }
      if (hasThreadingOptions() != other.hasThreadingOptions()) return false;
      if (hasThreadingOptions()) {
        if (!getThreadingOptions()
            .equals(other.getThreadingOptions())) return false;
      }
      if (!getOptionalDeterministicCase().equals(other.getOptionalDeterministicCase())) return false;
      switch (optionalDeterministicCase_) {
        case 1:
          if (getDeterministic()
              != other.getDeterministic()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalSlackCase().equals(other.getOptionalSlackCase())) return false;
      switch (optionalSlackCase_) {
        case 4:
          if (getSlack()
              != other.getSlack()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalExternalStatePolicyCase().equals(other.getOptionalExternalStatePolicyCase())) return false;
      switch (optionalExternalStatePolicyCase_) {
        case 6:
          if (getExternalStatePolicyValue()
              != other.getExternalStatePolicyValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalSymbolicCheckpointCase().equals(other.getOptionalSymbolicCheckpointCase())) return false;
      switch (optionalSymbolicCheckpointCase_) {
        case 8:
          if (getSymbolicCheckpoint()
              != other.getSymbolicCheckpoint()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAutotuneOptions()) {
        hash = (37 * hash) + AUTOTUNE_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getAutotuneOptions().hashCode();
      }
      if (hasDistributeOptions()) {
        hash = (37 * hash) + DISTRIBUTE_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDistributeOptions().hashCode();
      }
      if (hasOptimizationOptions()) {
        hash = (37 * hash) + OPTIMIZATION_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptimizationOptions().hashCode();
      }
      if (hasThreadingOptions()) {
        hash = (37 * hash) + THREADING_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getThreadingOptions().hashCode();
      }
      switch (optionalDeterministicCase_) {
        case 1:
          hash = (37 * hash) + DETERMINISTIC_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getDeterministic());
          break;
        case 0:
        default:
      }
      switch (optionalSlackCase_) {
        case 4:
          hash = (37 * hash) + SLACK_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getSlack());
          break;
        case 0:
        default:
      }
      switch (optionalExternalStatePolicyCase_) {
        case 6:
          hash = (37 * hash) + EXTERNAL_STATE_POLICY_FIELD_NUMBER;
          hash = (53 * hash) + getExternalStatePolicyValue();
          break;
        case 0:
        default:
      }
      switch (optionalSymbolicCheckpointCase_) {
        case 8:
          hash = (37 * hash) + SYMBOLIC_CHECKPOINT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getSymbolicCheckpoint());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DatasetOptions.Options parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.Options parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DatasetOptions.Options parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DatasetOptions.Options prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message stored with Dataset objects to control how datasets are processed and
     * optimized.
     * next: 9
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.Options}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.Options)
        tensorflow.data.DatasetOptions.OptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DatasetOptions.Options.class, tensorflow.data.DatasetOptions.Options.Builder.class);
      }

      // Construct using tensorflow.data.DatasetOptions.Options.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (autotuneOptionsBuilder_ == null) {
          autotuneOptions_ = null;
        } else {
          autotuneOptions_ = null;
          autotuneOptionsBuilder_ = null;
        }
        if (distributeOptionsBuilder_ == null) {
          distributeOptions_ = null;
        } else {
          distributeOptions_ = null;
          distributeOptionsBuilder_ = null;
        }
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptions_ = null;
        } else {
          optimizationOptions_ = null;
          optimizationOptionsBuilder_ = null;
        }
        if (threadingOptionsBuilder_ == null) {
          threadingOptions_ = null;
        } else {
          threadingOptions_ = null;
          threadingOptionsBuilder_ = null;
        }
        optionalDeterministicCase_ = 0;
        optionalDeterministic_ = null;
        optionalSlackCase_ = 0;
        optionalSlack_ = null;
        optionalExternalStatePolicyCase_ = 0;
        optionalExternalStatePolicy_ = null;
        optionalSymbolicCheckpointCase_ = 0;
        optionalSymbolicCheckpoint_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DatasetOptions.internal_static_tensorflow_data_Options_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.Options getDefaultInstanceForType() {
        return tensorflow.data.DatasetOptions.Options.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.Options build() {
        tensorflow.data.DatasetOptions.Options result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DatasetOptions.Options buildPartial() {
        tensorflow.data.DatasetOptions.Options result = new tensorflow.data.DatasetOptions.Options(this);
        if (optionalDeterministicCase_ == 1) {
          result.optionalDeterministic_ = optionalDeterministic_;
        }
        if (autotuneOptionsBuilder_ == null) {
          result.autotuneOptions_ = autotuneOptions_;
        } else {
          result.autotuneOptions_ = autotuneOptionsBuilder_.build();
        }
        if (distributeOptionsBuilder_ == null) {
          result.distributeOptions_ = distributeOptions_;
        } else {
          result.distributeOptions_ = distributeOptionsBuilder_.build();
        }
        if (optimizationOptionsBuilder_ == null) {
          result.optimizationOptions_ = optimizationOptions_;
        } else {
          result.optimizationOptions_ = optimizationOptionsBuilder_.build();
        }
        if (optionalSlackCase_ == 4) {
          result.optionalSlack_ = optionalSlack_;
        }
        if (threadingOptionsBuilder_ == null) {
          result.threadingOptions_ = threadingOptions_;
        } else {
          result.threadingOptions_ = threadingOptionsBuilder_.build();
        }
        if (optionalExternalStatePolicyCase_ == 6) {
          result.optionalExternalStatePolicy_ = optionalExternalStatePolicy_;
        }
        if (optionalSymbolicCheckpointCase_ == 8) {
          result.optionalSymbolicCheckpoint_ = optionalSymbolicCheckpoint_;
        }
        result.optionalDeterministicCase_ = optionalDeterministicCase_;
        result.optionalSlackCase_ = optionalSlackCase_;
        result.optionalExternalStatePolicyCase_ = optionalExternalStatePolicyCase_;
        result.optionalSymbolicCheckpointCase_ = optionalSymbolicCheckpointCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DatasetOptions.Options) {
          return mergeFrom((tensorflow.data.DatasetOptions.Options)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DatasetOptions.Options other) {
        if (other == tensorflow.data.DatasetOptions.Options.getDefaultInstance()) return this;
        if (other.hasAutotuneOptions()) {
          mergeAutotuneOptions(other.getAutotuneOptions());
        }
        if (other.hasDistributeOptions()) {
          mergeDistributeOptions(other.getDistributeOptions());
        }
        if (other.hasOptimizationOptions()) {
          mergeOptimizationOptions(other.getOptimizationOptions());
        }
        if (other.hasThreadingOptions()) {
          mergeThreadingOptions(other.getThreadingOptions());
        }
        switch (other.getOptionalDeterministicCase()) {
          case DETERMINISTIC: {
            setDeterministic(other.getDeterministic());
            break;
          }
          case OPTIONALDETERMINISTIC_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalSlackCase()) {
          case SLACK: {
            setSlack(other.getSlack());
            break;
          }
          case OPTIONALSLACK_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalExternalStatePolicyCase()) {
          case EXTERNAL_STATE_POLICY: {
            setExternalStatePolicyValue(other.getExternalStatePolicyValue());
            break;
          }
          case OPTIONALEXTERNALSTATEPOLICY_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalSymbolicCheckpointCase()) {
          case SYMBOLIC_CHECKPOINT: {
            setSymbolicCheckpoint(other.getSymbolicCheckpoint());
            break;
          }
          case OPTIONALSYMBOLICCHECKPOINT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                optionalDeterministic_ = input.readBool();
                optionalDeterministicCase_ = 1;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getDistributeOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getOptimizationOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 26
              case 32: {
                optionalSlack_ = input.readBool();
                optionalSlackCase_ = 4;
                break;
              } // case 32
              case 42: {
                input.readMessage(
                    getThreadingOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 42
              case 48: {
                int rawValue = input.readEnum();
                optionalExternalStatePolicyCase_ = 6;
                optionalExternalStatePolicy_ = rawValue;
                break;
              } // case 48
              case 58: {
                input.readMessage(
                    getAutotuneOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 58
              case 64: {
                optionalSymbolicCheckpoint_ = input.readBool();
                optionalSymbolicCheckpointCase_ = 8;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalDeterministicCase_ = 0;
      private java.lang.Object optionalDeterministic_;
      public OptionalDeterministicCase
          getOptionalDeterministicCase() {
        return OptionalDeterministicCase.forNumber(
            optionalDeterministicCase_);
      }

      public Builder clearOptionalDeterministic() {
        optionalDeterministicCase_ = 0;
        optionalDeterministic_ = null;
        onChanged();
        return this;
      }

      private int optionalSlackCase_ = 0;
      private java.lang.Object optionalSlack_;
      public OptionalSlackCase
          getOptionalSlackCase() {
        return OptionalSlackCase.forNumber(
            optionalSlackCase_);
      }

      public Builder clearOptionalSlack() {
        optionalSlackCase_ = 0;
        optionalSlack_ = null;
        onChanged();
        return this;
      }

      private int optionalExternalStatePolicyCase_ = 0;
      private java.lang.Object optionalExternalStatePolicy_;
      public OptionalExternalStatePolicyCase
          getOptionalExternalStatePolicyCase() {
        return OptionalExternalStatePolicyCase.forNumber(
            optionalExternalStatePolicyCase_);
      }

      public Builder clearOptionalExternalStatePolicy() {
        optionalExternalStatePolicyCase_ = 0;
        optionalExternalStatePolicy_ = null;
        onChanged();
        return this;
      }

      private int optionalSymbolicCheckpointCase_ = 0;
      private java.lang.Object optionalSymbolicCheckpoint_;
      public OptionalSymbolicCheckpointCase
          getOptionalSymbolicCheckpointCase() {
        return OptionalSymbolicCheckpointCase.forNumber(
            optionalSymbolicCheckpointCase_);
      }

      public Builder clearOptionalSymbolicCheckpoint() {
        optionalSymbolicCheckpointCase_ = 0;
        optionalSymbolicCheckpoint_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bool deterministic = 1;</code>
       * @return Whether the deterministic field is set.
       */
      public boolean hasDeterministic() {
        return optionalDeterministicCase_ == 1;
      }
      /**
       * <code>bool deterministic = 1;</code>
       * @return The deterministic.
       */
      public boolean getDeterministic() {
        if (optionalDeterministicCase_ == 1) {
          return (java.lang.Boolean) optionalDeterministic_;
        }
        return false;
      }
      /**
       * <code>bool deterministic = 1;</code>
       * @param value The deterministic to set.
       * @return This builder for chaining.
       */
      public Builder setDeterministic(boolean value) {
        optionalDeterministicCase_ = 1;
        optionalDeterministic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool deterministic = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeterministic() {
        if (optionalDeterministicCase_ == 1) {
          optionalDeterministicCase_ = 0;
          optionalDeterministic_ = null;
          onChanged();
        }
        return this;
      }

      private tensorflow.data.DatasetOptions.AutotuneOptions autotuneOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.AutotuneOptions, tensorflow.data.DatasetOptions.AutotuneOptions.Builder, tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder> autotuneOptionsBuilder_;
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       * @return Whether the autotuneOptions field is set.
       */
      public boolean hasAutotuneOptions() {
        return autotuneOptionsBuilder_ != null || autotuneOptions_ != null;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       * @return The autotuneOptions.
       */
      public tensorflow.data.DatasetOptions.AutotuneOptions getAutotuneOptions() {
        if (autotuneOptionsBuilder_ == null) {
          return autotuneOptions_ == null ? tensorflow.data.DatasetOptions.AutotuneOptions.getDefaultInstance() : autotuneOptions_;
        } else {
          return autotuneOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      public Builder setAutotuneOptions(tensorflow.data.DatasetOptions.AutotuneOptions value) {
        if (autotuneOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          autotuneOptions_ = value;
          onChanged();
        } else {
          autotuneOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      public Builder setAutotuneOptions(
          tensorflow.data.DatasetOptions.AutotuneOptions.Builder builderForValue) {
        if (autotuneOptionsBuilder_ == null) {
          autotuneOptions_ = builderForValue.build();
          onChanged();
        } else {
          autotuneOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      public Builder mergeAutotuneOptions(tensorflow.data.DatasetOptions.AutotuneOptions value) {
        if (autotuneOptionsBuilder_ == null) {
          if (autotuneOptions_ != null) {
            autotuneOptions_ =
              tensorflow.data.DatasetOptions.AutotuneOptions.newBuilder(autotuneOptions_).mergeFrom(value).buildPartial();
          } else {
            autotuneOptions_ = value;
          }
          onChanged();
        } else {
          autotuneOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      public Builder clearAutotuneOptions() {
        if (autotuneOptionsBuilder_ == null) {
          autotuneOptions_ = null;
          onChanged();
        } else {
          autotuneOptions_ = null;
          autotuneOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      public tensorflow.data.DatasetOptions.AutotuneOptions.Builder getAutotuneOptionsBuilder() {
        
        onChanged();
        return getAutotuneOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      public tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder getAutotuneOptionsOrBuilder() {
        if (autotuneOptionsBuilder_ != null) {
          return autotuneOptionsBuilder_.getMessageOrBuilder();
        } else {
          return autotuneOptions_ == null ?
              tensorflow.data.DatasetOptions.AutotuneOptions.getDefaultInstance() : autotuneOptions_;
        }
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.AutotuneOptions autotune_options = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.AutotuneOptions, tensorflow.data.DatasetOptions.AutotuneOptions.Builder, tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder> 
          getAutotuneOptionsFieldBuilder() {
        if (autotuneOptionsBuilder_ == null) {
          autotuneOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.AutotuneOptions, tensorflow.data.DatasetOptions.AutotuneOptions.Builder, tensorflow.data.DatasetOptions.AutotuneOptionsOrBuilder>(
                  getAutotuneOptions(),
                  getParentForChildren(),
                  isClean());
          autotuneOptions_ = null;
        }
        return autotuneOptionsBuilder_;
      }

      private tensorflow.data.DatasetOptions.DistributeOptions distributeOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.DistributeOptions, tensorflow.data.DatasetOptions.DistributeOptions.Builder, tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder> distributeOptionsBuilder_;
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       * @return Whether the distributeOptions field is set.
       */
      public boolean hasDistributeOptions() {
        return distributeOptionsBuilder_ != null || distributeOptions_ != null;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       * @return The distributeOptions.
       */
      public tensorflow.data.DatasetOptions.DistributeOptions getDistributeOptions() {
        if (distributeOptionsBuilder_ == null) {
          return distributeOptions_ == null ? tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance() : distributeOptions_;
        } else {
          return distributeOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder setDistributeOptions(tensorflow.data.DatasetOptions.DistributeOptions value) {
        if (distributeOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distributeOptions_ = value;
          onChanged();
        } else {
          distributeOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder setDistributeOptions(
          tensorflow.data.DatasetOptions.DistributeOptions.Builder builderForValue) {
        if (distributeOptionsBuilder_ == null) {
          distributeOptions_ = builderForValue.build();
          onChanged();
        } else {
          distributeOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder mergeDistributeOptions(tensorflow.data.DatasetOptions.DistributeOptions value) {
        if (distributeOptionsBuilder_ == null) {
          if (distributeOptions_ != null) {
            distributeOptions_ =
              tensorflow.data.DatasetOptions.DistributeOptions.newBuilder(distributeOptions_).mergeFrom(value).buildPartial();
          } else {
            distributeOptions_ = value;
          }
          onChanged();
        } else {
          distributeOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public Builder clearDistributeOptions() {
        if (distributeOptionsBuilder_ == null) {
          distributeOptions_ = null;
          onChanged();
        } else {
          distributeOptions_ = null;
          distributeOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public tensorflow.data.DatasetOptions.DistributeOptions.Builder getDistributeOptionsBuilder() {
        
        onChanged();
        return getDistributeOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      public tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder getDistributeOptionsOrBuilder() {
        if (distributeOptionsBuilder_ != null) {
          return distributeOptionsBuilder_.getMessageOrBuilder();
        } else {
          return distributeOptions_ == null ?
              tensorflow.data.DatasetOptions.DistributeOptions.getDefaultInstance() : distributeOptions_;
        }
      }
      /**
       * <pre>
       * The distribution strategy options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.DistributeOptions distribute_options = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.DistributeOptions, tensorflow.data.DatasetOptions.DistributeOptions.Builder, tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder> 
          getDistributeOptionsFieldBuilder() {
        if (distributeOptionsBuilder_ == null) {
          distributeOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.DistributeOptions, tensorflow.data.DatasetOptions.DistributeOptions.Builder, tensorflow.data.DatasetOptions.DistributeOptionsOrBuilder>(
                  getDistributeOptions(),
                  getParentForChildren(),
                  isClean());
          distributeOptions_ = null;
        }
        return distributeOptionsBuilder_;
      }

      private tensorflow.data.DatasetOptions.OptimizationOptions optimizationOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.OptimizationOptions, tensorflow.data.DatasetOptions.OptimizationOptions.Builder, tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder> optimizationOptionsBuilder_;
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       * @return Whether the optimizationOptions field is set.
       */
      public boolean hasOptimizationOptions() {
        return optimizationOptionsBuilder_ != null || optimizationOptions_ != null;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       * @return The optimizationOptions.
       */
      public tensorflow.data.DatasetOptions.OptimizationOptions getOptimizationOptions() {
        if (optimizationOptionsBuilder_ == null) {
          return optimizationOptions_ == null ? tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance() : optimizationOptions_;
        } else {
          return optimizationOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder setOptimizationOptions(tensorflow.data.DatasetOptions.OptimizationOptions value) {
        if (optimizationOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optimizationOptions_ = value;
          onChanged();
        } else {
          optimizationOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder setOptimizationOptions(
          tensorflow.data.DatasetOptions.OptimizationOptions.Builder builderForValue) {
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptions_ = builderForValue.build();
          onChanged();
        } else {
          optimizationOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder mergeOptimizationOptions(tensorflow.data.DatasetOptions.OptimizationOptions value) {
        if (optimizationOptionsBuilder_ == null) {
          if (optimizationOptions_ != null) {
            optimizationOptions_ =
              tensorflow.data.DatasetOptions.OptimizationOptions.newBuilder(optimizationOptions_).mergeFrom(value).buildPartial();
          } else {
            optimizationOptions_ = value;
          }
          onChanged();
        } else {
          optimizationOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public Builder clearOptimizationOptions() {
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptions_ = null;
          onChanged();
        } else {
          optimizationOptions_ = null;
          optimizationOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public tensorflow.data.DatasetOptions.OptimizationOptions.Builder getOptimizationOptionsBuilder() {
        
        onChanged();
        return getOptimizationOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      public tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder getOptimizationOptionsOrBuilder() {
        if (optimizationOptionsBuilder_ != null) {
          return optimizationOptionsBuilder_.getMessageOrBuilder();
        } else {
          return optimizationOptions_ == null ?
              tensorflow.data.DatasetOptions.OptimizationOptions.getDefaultInstance() : optimizationOptions_;
        }
      }
      /**
       * <pre>
       * The optimization options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.OptimizationOptions optimization_options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.OptimizationOptions, tensorflow.data.DatasetOptions.OptimizationOptions.Builder, tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder> 
          getOptimizationOptionsFieldBuilder() {
        if (optimizationOptionsBuilder_ == null) {
          optimizationOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.OptimizationOptions, tensorflow.data.DatasetOptions.OptimizationOptions.Builder, tensorflow.data.DatasetOptions.OptimizationOptionsOrBuilder>(
                  getOptimizationOptions(),
                  getParentForChildren(),
                  isClean());
          optimizationOptions_ = null;
        }
        return optimizationOptionsBuilder_;
      }

      /**
       * <code>bool slack = 4;</code>
       * @return Whether the slack field is set.
       */
      public boolean hasSlack() {
        return optionalSlackCase_ == 4;
      }
      /**
       * <code>bool slack = 4;</code>
       * @return The slack.
       */
      public boolean getSlack() {
        if (optionalSlackCase_ == 4) {
          return (java.lang.Boolean) optionalSlack_;
        }
        return false;
      }
      /**
       * <code>bool slack = 4;</code>
       * @param value The slack to set.
       * @return This builder for chaining.
       */
      public Builder setSlack(boolean value) {
        optionalSlackCase_ = 4;
        optionalSlack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool slack = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlack() {
        if (optionalSlackCase_ == 4) {
          optionalSlackCase_ = 0;
          optionalSlack_ = null;
          onChanged();
        }
        return this;
      }

      private tensorflow.data.DatasetOptions.ThreadingOptions threadingOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.ThreadingOptions, tensorflow.data.DatasetOptions.ThreadingOptions.Builder, tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder> threadingOptionsBuilder_;
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       * @return Whether the threadingOptions field is set.
       */
      public boolean hasThreadingOptions() {
        return threadingOptionsBuilder_ != null || threadingOptions_ != null;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       * @return The threadingOptions.
       */
      public tensorflow.data.DatasetOptions.ThreadingOptions getThreadingOptions() {
        if (threadingOptionsBuilder_ == null) {
          return threadingOptions_ == null ? tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance() : threadingOptions_;
        } else {
          return threadingOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder setThreadingOptions(tensorflow.data.DatasetOptions.ThreadingOptions value) {
        if (threadingOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          threadingOptions_ = value;
          onChanged();
        } else {
          threadingOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder setThreadingOptions(
          tensorflow.data.DatasetOptions.ThreadingOptions.Builder builderForValue) {
        if (threadingOptionsBuilder_ == null) {
          threadingOptions_ = builderForValue.build();
          onChanged();
        } else {
          threadingOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder mergeThreadingOptions(tensorflow.data.DatasetOptions.ThreadingOptions value) {
        if (threadingOptionsBuilder_ == null) {
          if (threadingOptions_ != null) {
            threadingOptions_ =
              tensorflow.data.DatasetOptions.ThreadingOptions.newBuilder(threadingOptions_).mergeFrom(value).buildPartial();
          } else {
            threadingOptions_ = value;
          }
          onChanged();
        } else {
          threadingOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public Builder clearThreadingOptions() {
        if (threadingOptionsBuilder_ == null) {
          threadingOptions_ = null;
          onChanged();
        } else {
          threadingOptions_ = null;
          threadingOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public tensorflow.data.DatasetOptions.ThreadingOptions.Builder getThreadingOptionsBuilder() {
        
        onChanged();
        return getThreadingOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      public tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder getThreadingOptionsOrBuilder() {
        if (threadingOptionsBuilder_ != null) {
          return threadingOptionsBuilder_.getMessageOrBuilder();
        } else {
          return threadingOptions_ == null ?
              tensorflow.data.DatasetOptions.ThreadingOptions.getDefaultInstance() : threadingOptions_;
        }
      }
      /**
       * <pre>
       * The threading options associated with the dataset.
       * </pre>
       *
       * <code>.tensorflow.data.ThreadingOptions threading_options = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.data.DatasetOptions.ThreadingOptions, tensorflow.data.DatasetOptions.ThreadingOptions.Builder, tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder> 
          getThreadingOptionsFieldBuilder() {
        if (threadingOptionsBuilder_ == null) {
          threadingOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.data.DatasetOptions.ThreadingOptions, tensorflow.data.DatasetOptions.ThreadingOptions.Builder, tensorflow.data.DatasetOptions.ThreadingOptionsOrBuilder>(
                  getThreadingOptions(),
                  getParentForChildren(),
                  isClean());
          threadingOptions_ = null;
        }
        return threadingOptionsBuilder_;
      }

      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       * @return Whether the externalStatePolicy field is set.
       */
      @java.lang.Override
      public boolean hasExternalStatePolicy() {
        return optionalExternalStatePolicyCase_ == 6;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       * @return The enum numeric value on the wire for externalStatePolicy.
       */
      @java.lang.Override
      public int getExternalStatePolicyValue() {
        if (optionalExternalStatePolicyCase_ == 6) {
          return ((java.lang.Integer) optionalExternalStatePolicy_).intValue();
        }
        return 0;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       * @param value The enum numeric value on the wire for externalStatePolicy to set.
       * @return This builder for chaining.
       */
      public Builder setExternalStatePolicyValue(int value) {
        optionalExternalStatePolicyCase_ = 6;
        optionalExternalStatePolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       * @return The externalStatePolicy.
       */
      @java.lang.Override
      public tensorflow.data.DatasetOptions.ExternalStatePolicy getExternalStatePolicy() {
        if (optionalExternalStatePolicyCase_ == 6) {
          @SuppressWarnings("deprecation")
          tensorflow.data.DatasetOptions.ExternalStatePolicy result = tensorflow.data.DatasetOptions.ExternalStatePolicy.valueOf(
              (java.lang.Integer) optionalExternalStatePolicy_);
          return result == null ? tensorflow.data.DatasetOptions.ExternalStatePolicy.UNRECOGNIZED : result;
        }
        return tensorflow.data.DatasetOptions.ExternalStatePolicy.POLICY_WARN;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       * @param value The externalStatePolicy to set.
       * @return This builder for chaining.
       */
      public Builder setExternalStatePolicy(tensorflow.data.DatasetOptions.ExternalStatePolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalExternalStatePolicyCase_ = 6;
        optionalExternalStatePolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.ExternalStatePolicy external_state_policy = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternalStatePolicy() {
        if (optionalExternalStatePolicyCase_ == 6) {
          optionalExternalStatePolicyCase_ = 0;
          optionalExternalStatePolicy_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bool symbolic_checkpoint = 8;</code>
       * @return Whether the symbolicCheckpoint field is set.
       */
      public boolean hasSymbolicCheckpoint() {
        return optionalSymbolicCheckpointCase_ == 8;
      }
      /**
       * <code>bool symbolic_checkpoint = 8;</code>
       * @return The symbolicCheckpoint.
       */
      public boolean getSymbolicCheckpoint() {
        if (optionalSymbolicCheckpointCase_ == 8) {
          return (java.lang.Boolean) optionalSymbolicCheckpoint_;
        }
        return false;
      }
      /**
       * <code>bool symbolic_checkpoint = 8;</code>
       * @param value The symbolicCheckpoint to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolicCheckpoint(boolean value) {
        optionalSymbolicCheckpointCase_ = 8;
        optionalSymbolicCheckpoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool symbolic_checkpoint = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbolicCheckpoint() {
        if (optionalSymbolicCheckpointCase_ == 8) {
          optionalSymbolicCheckpointCase_ = 0;
          optionalSymbolicCheckpoint_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.Options)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.Options)
    private static final tensorflow.data.DatasetOptions.Options DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DatasetOptions.Options();
    }

    public static tensorflow.data.DatasetOptions.Options getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Options>
        PARSER = new com.google.protobuf.AbstractParser<Options>() {
      @java.lang.Override
      public Options parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Options> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Options> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DatasetOptions.Options getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_AutotuneOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_AutotuneOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_CardinalityOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_CardinalityOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_DistributeOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_OptimizationOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_ThreadingOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_Options_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_Options_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/tensorflow/core/framework/dataset_opti" +
      "ons.proto\022\017tensorflow.data\032%tensorflow/c" +
      "ore/framework/model.proto\"\371\001\n\017AutotuneOp" +
      "tions\022\021\n\007enabled\030\001 \001(\010H\000\022\024\n\ncpu_budget\030\002" +
      " \001(\005H\001\022\024\n\nram_budget\030\003 \001(\003H\002\022F\n\022autotune" +
      "_algorithm\030\004 \001(\0162(.tensorflow.data.model" +
      ".AutotuneAlgorithmH\003B\022\n\020optional_enabled" +
      "B\025\n\023optional_cpu_budgetB\025\n\023optional_ram_" +
      "budgetB\035\n\033optional_autotune_algorithm\"\321\001" +
      "\n\022CardinalityOptions\022G\n\rcompute_level\030\001 " +
      "\001(\01620.tensorflow.data.CardinalityOptions" +
      ".ComputeLevel\"r\n\014ComputeLevel\022#\n\037CARDINA" +
      "LITY_COMPUTE_UNSPECIFIED\020\000\022\033\n\027CARDINALIT" +
      "Y_COMPUTE_LOW\020\001\022 \n\034CARDINALITY_COMPUTE_M" +
      "ODERATE\020\002\"\177\n\021DistributeOptions\022;\n\021auto_s" +
      "hard_policy\030\001 \001(\0162 .tensorflow.data.Auto" +
      "ShardPolicy\022\025\n\013num_devices\030\002 \001(\005H\000B\026\n\024op" +
      "tional_num_devices\"\354\005\n\023OptimizationOptio" +
      "ns\022%\n\033apply_default_optimizations\030\001 \001(\010H" +
      "\000\022\027\n\rfilter_fusion\030\006 \001(\010H\001\022\036\n\024map_and_ba" +
      "tch_fusion\030\t \001(\010H\002\022\037\n\025map_and_filter_fus" +
      "ion\030\n \001(\010H\003\022\024\n\nmap_fusion\030\013 \001(\010H\004\022\035\n\023map" +
      "_parallelization\030\014 \001(\010H\005\022\032\n\020noop_elimina" +
      "tion\030\016 \001(\010H\006\022\030\n\016parallel_batch\030\017 \001(\010H\007\022#" +
      "\n\031shuffle_and_repeat_fusion\030\021 \001(\010H\010\022 \n\026f" +
      "ilter_parallelization\030\022 \001(\010H\t\022\031\n\017inject_" +
      "prefetch\030\023 \001(\010H\nB&\n$optional_apply_defau" +
      "lt_optimizationsB\030\n\026optional_filter_fusi" +
      "onB\037\n\035optional_map_and_batch_fusionB \n\036o" +
      "ptional_map_and_filter_fusionB\025\n\023optiona" +
      "l_map_fusionB\036\n\034optional_map_paralleliza" +
      "tionB\033\n\031optional_noop_eliminationB\031\n\027opt" +
      "ional_parallel_batchB$\n\"optional_shuffle" +
      "_and_repeat_fusionB!\n\037optional_filter_pa" +
      "rallelizationB\032\n\030optional_inject_prefetc" +
      "hJ\004\010\002\020\003J\004\010\003\020\004J\004\010\004\020\005J\004\010\005\020\006J\004\010\007\020\010J\004\010\010\020\tJ\004\010" +
      "\r\020\016J\004\010\020\020\021\"\242\001\n\020ThreadingOptions\022\"\n\030max_in" +
      "tra_op_parallelism\030\001 \001(\005H\000\022!\n\027private_th" +
      "readpool_size\030\002 \001(\005H\001B#\n!optional_max_in" +
      "tra_op_parallelismB\"\n optional_private_t" +
      "hreadpool_size\"\205\004\n\007Options\022\027\n\rdeterminis" +
      "tic\030\001 \001(\010H\000\022:\n\020autotune_options\030\007 \001(\0132 ." +
      "tensorflow.data.AutotuneOptions\022>\n\022distr" +
      "ibute_options\030\002 \001(\0132\".tensorflow.data.Di" +
      "stributeOptions\022B\n\024optimization_options\030" +
      "\003 \001(\0132$.tensorflow.data.OptimizationOpti" +
      "ons\022\017\n\005slack\030\004 \001(\010H\001\022<\n\021threading_option" +
      "s\030\005 \001(\0132!.tensorflow.data.ThreadingOptio" +
      "ns\022E\n\025external_state_policy\030\006 \001(\0162$.tens" +
      "orflow.data.ExternalStatePolicyH\002\022\035\n\023sym" +
      "bolic_checkpoint\030\010 \001(\010H\003B\030\n\026optional_det" +
      "erministicB\020\n\016optional_slackB \n\036optional" +
      "_external_state_policyB\036\n\034optional_symbo" +
      "lic_checkpoint*K\n\017AutoShardPolicy\022\010\n\004AUT" +
      "O\020\000\022\010\n\004FILE\020\001\022\010\n\004DATA\020\002\022\010\n\004HINT\020\003\022\020\n\003OFF" +
      "\020\377\377\377\377\377\377\377\377\377\001*J\n\023ExternalStatePolicy\022\017\n\013PO" +
      "LICY_WARN\020\000\022\021\n\rPOLICY_IGNORE\020\001\022\017\n\013POLICY" +
      "_FAIL\020\002BXZVgithub.com/tensorflow/tensorf" +
      "low/tensorflow/go/core/framework/dataset" +
      "_options_go_protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tensorflow.data.model.Model.getDescriptor(),
        });
    internal_static_tensorflow_data_AutotuneOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_data_AutotuneOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_AutotuneOptions_descriptor,
        new java.lang.String[] { "Enabled", "CpuBudget", "RamBudget", "AutotuneAlgorithm", "OptionalEnabled", "OptionalCpuBudget", "OptionalRamBudget", "OptionalAutotuneAlgorithm", });
    internal_static_tensorflow_data_CardinalityOptions_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_data_CardinalityOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_CardinalityOptions_descriptor,
        new java.lang.String[] { "ComputeLevel", });
    internal_static_tensorflow_data_DistributeOptions_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_data_DistributeOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_DistributeOptions_descriptor,
        new java.lang.String[] { "AutoShardPolicy", "NumDevices", "OptionalNumDevices", });
    internal_static_tensorflow_data_OptimizationOptions_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_data_OptimizationOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_OptimizationOptions_descriptor,
        new java.lang.String[] { "ApplyDefaultOptimizations", "FilterFusion", "MapAndBatchFusion", "MapAndFilterFusion", "MapFusion", "MapParallelization", "NoopElimination", "ParallelBatch", "ShuffleAndRepeatFusion", "FilterParallelization", "InjectPrefetch", "OptionalApplyDefaultOptimizations", "OptionalFilterFusion", "OptionalMapAndBatchFusion", "OptionalMapAndFilterFusion", "OptionalMapFusion", "OptionalMapParallelization", "OptionalNoopElimination", "OptionalParallelBatch", "OptionalShuffleAndRepeatFusion", "OptionalFilterParallelization", "OptionalInjectPrefetch", });
    internal_static_tensorflow_data_ThreadingOptions_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_data_ThreadingOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_ThreadingOptions_descriptor,
        new java.lang.String[] { "MaxIntraOpParallelism", "PrivateThreadpoolSize", "OptionalMaxIntraOpParallelism", "OptionalPrivateThreadpoolSize", });
    internal_static_tensorflow_data_Options_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tensorflow_data_Options_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_Options_descriptor,
        new java.lang.String[] { "Deterministic", "AutotuneOptions", "DistributeOptions", "OptimizationOptions", "Slack", "ThreadingOptions", "ExternalStatePolicy", "SymbolicCheckpoint", "OptionalDeterministic", "OptionalSlack", "OptionalExternalStatePolicy", "OptionalSymbolicCheckpoint", });
    tensorflow.data.model.Model.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
