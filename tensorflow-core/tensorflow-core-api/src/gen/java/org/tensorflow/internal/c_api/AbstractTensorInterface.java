// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.tensorflow.internal.c_api;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.tensorflow.internal.c_api.global.tensorflow.*;


// Abstract interface to a Tensor.
//
// This allows us to hide concrete implementations of Tensor from header
// files. The interface lists the common functionality that must be provided by
// any concrete implementation. However, in cases where the true concrete class
// is needed a static_cast can be applied.
@Namespace("tensorflow") @Properties(inherit = org.tensorflow.internal.c_api.presets.tensorflow.class)
public class AbstractTensorInterface extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AbstractTensorInterface(Pointer p) { super(p); }

  // Release any underlying resources, including the interface object.
  public native void Release();

  // Returns tensor dtype.
  public native @Cast("tensorflow::DataType") int Type();
  // Returns number of dimensions.
  public native int NumDims();
  // Returns size of specified dimension
  public native @Cast("int64_t") long Dim(int dim_index);
  // Returns number of elements across all dimensions.
  public native @Cast("int64_t") long NumElements();
  // Return size in bytes of the Tensor
  public native @Cast("size_t") long ByteSize();
  // Returns a pointer to tensor data
  public native Pointer Data();

  // Returns if the tensor is aligned
  public native @Cast("bool") boolean IsAligned();
  // Returns if their is sole ownership of this Tensor and thus it can be moved.
  public native @Cast("bool") boolean CanMove();

  public native @StdString BytePointer SummarizeValue();
}
