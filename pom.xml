<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.tensorflow</groupId>
  <artifactId>tensorflow-java</artifactId>
  <version>0.3.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>TensorFlow Java Parent</name>
  <description>Parent POM of TensorFlow artifacts</description>

  <url>https://www.tensorflow.org</url>
  <inceptionYear>2015</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/tensorflow/tensorflow.git</url>
    <connection>git@github.com:tensorflow/tensorflow.git</connection>
    <developerConnection>scm:git:https://github.com/tensorflow/tensorflow.git</developerConnection>
  </scm>

  <modules>
    <module>ndarray</module>
    <module>tensorflow-core</module>
    <module>tensorflow-framework</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>ASCII</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.version>5.6.2</junit.version>
    <jmh.version>1.21</jmh.version>
    <versions-plugin.version>2.7</versions-plugin.version>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <maven.source.skip>true</maven.source.skip>
    <gpg.skip>true</gpg.skip>
  </properties>

  <repositories>
    <repository>
      <id>ossrh-snapshots</id>
      <name>OSSRH Sonatype Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>ossrh-snapshots</id>
      <name>OSSRH Sonatype Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <!--
  Deploys to OSSRH/Maven central
    We don't need to deploy to Bintray, as JCenter will eventually proxy artifacts upload in Maven
    central. See Sonatype requirements at http://central.sonatype.org/pages/apache-maven.html
  -->
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deployByRepositoryId/${stagingRepositoryId}/</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
    </dependency>
	  <dependency>
	    <groupId>org.openjdk.jmh</groupId>
	    <artifactId>jmh-core</artifactId>
	    <version>${jmh.version}</version>
  	    <scope>test</scope>
	  </dependency>
	  <dependency>
	    <groupId>org.openjdk.jmh</groupId>
	    <artifactId>jmh-generator-annprocess</artifactId>
	    <version>${jmh.version}</version>
        <scope>test</scope>
	  </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <!--
    Developer profile
        Enable javadoc generation so the developer is aware of any mistake that might prevent
        ultimately the deployment of the artifacts
    -->
    <profile>
      <id>dev</id>
      <properties>
        <maven.javadoc.skip>false</maven.javadoc.skip>
      </properties>
    </profile>

    <!--
    Deploying profile
        Build the Javadoc when deploying
    -->
    <profile>
      <id>deploying</id>
      <properties>
        <maven.javadoc.skip>false</maven.javadoc.skip>
        <maven.source.skip>false</maven.source.skip>
      </properties>
    </profile>
    <!--
    Releasing profile
        Activate GPG signing on all built artifacts and fetch native artifacts from staging repository
    -->
    <profile>
      <id>releasing</id>
      <properties>
        <gpg.skip>false</gpg.skip>
      </properties>
      <repositories>
        <repository>
          <id>ossrh-staging</id>
          <name>OSSRH Sonatype Staging</name>
          <url>https://oss.sonatype.org/service/local/staging/deployByRepositoryId/${stagingRepositoryId}/</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>

  <!-- http://central.sonatype.org/pages/requirements.html#developer-information -->
  <developers>
    <developer>
      <name>TensorFlowers</name>
      <organization>TensorFlow</organization>
      <organizationUrl>http://www.tensorflow.org</organizationUrl>
    </developer>
  </developers>

  <build>
    <plugins>
      <!-- GPG signed components: http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <gpgArguments>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
          </gpgArguments>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-plugin.version}</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
          <processAllModules>true</processAllModules>
          <updateMatchingVersions>true</updateMatchingVersions>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>

