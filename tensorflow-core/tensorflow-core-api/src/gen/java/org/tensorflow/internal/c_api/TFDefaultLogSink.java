// Targeted by JavaCPP version 1.5.4: DO NOT EDIT THIS FILE

package org.tensorflow.internal.c_api;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.tensorflow.internal.c_api.global.tensorflow.*;


// This is the default log sink. This log sink is used if there are no other
// log sinks registered. To disable the default log sink, set the
// "no_default_logger" Bazel config setting to true or define a
// NO_DEFAULT_LOGGER preprocessor symbol. This log sink will always log to
// stderr.
@Namespace("tensorflow") @Properties(inherit = org.tensorflow.internal.c_api.presets.tensorflow.class)
public class TFDefaultLogSink extends TFLogSink {
    static { Loader.load(); }
    /** Default native constructor. */
    public TFDefaultLogSink() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TFDefaultLogSink(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TFDefaultLogSink(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TFDefaultLogSink position(long position) {
        return (TFDefaultLogSink)super.position(position);
    }
    @Override public TFDefaultLogSink getPointer(long i) {
        return new TFDefaultLogSink(this).position(position + i);
    }

  public native void Send(@Const @ByRef TFLogEntry entry);
}
