// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/optimized_function_graph.proto

package tensorflow;

public final class OptimizedFunctionGraphOuterClass {
  private OptimizedFunctionGraphOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OptimizedFunctionGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.OptimizedFunctionGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Function name. It can be a human-readable SignatureDef's method name, or a
     * FunctionDef name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Function name. It can be a human-readable SignatureDef's method name, or a
     * FunctionDef name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Optimized function graph.
     * </pre>
     *
     * <code>.tensorflow.GraphDef function_graph = 2;</code>
     * @return Whether the functionGraph field is set.
     */
    boolean hasFunctionGraph();
    /**
     * <pre>
     * Optimized function graph.
     * </pre>
     *
     * <code>.tensorflow.GraphDef function_graph = 2;</code>
     * @return The functionGraph.
     */
    org.tensorflow.proto.framework.GraphDef getFunctionGraph();
    /**
     * <pre>
     * Optimized function graph.
     * </pre>
     *
     * <code>.tensorflow.GraphDef function_graph = 2;</code>
     */
    org.tensorflow.proto.framework.GraphDefOrBuilder getFunctionGraphOrBuilder();

    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */
    int getNodeNameToControlRetCount();
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */
    boolean containsNodeNameToControlRet(
        java.lang.String key);
    /**
     * Use {@link #getNodeNameToControlRetMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getNodeNameToControlRet();
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getNodeNameToControlRetMap();
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */

    /* nullable */
java.lang.String getNodeNameToControlRetOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */

    java.lang.String getNodeNameToControlRetOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @return A list containing the retTypes.
     */
    java.util.List<org.tensorflow.proto.framework.DataType> getRetTypesList();
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @return The count of retTypes.
     */
    int getRetTypesCount();
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @param index The index of the element to return.
     * @return The retTypes at the given index.
     */
    org.tensorflow.proto.framework.DataType getRetTypes(int index);
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @return A list containing the enum numeric values on the wire for retTypes.
     */
    java.util.List<java.lang.Integer>
    getRetTypesValueList();
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of retTypes at the given index.
     */
    int getRetTypesValue(int index);

    /**
     * <pre>
     * Number of return nodes. This is an output of graph preprocessing.
     * </pre>
     *
     * <code>uint32 num_return_nodes = 5;</code>
     * @return The numReturnNodes.
     */
    int getNumReturnNodes();
  }
  /**
   * <pre>
   * Optimized function graph after instantiation-related graph optimization
   * passes (up till before graph partitioning). The first half of the proto is
   * representing a GraphDef and the rest of the fields are extra information from
   * graph optimizations.
   * </pre>
   *
   * Protobuf type {@code tensorflow.OptimizedFunctionGraph}
   */
  public static final class OptimizedFunctionGraph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.OptimizedFunctionGraph)
      OptimizedFunctionGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptimizedFunctionGraph.newBuilder() to construct.
    private OptimizedFunctionGraph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptimizedFunctionGraph() {
      name_ = "";
      retTypes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OptimizedFunctionGraph();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.OptimizedFunctionGraphOuterClass.internal_static_tensorflow_OptimizedFunctionGraph_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetNodeNameToControlRet();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.OptimizedFunctionGraphOuterClass.internal_static_tensorflow_OptimizedFunctionGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.class, tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Function name. It can be a human-readable SignatureDef's method name, or a
     * FunctionDef name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Function name. It can be a human-readable SignatureDef's method name, or a
     * FunctionDef name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FUNCTION_GRAPH_FIELD_NUMBER = 2;
    private org.tensorflow.proto.framework.GraphDef functionGraph_;
    /**
     * <pre>
     * Optimized function graph.
     * </pre>
     *
     * <code>.tensorflow.GraphDef function_graph = 2;</code>
     * @return Whether the functionGraph field is set.
     */
    @java.lang.Override
    public boolean hasFunctionGraph() {
      return functionGraph_ != null;
    }
    /**
     * <pre>
     * Optimized function graph.
     * </pre>
     *
     * <code>.tensorflow.GraphDef function_graph = 2;</code>
     * @return The functionGraph.
     */
    @java.lang.Override
    public org.tensorflow.proto.framework.GraphDef getFunctionGraph() {
      return functionGraph_ == null ? org.tensorflow.proto.framework.GraphDef.getDefaultInstance() : functionGraph_;
    }
    /**
     * <pre>
     * Optimized function graph.
     * </pre>
     *
     * <code>.tensorflow.GraphDef function_graph = 2;</code>
     */
    @java.lang.Override
    public org.tensorflow.proto.framework.GraphDefOrBuilder getFunctionGraphOrBuilder() {
      return getFunctionGraph();
    }

    public static final int NODE_NAME_TO_CONTROL_RET_FIELD_NUMBER = 3;
    private static final class NodeNameToControlRetDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  tensorflow.OptimizedFunctionGraphOuterClass.internal_static_tensorflow_OptimizedFunctionGraph_NodeNameToControlRetEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> nodeNameToControlRet_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetNodeNameToControlRet() {
      if (nodeNameToControlRet_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NodeNameToControlRetDefaultEntryHolder.defaultEntry);
      }
      return nodeNameToControlRet_;
    }

    public int getNodeNameToControlRetCount() {
      return internalGetNodeNameToControlRet().getMap().size();
    }
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */

    @java.lang.Override
    public boolean containsNodeNameToControlRet(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetNodeNameToControlRet().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNodeNameToControlRetMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getNodeNameToControlRet() {
      return getNodeNameToControlRetMap();
    }
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getNodeNameToControlRetMap() {
      return internalGetNodeNameToControlRet().getMap();
    }
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getNodeNameToControlRetOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetNodeNameToControlRet().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Maps from node name to control ret. This is an output from running TF/XLA
     * bridge.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getNodeNameToControlRetOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetNodeNameToControlRet().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int RET_TYPES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> retTypes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.tensorflow.proto.framework.DataType> retTypes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.tensorflow.proto.framework.DataType>() {
              public org.tensorflow.proto.framework.DataType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                org.tensorflow.proto.framework.DataType result = org.tensorflow.proto.framework.DataType.valueOf(from);
                return result == null ? org.tensorflow.proto.framework.DataType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @return A list containing the retTypes.
     */
    @java.lang.Override
    public java.util.List<org.tensorflow.proto.framework.DataType> getRetTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.tensorflow.proto.framework.DataType>(retTypes_, retTypes_converter_);
    }
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @return The count of retTypes.
     */
    @java.lang.Override
    public int getRetTypesCount() {
      return retTypes_.size();
    }
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @param index The index of the element to return.
     * @return The retTypes at the given index.
     */
    @java.lang.Override
    public org.tensorflow.proto.framework.DataType getRetTypes(int index) {
      return retTypes_converter_.convert(retTypes_.get(index));
    }
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @return A list containing the enum numeric values on the wire for retTypes.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getRetTypesValueList() {
      return retTypes_;
    }
    /**
     * <pre>
     * Return node types of the function. This is an output of graph
     * preprocessing.
     * </pre>
     *
     * <code>repeated .tensorflow.DataType ret_types = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of retTypes at the given index.
     */
    @java.lang.Override
    public int getRetTypesValue(int index) {
      return retTypes_.get(index);
    }
    private int retTypesMemoizedSerializedSize;

    public static final int NUM_RETURN_NODES_FIELD_NUMBER = 5;
    private int numReturnNodes_;
    /**
     * <pre>
     * Number of return nodes. This is an output of graph preprocessing.
     * </pre>
     *
     * <code>uint32 num_return_nodes = 5;</code>
     * @return The numReturnNodes.
     */
    @java.lang.Override
    public int getNumReturnNodes() {
      return numReturnNodes_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (functionGraph_ != null) {
        output.writeMessage(2, getFunctionGraph());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetNodeNameToControlRet(),
          NodeNameToControlRetDefaultEntryHolder.defaultEntry,
          3);
      if (getRetTypesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(retTypesMemoizedSerializedSize);
      }
      for (int i = 0; i < retTypes_.size(); i++) {
        output.writeEnumNoTag(retTypes_.get(i));
      }
      if (numReturnNodes_ != 0) {
        output.writeUInt32(5, numReturnNodes_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (functionGraph_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFunctionGraph());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetNodeNameToControlRet().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        nodeNameToControlRet__ = NodeNameToControlRetDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, nodeNameToControlRet__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < retTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(retTypes_.get(i));
        }
        size += dataSize;
        if (!getRetTypesList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }retTypesMemoizedSerializedSize = dataSize;
      }
      if (numReturnNodes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, numReturnNodes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph)) {
        return super.equals(obj);
      }
      tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph other = (tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasFunctionGraph() != other.hasFunctionGraph()) return false;
      if (hasFunctionGraph()) {
        if (!getFunctionGraph()
            .equals(other.getFunctionGraph())) return false;
      }
      if (!internalGetNodeNameToControlRet().equals(
          other.internalGetNodeNameToControlRet())) return false;
      if (!retTypes_.equals(other.retTypes_)) return false;
      if (getNumReturnNodes()
          != other.getNumReturnNodes()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasFunctionGraph()) {
        hash = (37 * hash) + FUNCTION_GRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getFunctionGraph().hashCode();
      }
      if (!internalGetNodeNameToControlRet().getMap().isEmpty()) {
        hash = (37 * hash) + NODE_NAME_TO_CONTROL_RET_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNodeNameToControlRet().hashCode();
      }
      if (getRetTypesCount() > 0) {
        hash = (37 * hash) + RET_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + retTypes_.hashCode();
      }
      hash = (37 * hash) + NUM_RETURN_NODES_FIELD_NUMBER;
      hash = (53 * hash) + getNumReturnNodes();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Optimized function graph after instantiation-related graph optimization
     * passes (up till before graph partitioning). The first half of the proto is
     * representing a GraphDef and the rest of the fields are extra information from
     * graph optimizations.
     * </pre>
     *
     * Protobuf type {@code tensorflow.OptimizedFunctionGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.OptimizedFunctionGraph)
        tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.OptimizedFunctionGraphOuterClass.internal_static_tensorflow_OptimizedFunctionGraph_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetNodeNameToControlRet();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableNodeNameToControlRet();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.OptimizedFunctionGraphOuterClass.internal_static_tensorflow_OptimizedFunctionGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.class, tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.Builder.class);
      }

      // Construct using tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (functionGraphBuilder_ == null) {
          functionGraph_ = null;
        } else {
          functionGraph_ = null;
          functionGraphBuilder_ = null;
        }
        internalGetMutableNodeNameToControlRet().clear();
        retTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        numReturnNodes_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.OptimizedFunctionGraphOuterClass.internal_static_tensorflow_OptimizedFunctionGraph_descriptor;
      }

      @java.lang.Override
      public tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph getDefaultInstanceForType() {
        return tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph build() {
        tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph buildPartial() {
        tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph result = new tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        if (functionGraphBuilder_ == null) {
          result.functionGraph_ = functionGraph_;
        } else {
          result.functionGraph_ = functionGraphBuilder_.build();
        }
        result.nodeNameToControlRet_ = internalGetNodeNameToControlRet();
        result.nodeNameToControlRet_.makeImmutable();
        if (((bitField0_ & 0x00000002) != 0)) {
          retTypes_ = java.util.Collections.unmodifiableList(retTypes_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.retTypes_ = retTypes_;
        result.numReturnNodes_ = numReturnNodes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph) {
          return mergeFrom((tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph other) {
        if (other == tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFunctionGraph()) {
          mergeFunctionGraph(other.getFunctionGraph());
        }
        internalGetMutableNodeNameToControlRet().mergeFrom(
            other.internalGetNodeNameToControlRet());
        if (!other.retTypes_.isEmpty()) {
          if (retTypes_.isEmpty()) {
            retTypes_ = other.retTypes_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRetTypesIsMutable();
            retTypes_.addAll(other.retTypes_);
          }
          onChanged();
        }
        if (other.getNumReturnNodes() != 0) {
          setNumReturnNodes(other.getNumReturnNodes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getFunctionGraphFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              case 26: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                nodeNameToControlRet__ = input.readMessage(
                    NodeNameToControlRetDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableNodeNameToControlRet().getMutableMap().put(
                    nodeNameToControlRet__.getKey(), nodeNameToControlRet__.getValue());
                break;
              } // case 26
              case 32: {
                int tmpRaw = input.readEnum();
                ensureRetTypesIsMutable();
                retTypes_.add(tmpRaw);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureRetTypesIsMutable();
                  retTypes_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 34
              case 40: {
                numReturnNodes_ = input.readUInt32();

                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Function name. It can be a human-readable SignatureDef's method name, or a
       * FunctionDef name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Function name. It can be a human-readable SignatureDef's method name, or a
       * FunctionDef name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Function name. It can be a human-readable SignatureDef's method name, or a
       * FunctionDef name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Function name. It can be a human-readable SignatureDef's method name, or a
       * FunctionDef name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Function name. It can be a human-readable SignatureDef's method name, or a
       * FunctionDef name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private org.tensorflow.proto.framework.GraphDef functionGraph_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.framework.GraphDef, org.tensorflow.proto.framework.GraphDef.Builder, org.tensorflow.proto.framework.GraphDefOrBuilder> functionGraphBuilder_;
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       * @return Whether the functionGraph field is set.
       */
      public boolean hasFunctionGraph() {
        return functionGraphBuilder_ != null || functionGraph_ != null;
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       * @return The functionGraph.
       */
      public org.tensorflow.proto.framework.GraphDef getFunctionGraph() {
        if (functionGraphBuilder_ == null) {
          return functionGraph_ == null ? org.tensorflow.proto.framework.GraphDef.getDefaultInstance() : functionGraph_;
        } else {
          return functionGraphBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      public Builder setFunctionGraph(org.tensorflow.proto.framework.GraphDef value) {
        if (functionGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          functionGraph_ = value;
          onChanged();
        } else {
          functionGraphBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      public Builder setFunctionGraph(
          org.tensorflow.proto.framework.GraphDef.Builder builderForValue) {
        if (functionGraphBuilder_ == null) {
          functionGraph_ = builderForValue.build();
          onChanged();
        } else {
          functionGraphBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      public Builder mergeFunctionGraph(org.tensorflow.proto.framework.GraphDef value) {
        if (functionGraphBuilder_ == null) {
          if (functionGraph_ != null) {
            functionGraph_ =
              org.tensorflow.proto.framework.GraphDef.newBuilder(functionGraph_).mergeFrom(value).buildPartial();
          } else {
            functionGraph_ = value;
          }
          onChanged();
        } else {
          functionGraphBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      public Builder clearFunctionGraph() {
        if (functionGraphBuilder_ == null) {
          functionGraph_ = null;
          onChanged();
        } else {
          functionGraph_ = null;
          functionGraphBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      public org.tensorflow.proto.framework.GraphDef.Builder getFunctionGraphBuilder() {
        
        onChanged();
        return getFunctionGraphFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      public org.tensorflow.proto.framework.GraphDefOrBuilder getFunctionGraphOrBuilder() {
        if (functionGraphBuilder_ != null) {
          return functionGraphBuilder_.getMessageOrBuilder();
        } else {
          return functionGraph_ == null ?
              org.tensorflow.proto.framework.GraphDef.getDefaultInstance() : functionGraph_;
        }
      }
      /**
       * <pre>
       * Optimized function graph.
       * </pre>
       *
       * <code>.tensorflow.GraphDef function_graph = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.framework.GraphDef, org.tensorflow.proto.framework.GraphDef.Builder, org.tensorflow.proto.framework.GraphDefOrBuilder> 
          getFunctionGraphFieldBuilder() {
        if (functionGraphBuilder_ == null) {
          functionGraphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.proto.framework.GraphDef, org.tensorflow.proto.framework.GraphDef.Builder, org.tensorflow.proto.framework.GraphDefOrBuilder>(
                  getFunctionGraph(),
                  getParentForChildren(),
                  isClean());
          functionGraph_ = null;
        }
        return functionGraphBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> nodeNameToControlRet_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetNodeNameToControlRet() {
        if (nodeNameToControlRet_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NodeNameToControlRetDefaultEntryHolder.defaultEntry);
        }
        return nodeNameToControlRet_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableNodeNameToControlRet() {
        onChanged();;
        if (nodeNameToControlRet_ == null) {
          nodeNameToControlRet_ = com.google.protobuf.MapField.newMapField(
              NodeNameToControlRetDefaultEntryHolder.defaultEntry);
        }
        if (!nodeNameToControlRet_.isMutable()) {
          nodeNameToControlRet_ = nodeNameToControlRet_.copy();
        }
        return nodeNameToControlRet_;
      }

      public int getNodeNameToControlRetCount() {
        return internalGetNodeNameToControlRet().getMap().size();
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */

      @java.lang.Override
      public boolean containsNodeNameToControlRet(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetNodeNameToControlRet().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNodeNameToControlRetMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getNodeNameToControlRet() {
        return getNodeNameToControlRetMap();
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getNodeNameToControlRetMap() {
        return internalGetNodeNameToControlRet().getMap();
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getNodeNameToControlRetOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetNodeNameToControlRet().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getNodeNameToControlRetOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetNodeNameToControlRet().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearNodeNameToControlRet() {
        internalGetMutableNodeNameToControlRet().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */

      public Builder removeNodeNameToControlRet(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableNodeNameToControlRet().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableNodeNameToControlRet() {
        return internalGetMutableNodeNameToControlRet().getMutableMap();
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */
      public Builder putNodeNameToControlRet(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableNodeNameToControlRet().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Maps from node name to control ret. This is an output from running TF/XLA
       * bridge.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_name_to_control_ret = 3;</code>
       */

      public Builder putAllNodeNameToControlRet(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableNodeNameToControlRet().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> retTypes_ =
        java.util.Collections.emptyList();
      private void ensureRetTypesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          retTypes_ = new java.util.ArrayList<java.lang.Integer>(retTypes_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @return A list containing the retTypes.
       */
      public java.util.List<org.tensorflow.proto.framework.DataType> getRetTypesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.tensorflow.proto.framework.DataType>(retTypes_, retTypes_converter_);
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @return The count of retTypes.
       */
      public int getRetTypesCount() {
        return retTypes_.size();
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param index The index of the element to return.
       * @return The retTypes at the given index.
       */
      public org.tensorflow.proto.framework.DataType getRetTypes(int index) {
        return retTypes_converter_.convert(retTypes_.get(index));
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param index The index to set the value at.
       * @param value The retTypes to set.
       * @return This builder for chaining.
       */
      public Builder setRetTypes(
          int index, org.tensorflow.proto.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRetTypesIsMutable();
        retTypes_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param value The retTypes to add.
       * @return This builder for chaining.
       */
      public Builder addRetTypes(org.tensorflow.proto.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRetTypesIsMutable();
        retTypes_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param values The retTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllRetTypes(
          java.lang.Iterable<? extends org.tensorflow.proto.framework.DataType> values) {
        ensureRetTypesIsMutable();
        for (org.tensorflow.proto.framework.DataType value : values) {
          retTypes_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetTypes() {
        retTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @return A list containing the enum numeric values on the wire for retTypes.
       */
      public java.util.List<java.lang.Integer>
      getRetTypesValueList() {
        return java.util.Collections.unmodifiableList(retTypes_);
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of retTypes at the given index.
       */
      public int getRetTypesValue(int index) {
        return retTypes_.get(index);
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for retTypes to set.
       * @return This builder for chaining.
       */
      public Builder setRetTypesValue(
          int index, int value) {
        ensureRetTypesIsMutable();
        retTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param value The enum numeric value on the wire for retTypes to add.
       * @return This builder for chaining.
       */
      public Builder addRetTypesValue(int value) {
        ensureRetTypesIsMutable();
        retTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return node types of the function. This is an output of graph
       * preprocessing.
       * </pre>
       *
       * <code>repeated .tensorflow.DataType ret_types = 4;</code>
       * @param values The enum numeric values on the wire for retTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllRetTypesValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureRetTypesIsMutable();
        for (int value : values) {
          retTypes_.add(value);
        }
        onChanged();
        return this;
      }

      private int numReturnNodes_ ;
      /**
       * <pre>
       * Number of return nodes. This is an output of graph preprocessing.
       * </pre>
       *
       * <code>uint32 num_return_nodes = 5;</code>
       * @return The numReturnNodes.
       */
      @java.lang.Override
      public int getNumReturnNodes() {
        return numReturnNodes_;
      }
      /**
       * <pre>
       * Number of return nodes. This is an output of graph preprocessing.
       * </pre>
       *
       * <code>uint32 num_return_nodes = 5;</code>
       * @param value The numReturnNodes to set.
       * @return This builder for chaining.
       */
      public Builder setNumReturnNodes(int value) {
        
        numReturnNodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of return nodes. This is an output of graph preprocessing.
       * </pre>
       *
       * <code>uint32 num_return_nodes = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumReturnNodes() {
        
        numReturnNodes_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.OptimizedFunctionGraph)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.OptimizedFunctionGraph)
    private static final tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph();
    }

    public static tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OptimizedFunctionGraph>
        PARSER = new com.google.protobuf.AbstractParser<OptimizedFunctionGraph>() {
      @java.lang.Override
      public OptimizedFunctionGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OptimizedFunctionGraph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptimizedFunctionGraph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.OptimizedFunctionGraphOuterClass.OptimizedFunctionGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_OptimizedFunctionGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_OptimizedFunctionGraph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_OptimizedFunctionGraph_NodeNameToControlRetEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_OptimizedFunctionGraph_NodeNameToControlRetEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8tensorflow/core/framework/optimized_fu" +
      "nction_graph.proto\022\ntensorflow\032%tensorfl" +
      "ow/core/framework/graph.proto\032%tensorflo" +
      "w/core/framework/types.proto\"\264\002\n\026Optimiz" +
      "edFunctionGraph\022\014\n\004name\030\001 \001(\t\022,\n\016functio" +
      "n_graph\030\002 \001(\0132\024.tensorflow.GraphDef\022^\n\030n" +
      "ode_name_to_control_ret\030\003 \003(\0132<.tensorfl" +
      "ow.OptimizedFunctionGraph.NodeNameToCont" +
      "rolRetEntry\022\'\n\tret_types\030\004 \003(\0162\024.tensorf" +
      "low.DataType\022\030\n\020num_return_nodes\030\005 \001(\r\032;" +
      "\n\031NodeNameToControlRetEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\t:\0028\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.proto.framework.GraphProtos.getDescriptor(),
          org.tensorflow.proto.framework.TypesProtos.getDescriptor(),
        });
    internal_static_tensorflow_OptimizedFunctionGraph_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_OptimizedFunctionGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_OptimizedFunctionGraph_descriptor,
        new java.lang.String[] { "Name", "FunctionGraph", "NodeNameToControlRet", "RetTypes", "NumReturnNodes", });
    internal_static_tensorflow_OptimizedFunctionGraph_NodeNameToControlRetEntry_descriptor =
      internal_static_tensorflow_OptimizedFunctionGraph_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_OptimizedFunctionGraph_NodeNameToControlRetEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_OptimizedFunctionGraph_NodeNameToControlRetEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.tensorflow.proto.framework.GraphProtos.getDescriptor();
    org.tensorflow.proto.framework.TypesProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
