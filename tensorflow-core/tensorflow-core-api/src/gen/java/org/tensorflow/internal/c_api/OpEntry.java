// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.tensorflow.internal.c_api;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.tensorflow.internal.c_api.global.tensorflow.*;


// Represents an entry in the tape.
@NoOffset @Name("tensorflow::eager::OpTapeEntry<tensorflow::gradients::GradientFunction,tensorflow::gradients::TapeTensor>") @Properties(inherit = org.tensorflow.internal.c_api.presets.tensorflow.class)
public class OpEntry extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public OpEntry() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public OpEntry(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public OpEntry(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public OpEntry position(long position) {
        return (OpEntry)super.position(position);
    }
    @Override public OpEntry getPointer(long i) {
        return new OpEntry((Pointer)this).position(position + i);
    }

  public native @StdString BytePointer op_type(); public native OpEntry op_type(BytePointer setter);
  public native @StdVector TapeTensor output_tensor_info(); public native OpEntry output_tensor_info(TapeTensor setter);
  public native @Cast("tensorflow::int64*") @StdVector LongPointer input_tensor_id(); public native OpEntry input_tensor_id(LongPointer setter);

  // TODO(apassos) consider narrowing down this interface.
  public native GradientFunction backward_function(); public native OpEntry backward_function(GradientFunction setter);

  // Should be called before deleting the backward function. TODO(apassos) use
  // unique_ptrs to ensure this happens.
  public native @ByRef @Cast("std::function<void(tensorflow::gradients::GradientFunction*)>*") Pointer backward_function_deleter(); public native OpEntry backward_function_deleter(Pointer setter);
  public native @MemberSetter OpEntry backward_function_deleter(GradientFunctionDeleter setter);
}
