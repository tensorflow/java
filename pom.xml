<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.tensorflow</groupId>
  <artifactId>tensorflow-java</artifactId>
  <version>0.5.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>TensorFlow Java Parent</name>
  <description>Parent POM of TensorFlow artifacts</description>

  <url>https://www.tensorflow.org</url>
  <inceptionYear>2015</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/tensorflow/tensorflow.git</url>
    <connection>git@github.com:tensorflow/tensorflow.git</connection>
    <developerConnection>scm:git:https://github.com/tensorflow/tensorflow.git</developerConnection>
  </scm>

  <modules>
    <module>tensorflow-core</module>
    <module>tensorflow-framework</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.release>11</maven.compiler.release>
    <junit.version>5.6.2</junit.version>
    <jmh.version>1.21</jmh.version>
    <versions-plugin.version>2.7</versions-plugin.version>
    <errorprone.version>2.10.0</errorprone.version>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <maven.source.skip>true</maven.source.skip>
    <gpg.skip>true</gpg.skip>
    <spotless.version>2.20.2</spotless.version>
  </properties>

  <repositories>
    <repository>
      <id>ossrh-snapshots</id>
      <name>OSSRH Sonatype Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>ossrh-snapshots</id>
      <name>OSSRH Sonatype Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <!--
  Deploys to OSSRH/Maven central
    We don't need to deploy to Bintray, as JCenter will eventually proxy artifacts upload in Maven
    central. See Sonatype requirements at http://central.sonatype.org/pages/apache-maven.html
  -->
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>
        https://oss.sonatype.org/service/local/staging/deployByRepositoryId/${stagingRepositoryId}/
      </url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${jmh.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${jmh.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <!--
    Developer profile
        Enable javadoc generation so the developer is aware of any mistake that might prevent
        ultimately the deployment of the artifacts
    -->
    <profile>
      <id>dev</id>
      <properties>
        <maven.javadoc.skip>false</maven.javadoc.skip>
      </properties>
    </profile>

    <!--
    Deploying profile
        Build the Javadoc when deploying
    -->
    <profile>
      <id>deploying</id>
      <properties>
        <maven.javadoc.skip>false</maven.javadoc.skip>
        <maven.source.skip>false</maven.source.skip>
      </properties>
    </profile>
    <!--
    Releasing profile
        Activate GPG signing on all built artifacts and fetch native artifacts from staging repository
    -->
    <profile>
      <id>releasing</id>
      <properties>
        <gpg.skip>false</gpg.skip>
      </properties>
      <repositories>
        <repository>
          <id>ossrh-staging</id>
          <name>OSSRH Sonatype Staging</name>
          <url>
            https://oss.sonatype.org/service/local/staging/deployByRepositoryId/${stagingRepositoryId}/
          </url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>

    <profile>
      <id>jdk17</id>
      <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
      </properties>
    </profile>

    <!--
      Profile that enables lint checks on compilation
      Uses Google Error Prone for more coverage
    -->
    <profile>
      <id>lint</id>
      <activation>
        <!-- custom property to disable link checks on command line (enabled by default) -->
        <property>
          <name>lint.skip</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <showWarnings>true</showWarnings>
              <compilerArgs combine.children="append">
                <!--arg>-Werror</arg--> <!-- Disabled (temporarily?) -->
                <arg>-Xlint:all</arg>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>

                <!-- We need to repeat all arguments found in jvm.config here or we'll lose them -->
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
              </compilerArgs>
              <annotationProcessorPaths combine.children="append">
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorprone.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Profile to run spotless:apply on builds.  Will run before format's check.
    -->
    <profile>
      <id>apply-format</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>${spotless.version}</version>

            <executions>
              <execution>
                <!-- Runs in initialize phase to fail fast in case of formatting issues (should be before codegen).-->
                <id>spotless-apply</id>
                <phase>initialize</phase>
                <goals>
                  <goal>apply</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Profile that enables format checks on compilation
      Can auto-format using spotless:apply.
    -->
    <profile>
      <id>check-format</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>${spotless.version}</version>

            <executions>
              <execution>
                <!-- Runs in initialize phase to fail fast in case of formatting issues (should be before codegen).-->
                <id>spotless-check</id>
                <phase>initialize</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- http://central.sonatype.org/pages/requirements.html#developer-information -->
  <developers>
    <developer>
      <name>SIG JVM</name>
      <organization>TensorFlow</organization>
      <organizationUrl>http://www.tensorflow.org</organizationUrl>
    </developer>
  </developers>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <fork>true</fork> <!-- Required for JDK16+ -->
        </configuration>
      </plugin>
      <!-- GPG signed components: http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <gpgArguments>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
          </gpgArguments>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <quiet>true</quiet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-plugin.version}</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
          <processAllModules>true</processAllModules>
          <updateMatchingVersions>true</updateMatchingVersions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <ratchetFrom>origin/master</ratchetFrom>
          <lineEndings/>
          <java>
            <googleJavaFormat>
              <version>1.14.0</version>
            </googleJavaFormat>
            <removeUnusedImports/>
          </java>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
          <configuration combine.children="append">
            <includes>
              <include>**/*Test.java</include>
            </includes>
            <useModulePath>false</useModulePath>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>

