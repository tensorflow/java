// Targeted by JavaCPP version 1.5.9: DO NOT EDIT THIS FILE

package org.tensorflow.internal.c_api;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.tensorflow.internal.c_api.global.tensorflow.*;


@Properties(inherit = org.tensorflow.internal.c_api.presets.tensorflow.class)
public class TF_InputRange_Args extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TF_InputRange_Args() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TF_InputRange_Args(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TF_InputRange_Args(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TF_InputRange_Args position(long position) {
        return (TF_InputRange_Args)super.position(position);
    }
    @Override public TF_InputRange_Args getPointer(long i) {
        return new TF_InputRange_Args((Pointer)this).offsetAddress(i);
    }

  public native @Cast("size_t") long struct_size(); public native TF_InputRange_Args struct_size(long setter);
  public native Pointer priv(); public native TF_InputRange_Args priv(Pointer setter);         // Not used, for possible extension.
  public native int start(); public native TF_InputRange_Args start(int setter);          // output
  public native int stop(); public native TF_InputRange_Args stop(int setter);           // output
  public native TF_Status status(); public native TF_InputRange_Args status(TF_Status setter);  // output
}
