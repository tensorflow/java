// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/remote_tensor_handle.proto

package org.tensorflow.proto.framework;

/**
 * Protobuf type {@code tensorflow.eager.RemoteTensorHandle}
 */
public final class RemoteTensorHandle extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.eager.RemoteTensorHandle)
    RemoteTensorHandleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RemoteTensorHandle.newBuilder() to construct.
  private RemoteTensorHandle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RemoteTensorHandle() {
    device_ = "";
    opDevice_ = "";
    dtype_ = 0;
    resourceDtypesAndShapes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RemoteTensorHandle();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.proto.framework.RemoteTensorHandleProtos.internal_static_tensorflow_eager_RemoteTensorHandle_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.proto.framework.RemoteTensorHandleProtos.internal_static_tensorflow_eager_RemoteTensorHandle_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.proto.framework.RemoteTensorHandle.class, org.tensorflow.proto.framework.RemoteTensorHandle.Builder.class);
  }

  public static final int OP_ID_FIELD_NUMBER = 1;
  private long opId_;
  /**
   * <pre>
   * The ID of the operation that produced this tensor.
   * </pre>
   *
   * <code>int64 op_id = 1;</code>
   * @return The opId.
   */
  @java.lang.Override
  public long getOpId() {
    return opId_;
  }

  public static final int OUTPUT_NUM_FIELD_NUMBER = 2;
  private int outputNum_;
  /**
   * <pre>
   * The index into the outputs of the operation that produced this tensor.
   * </pre>
   *
   * <code>int32 output_num = 2;</code>
   * @return The outputNum.
   */
  @java.lang.Override
  public int getOutputNum() {
    return outputNum_;
  }

  public static final int DEVICE_FIELD_NUMBER = 3;
  private volatile java.lang.Object device_;
  /**
   * <pre>
   * Device where the tensor is located. Cannot be empty.
   * For multi-device functions, it's the default device passed to placer.
   * </pre>
   *
   * <code>string device = 3;</code>
   * @return The device.
   */
  @java.lang.Override
  public java.lang.String getDevice() {
    java.lang.Object ref = device_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      device_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Device where the tensor is located. Cannot be empty.
   * For multi-device functions, it's the default device passed to placer.
   * </pre>
   *
   * <code>string device = 3;</code>
   * @return The bytes for device.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeviceBytes() {
    java.lang.Object ref = device_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      device_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OP_DEVICE_FIELD_NUMBER = 4;
  private volatile java.lang.Object opDevice_;
  /**
   * <pre>
   * Device of the operation producing this tensor. Can be empty if the
   * operation producing this tensor is a multi-device function.
   * </pre>
   *
   * <code>string op_device = 4;</code>
   * @return The opDevice.
   */
  @java.lang.Override
  public java.lang.String getOpDevice() {
    java.lang.Object ref = opDevice_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      opDevice_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Device of the operation producing this tensor. Can be empty if the
   * operation producing this tensor is a multi-device function.
   * </pre>
   *
   * <code>string op_device = 4;</code>
   * @return The bytes for opDevice.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOpDeviceBytes() {
    java.lang.Object ref = opDevice_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      opDevice_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DTYPE_FIELD_NUMBER = 5;
  private int dtype_;
  /**
   * <pre>
   * Tensor type.
   * </pre>
   *
   * <code>.tensorflow.DataType dtype = 5;</code>
   * @return The enum numeric value on the wire for dtype.
   */
  @java.lang.Override public int getDtypeValue() {
    return dtype_;
  }
  /**
   * <pre>
   * Tensor type.
   * </pre>
   *
   * <code>.tensorflow.DataType dtype = 5;</code>
   * @return The dtype.
   */
  @java.lang.Override public org.tensorflow.proto.framework.DataType getDtype() {
    @SuppressWarnings("deprecation")
    org.tensorflow.proto.framework.DataType result = org.tensorflow.proto.framework.DataType.valueOf(dtype_);
    return result == null ? org.tensorflow.proto.framework.DataType.UNRECOGNIZED : result;
  }

  public static final int RESOURCE_DTYPES_AND_SHAPES_FIELD_NUMBER = 6;
  private java.util.List<org.tensorflow.proto.framework.ResourceDtypeAndShape> resourceDtypesAndShapes_;
  /**
   * <pre>
   * Optional data types and shapes of a remote resource variable.
   * </pre>
   *
   * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.proto.framework.ResourceDtypeAndShape> getResourceDtypesAndShapesList() {
    return resourceDtypesAndShapes_;
  }
  /**
   * <pre>
   * Optional data types and shapes of a remote resource variable.
   * </pre>
   *
   * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder> 
      getResourceDtypesAndShapesOrBuilderList() {
    return resourceDtypesAndShapes_;
  }
  /**
   * <pre>
   * Optional data types and shapes of a remote resource variable.
   * </pre>
   *
   * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
   */
  @java.lang.Override
  public int getResourceDtypesAndShapesCount() {
    return resourceDtypesAndShapes_.size();
  }
  /**
   * <pre>
   * Optional data types and shapes of a remote resource variable.
   * </pre>
   *
   * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.framework.ResourceDtypeAndShape getResourceDtypesAndShapes(int index) {
    return resourceDtypesAndShapes_.get(index);
  }
  /**
   * <pre>
   * Optional data types and shapes of a remote resource variable.
   * </pre>
   *
   * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
   */
  @java.lang.Override
  public org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder getResourceDtypesAndShapesOrBuilder(
      int index) {
    return resourceDtypesAndShapes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (opId_ != 0L) {
      output.writeInt64(1, opId_);
    }
    if (outputNum_ != 0) {
      output.writeInt32(2, outputNum_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(device_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, device_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(opDevice_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, opDevice_);
    }
    if (dtype_ != org.tensorflow.proto.framework.DataType.DT_INVALID.getNumber()) {
      output.writeEnum(5, dtype_);
    }
    for (int i = 0; i < resourceDtypesAndShapes_.size(); i++) {
      output.writeMessage(6, resourceDtypesAndShapes_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (opId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, opId_);
    }
    if (outputNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, outputNum_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(device_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, device_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(opDevice_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, opDevice_);
    }
    if (dtype_ != org.tensorflow.proto.framework.DataType.DT_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, dtype_);
    }
    for (int i = 0; i < resourceDtypesAndShapes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, resourceDtypesAndShapes_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.proto.framework.RemoteTensorHandle)) {
      return super.equals(obj);
    }
    org.tensorflow.proto.framework.RemoteTensorHandle other = (org.tensorflow.proto.framework.RemoteTensorHandle) obj;

    if (getOpId()
        != other.getOpId()) return false;
    if (getOutputNum()
        != other.getOutputNum()) return false;
    if (!getDevice()
        .equals(other.getDevice())) return false;
    if (!getOpDevice()
        .equals(other.getOpDevice())) return false;
    if (dtype_ != other.dtype_) return false;
    if (!getResourceDtypesAndShapesList()
        .equals(other.getResourceDtypesAndShapesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OP_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOpId());
    hash = (37 * hash) + OUTPUT_NUM_FIELD_NUMBER;
    hash = (53 * hash) + getOutputNum();
    hash = (37 * hash) + DEVICE_FIELD_NUMBER;
    hash = (53 * hash) + getDevice().hashCode();
    hash = (37 * hash) + OP_DEVICE_FIELD_NUMBER;
    hash = (53 * hash) + getOpDevice().hashCode();
    hash = (37 * hash) + DTYPE_FIELD_NUMBER;
    hash = (53 * hash) + dtype_;
    if (getResourceDtypesAndShapesCount() > 0) {
      hash = (37 * hash) + RESOURCE_DTYPES_AND_SHAPES_FIELD_NUMBER;
      hash = (53 * hash) + getResourceDtypesAndShapesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.proto.framework.RemoteTensorHandle parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.proto.framework.RemoteTensorHandle prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tensorflow.eager.RemoteTensorHandle}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.eager.RemoteTensorHandle)
      org.tensorflow.proto.framework.RemoteTensorHandleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.framework.RemoteTensorHandleProtos.internal_static_tensorflow_eager_RemoteTensorHandle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.framework.RemoteTensorHandleProtos.internal_static_tensorflow_eager_RemoteTensorHandle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.framework.RemoteTensorHandle.class, org.tensorflow.proto.framework.RemoteTensorHandle.Builder.class);
    }

    // Construct using org.tensorflow.proto.framework.RemoteTensorHandle.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      opId_ = 0L;

      outputNum_ = 0;

      device_ = "";

      opDevice_ = "";

      dtype_ = 0;

      if (resourceDtypesAndShapesBuilder_ == null) {
        resourceDtypesAndShapes_ = java.util.Collections.emptyList();
      } else {
        resourceDtypesAndShapes_ = null;
        resourceDtypesAndShapesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.proto.framework.RemoteTensorHandleProtos.internal_static_tensorflow_eager_RemoteTensorHandle_descriptor;
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.RemoteTensorHandle getDefaultInstanceForType() {
      return org.tensorflow.proto.framework.RemoteTensorHandle.getDefaultInstance();
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.RemoteTensorHandle build() {
      org.tensorflow.proto.framework.RemoteTensorHandle result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tensorflow.proto.framework.RemoteTensorHandle buildPartial() {
      org.tensorflow.proto.framework.RemoteTensorHandle result = new org.tensorflow.proto.framework.RemoteTensorHandle(this);
      int from_bitField0_ = bitField0_;
      result.opId_ = opId_;
      result.outputNum_ = outputNum_;
      result.device_ = device_;
      result.opDevice_ = opDevice_;
      result.dtype_ = dtype_;
      if (resourceDtypesAndShapesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          resourceDtypesAndShapes_ = java.util.Collections.unmodifiableList(resourceDtypesAndShapes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.resourceDtypesAndShapes_ = resourceDtypesAndShapes_;
      } else {
        result.resourceDtypesAndShapes_ = resourceDtypesAndShapesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.proto.framework.RemoteTensorHandle) {
        return mergeFrom((org.tensorflow.proto.framework.RemoteTensorHandle)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.proto.framework.RemoteTensorHandle other) {
      if (other == org.tensorflow.proto.framework.RemoteTensorHandle.getDefaultInstance()) return this;
      if (other.getOpId() != 0L) {
        setOpId(other.getOpId());
      }
      if (other.getOutputNum() != 0) {
        setOutputNum(other.getOutputNum());
      }
      if (!other.getDevice().isEmpty()) {
        device_ = other.device_;
        onChanged();
      }
      if (!other.getOpDevice().isEmpty()) {
        opDevice_ = other.opDevice_;
        onChanged();
      }
      if (other.dtype_ != 0) {
        setDtypeValue(other.getDtypeValue());
      }
      if (resourceDtypesAndShapesBuilder_ == null) {
        if (!other.resourceDtypesAndShapes_.isEmpty()) {
          if (resourceDtypesAndShapes_.isEmpty()) {
            resourceDtypesAndShapes_ = other.resourceDtypesAndShapes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureResourceDtypesAndShapesIsMutable();
            resourceDtypesAndShapes_.addAll(other.resourceDtypesAndShapes_);
          }
          onChanged();
        }
      } else {
        if (!other.resourceDtypesAndShapes_.isEmpty()) {
          if (resourceDtypesAndShapesBuilder_.isEmpty()) {
            resourceDtypesAndShapesBuilder_.dispose();
            resourceDtypesAndShapesBuilder_ = null;
            resourceDtypesAndShapes_ = other.resourceDtypesAndShapes_;
            bitField0_ = (bitField0_ & ~0x00000001);
            resourceDtypesAndShapesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResourceDtypesAndShapesFieldBuilder() : null;
          } else {
            resourceDtypesAndShapesBuilder_.addAllMessages(other.resourceDtypesAndShapes_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              opId_ = input.readInt64();

              break;
            } // case 8
            case 16: {
              outputNum_ = input.readInt32();

              break;
            } // case 16
            case 26: {
              device_ = input.readStringRequireUtf8();

              break;
            } // case 26
            case 34: {
              opDevice_ = input.readStringRequireUtf8();

              break;
            } // case 34
            case 40: {
              dtype_ = input.readEnum();

              break;
            } // case 40
            case 50: {
              org.tensorflow.proto.framework.ResourceDtypeAndShape m =
                  input.readMessage(
                      org.tensorflow.proto.framework.ResourceDtypeAndShape.parser(),
                      extensionRegistry);
              if (resourceDtypesAndShapesBuilder_ == null) {
                ensureResourceDtypesAndShapesIsMutable();
                resourceDtypesAndShapes_.add(m);
              } else {
                resourceDtypesAndShapesBuilder_.addMessage(m);
              }
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long opId_ ;
    /**
     * <pre>
     * The ID of the operation that produced this tensor.
     * </pre>
     *
     * <code>int64 op_id = 1;</code>
     * @return The opId.
     */
    @java.lang.Override
    public long getOpId() {
      return opId_;
    }
    /**
     * <pre>
     * The ID of the operation that produced this tensor.
     * </pre>
     *
     * <code>int64 op_id = 1;</code>
     * @param value The opId to set.
     * @return This builder for chaining.
     */
    public Builder setOpId(long value) {
      
      opId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the operation that produced this tensor.
     * </pre>
     *
     * <code>int64 op_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpId() {
      
      opId_ = 0L;
      onChanged();
      return this;
    }

    private int outputNum_ ;
    /**
     * <pre>
     * The index into the outputs of the operation that produced this tensor.
     * </pre>
     *
     * <code>int32 output_num = 2;</code>
     * @return The outputNum.
     */
    @java.lang.Override
    public int getOutputNum() {
      return outputNum_;
    }
    /**
     * <pre>
     * The index into the outputs of the operation that produced this tensor.
     * </pre>
     *
     * <code>int32 output_num = 2;</code>
     * @param value The outputNum to set.
     * @return This builder for chaining.
     */
    public Builder setOutputNum(int value) {
      
      outputNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The index into the outputs of the operation that produced this tensor.
     * </pre>
     *
     * <code>int32 output_num = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutputNum() {
      
      outputNum_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object device_ = "";
    /**
     * <pre>
     * Device where the tensor is located. Cannot be empty.
     * For multi-device functions, it's the default device passed to placer.
     * </pre>
     *
     * <code>string device = 3;</code>
     * @return The device.
     */
    public java.lang.String getDevice() {
      java.lang.Object ref = device_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        device_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Device where the tensor is located. Cannot be empty.
     * For multi-device functions, it's the default device passed to placer.
     * </pre>
     *
     * <code>string device = 3;</code>
     * @return The bytes for device.
     */
    public com.google.protobuf.ByteString
        getDeviceBytes() {
      java.lang.Object ref = device_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        device_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Device where the tensor is located. Cannot be empty.
     * For multi-device functions, it's the default device passed to placer.
     * </pre>
     *
     * <code>string device = 3;</code>
     * @param value The device to set.
     * @return This builder for chaining.
     */
    public Builder setDevice(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      device_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device where the tensor is located. Cannot be empty.
     * For multi-device functions, it's the default device passed to placer.
     * </pre>
     *
     * <code>string device = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDevice() {
      
      device_ = getDefaultInstance().getDevice();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device where the tensor is located. Cannot be empty.
     * For multi-device functions, it's the default device passed to placer.
     * </pre>
     *
     * <code>string device = 3;</code>
     * @param value The bytes for device to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      device_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object opDevice_ = "";
    /**
     * <pre>
     * Device of the operation producing this tensor. Can be empty if the
     * operation producing this tensor is a multi-device function.
     * </pre>
     *
     * <code>string op_device = 4;</code>
     * @return The opDevice.
     */
    public java.lang.String getOpDevice() {
      java.lang.Object ref = opDevice_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        opDevice_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Device of the operation producing this tensor. Can be empty if the
     * operation producing this tensor is a multi-device function.
     * </pre>
     *
     * <code>string op_device = 4;</code>
     * @return The bytes for opDevice.
     */
    public com.google.protobuf.ByteString
        getOpDeviceBytes() {
      java.lang.Object ref = opDevice_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opDevice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Device of the operation producing this tensor. Can be empty if the
     * operation producing this tensor is a multi-device function.
     * </pre>
     *
     * <code>string op_device = 4;</code>
     * @param value The opDevice to set.
     * @return This builder for chaining.
     */
    public Builder setOpDevice(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      opDevice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device of the operation producing this tensor. Can be empty if the
     * operation producing this tensor is a multi-device function.
     * </pre>
     *
     * <code>string op_device = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpDevice() {
      
      opDevice_ = getDefaultInstance().getOpDevice();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device of the operation producing this tensor. Can be empty if the
     * operation producing this tensor is a multi-device function.
     * </pre>
     *
     * <code>string op_device = 4;</code>
     * @param value The bytes for opDevice to set.
     * @return This builder for chaining.
     */
    public Builder setOpDeviceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      opDevice_ = value;
      onChanged();
      return this;
    }

    private int dtype_ = 0;
    /**
     * <pre>
     * Tensor type.
     * </pre>
     *
     * <code>.tensorflow.DataType dtype = 5;</code>
     * @return The enum numeric value on the wire for dtype.
     */
    @java.lang.Override public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <pre>
     * Tensor type.
     * </pre>
     *
     * <code>.tensorflow.DataType dtype = 5;</code>
     * @param value The enum numeric value on the wire for dtype to set.
     * @return This builder for chaining.
     */
    public Builder setDtypeValue(int value) {
      
      dtype_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tensor type.
     * </pre>
     *
     * <code>.tensorflow.DataType dtype = 5;</code>
     * @return The dtype.
     */
    @java.lang.Override
    public org.tensorflow.proto.framework.DataType getDtype() {
      @SuppressWarnings("deprecation")
      org.tensorflow.proto.framework.DataType result = org.tensorflow.proto.framework.DataType.valueOf(dtype_);
      return result == null ? org.tensorflow.proto.framework.DataType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Tensor type.
     * </pre>
     *
     * <code>.tensorflow.DataType dtype = 5;</code>
     * @param value The dtype to set.
     * @return This builder for chaining.
     */
    public Builder setDtype(org.tensorflow.proto.framework.DataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      dtype_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tensor type.
     * </pre>
     *
     * <code>.tensorflow.DataType dtype = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDtype() {
      
      dtype_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<org.tensorflow.proto.framework.ResourceDtypeAndShape> resourceDtypesAndShapes_ =
      java.util.Collections.emptyList();
    private void ensureResourceDtypesAndShapesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        resourceDtypesAndShapes_ = new java.util.ArrayList<org.tensorflow.proto.framework.ResourceDtypeAndShape>(resourceDtypesAndShapes_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.proto.framework.ResourceDtypeAndShape, org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder, org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder> resourceDtypesAndShapesBuilder_;

    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public java.util.List<org.tensorflow.proto.framework.ResourceDtypeAndShape> getResourceDtypesAndShapesList() {
      if (resourceDtypesAndShapesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(resourceDtypesAndShapes_);
      } else {
        return resourceDtypesAndShapesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public int getResourceDtypesAndShapesCount() {
      if (resourceDtypesAndShapesBuilder_ == null) {
        return resourceDtypesAndShapes_.size();
      } else {
        return resourceDtypesAndShapesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public org.tensorflow.proto.framework.ResourceDtypeAndShape getResourceDtypesAndShapes(int index) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        return resourceDtypesAndShapes_.get(index);
      } else {
        return resourceDtypesAndShapesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder setResourceDtypesAndShapes(
        int index, org.tensorflow.proto.framework.ResourceDtypeAndShape value) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.set(index, value);
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder setResourceDtypesAndShapes(
        int index, org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder builderForValue) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.set(index, builderForValue.build());
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder addResourceDtypesAndShapes(org.tensorflow.proto.framework.ResourceDtypeAndShape value) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.add(value);
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder addResourceDtypesAndShapes(
        int index, org.tensorflow.proto.framework.ResourceDtypeAndShape value) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.add(index, value);
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder addResourceDtypesAndShapes(
        org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder builderForValue) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.add(builderForValue.build());
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder addResourceDtypesAndShapes(
        int index, org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder builderForValue) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.add(index, builderForValue.build());
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder addAllResourceDtypesAndShapes(
        java.lang.Iterable<? extends org.tensorflow.proto.framework.ResourceDtypeAndShape> values) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        ensureResourceDtypesAndShapesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, resourceDtypesAndShapes_);
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder clearResourceDtypesAndShapes() {
      if (resourceDtypesAndShapesBuilder_ == null) {
        resourceDtypesAndShapes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public Builder removeResourceDtypesAndShapes(int index) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        ensureResourceDtypesAndShapesIsMutable();
        resourceDtypesAndShapes_.remove(index);
        onChanged();
      } else {
        resourceDtypesAndShapesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder getResourceDtypesAndShapesBuilder(
        int index) {
      return getResourceDtypesAndShapesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder getResourceDtypesAndShapesOrBuilder(
        int index) {
      if (resourceDtypesAndShapesBuilder_ == null) {
        return resourceDtypesAndShapes_.get(index);  } else {
        return resourceDtypesAndShapesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public java.util.List<? extends org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder> 
         getResourceDtypesAndShapesOrBuilderList() {
      if (resourceDtypesAndShapesBuilder_ != null) {
        return resourceDtypesAndShapesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(resourceDtypesAndShapes_);
      }
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder addResourceDtypesAndShapesBuilder() {
      return getResourceDtypesAndShapesFieldBuilder().addBuilder(
          org.tensorflow.proto.framework.ResourceDtypeAndShape.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder addResourceDtypesAndShapesBuilder(
        int index) {
      return getResourceDtypesAndShapesFieldBuilder().addBuilder(
          index, org.tensorflow.proto.framework.ResourceDtypeAndShape.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional data types and shapes of a remote resource variable.
     * </pre>
     *
     * <code>repeated .tensorflow.eager.ResourceDtypeAndShape resource_dtypes_and_shapes = 6;</code>
     */
    public java.util.List<org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder> 
         getResourceDtypesAndShapesBuilderList() {
      return getResourceDtypesAndShapesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.proto.framework.ResourceDtypeAndShape, org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder, org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder> 
        getResourceDtypesAndShapesFieldBuilder() {
      if (resourceDtypesAndShapesBuilder_ == null) {
        resourceDtypesAndShapesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.proto.framework.ResourceDtypeAndShape, org.tensorflow.proto.framework.ResourceDtypeAndShape.Builder, org.tensorflow.proto.framework.ResourceDtypeAndShapeOrBuilder>(
                resourceDtypesAndShapes_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        resourceDtypesAndShapes_ = null;
      }
      return resourceDtypesAndShapesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.eager.RemoteTensorHandle)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.eager.RemoteTensorHandle)
  private static final org.tensorflow.proto.framework.RemoteTensorHandle DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.proto.framework.RemoteTensorHandle();
  }

  public static org.tensorflow.proto.framework.RemoteTensorHandle getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RemoteTensorHandle>
      PARSER = new com.google.protobuf.AbstractParser<RemoteTensorHandle>() {
    @java.lang.Override
    public RemoteTensorHandle parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RemoteTensorHandle> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RemoteTensorHandle> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tensorflow.proto.framework.RemoteTensorHandle getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

