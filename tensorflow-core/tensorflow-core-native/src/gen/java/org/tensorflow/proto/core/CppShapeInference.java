// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/cpp_shape_inference.proto

package org.tensorflow.proto.core;

public final class CppShapeInference {
  private CppShapeInference() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CppShapeInferenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.core.CppShapeInferenceResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     * @return Whether the shape field is set.
     */
    boolean hasShape();
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     * @return The shape.
     */
    org.tensorflow.proto.TensorShapeProto getShape();
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    org.tensorflow.proto.TensorShapeProtoOrBuilder getShapeOrBuilder();

    /**
     * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     * @return Whether the handleData field is set.
     */
    boolean hasHandleData();
    /**
     * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     * @return The handleData.
     */
    org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData getHandleData();
    /**
     * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder getHandleDataOrBuilder();
  }
  /**
   * Protobuf type {@code tensorflow.core.CppShapeInferenceResult}
   */
  public static final class CppShapeInferenceResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.core.CppShapeInferenceResult)
      CppShapeInferenceResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CppShapeInferenceResult.newBuilder() to construct.
    private CppShapeInferenceResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CppShapeInferenceResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CppShapeInferenceResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.Builder.class);
    }

    public interface HandleShapeAndTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       * @return Whether the shape field is set.
       */
      boolean hasShape();
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       * @return The shape.
       */
      org.tensorflow.proto.TensorShapeProto getShape();
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      org.tensorflow.proto.TensorShapeProtoOrBuilder getShapeOrBuilder();

      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       * @return The enum numeric value on the wire for dtype.
       */
      int getDtypeValue();
      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       * @return The dtype.
       */
      org.tensorflow.proto.DataType getDtype();

      /**
       * <code>.tensorflow.FullTypeDef type = 4;</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <code>.tensorflow.FullTypeDef type = 4;</code>
       * @return The type.
       */
      org.tensorflow.proto.FullTypeDef getType();
      /**
       * <code>.tensorflow.FullTypeDef type = 4;</code>
       */
      org.tensorflow.proto.FullTypeDefOrBuilder getTypeOrBuilder();
    }
    /**
     * Protobuf type {@code tensorflow.core.CppShapeInferenceResult.HandleShapeAndType}
     */
    public static final class HandleShapeAndType extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
        HandleShapeAndTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HandleShapeAndType.newBuilder() to construct.
      private HandleShapeAndType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HandleShapeAndType() {
        dtype_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HandleShapeAndType();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder.class);
      }

      public static final int SHAPE_FIELD_NUMBER = 1;
      private org.tensorflow.proto.TensorShapeProto shape_;
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       * @return Whether the shape field is set.
       */
      @java.lang.Override
      public boolean hasShape() {
        return shape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       * @return The shape.
       */
      @java.lang.Override
      public org.tensorflow.proto.TensorShapeProto getShape() {
        return shape_ == null ? org.tensorflow.proto.TensorShapeProto.getDefaultInstance() : shape_;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      @java.lang.Override
      public org.tensorflow.proto.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        return getShape();
      }

      public static final int DTYPE_FIELD_NUMBER = 2;
      private int dtype_;
      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       * @return The enum numeric value on the wire for dtype.
       */
      @java.lang.Override public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       * @return The dtype.
       */
      @java.lang.Override public org.tensorflow.proto.DataType getDtype() {
        @SuppressWarnings("deprecation")
        org.tensorflow.proto.DataType result = org.tensorflow.proto.DataType.valueOf(dtype_);
        return result == null ? org.tensorflow.proto.DataType.UNRECOGNIZED : result;
      }

      public static final int TYPE_FIELD_NUMBER = 4;
      private org.tensorflow.proto.FullTypeDef type_;
      /**
       * <code>.tensorflow.FullTypeDef type = 4;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return type_ != null;
      }
      /**
       * <code>.tensorflow.FullTypeDef type = 4;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.tensorflow.proto.FullTypeDef getType() {
        return type_ == null ? org.tensorflow.proto.FullTypeDef.getDefaultInstance() : type_;
      }
      /**
       * <code>.tensorflow.FullTypeDef type = 4;</code>
       */
      @java.lang.Override
      public org.tensorflow.proto.FullTypeDefOrBuilder getTypeOrBuilder() {
        return getType();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (shape_ != null) {
          output.writeMessage(1, getShape());
        }
        if (dtype_ != org.tensorflow.proto.DataType.DT_INVALID.getNumber()) {
          output.writeEnum(2, dtype_);
        }
        if (type_ != null) {
          output.writeMessage(4, getType());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (shape_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getShape());
        }
        if (dtype_ != org.tensorflow.proto.DataType.DT_INVALID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, dtype_);
        }
        if (type_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getType());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType)) {
          return super.equals(obj);
        }
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType other = (org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType) obj;

        if (hasShape() != other.hasShape()) return false;
        if (hasShape()) {
          if (!getShape()
              .equals(other.getShape())) return false;
        }
        if (dtype_ != other.dtype_) return false;
        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (!getType()
              .equals(other.getType())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasShape()) {
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShape().hashCode();
        }
        hash = (37 * hash) + DTYPE_FIELD_NUMBER;
        hash = (53 * hash) + dtype_;
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getType().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.core.CppShapeInferenceResult.HandleShapeAndType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder.class);
        }

        // Construct using org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (shapeBuilder_ == null) {
            shape_ = null;
          } else {
            shape_ = null;
            shapeBuilder_ = null;
          }
          dtype_ = 0;

          if (typeBuilder_ == null) {
            type_ = null;
          } else {
            type_ = null;
            typeBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_descriptor;
        }

        @java.lang.Override
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getDefaultInstanceForType() {
          return org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance();
        }

        @java.lang.Override
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType build() {
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType buildPartial() {
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType result = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType(this);
          if (shapeBuilder_ == null) {
            result.shape_ = shape_;
          } else {
            result.shape_ = shapeBuilder_.build();
          }
          result.dtype_ = dtype_;
          if (typeBuilder_ == null) {
            result.type_ = type_;
          } else {
            result.type_ = typeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType) {
            return mergeFrom((org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType other) {
          if (other == org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance()) return this;
          if (other.hasShape()) {
            mergeShape(other.getShape());
          }
          if (other.dtype_ != 0) {
            setDtypeValue(other.getDtypeValue());
          }
          if (other.hasType()) {
            mergeType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getShapeFieldBuilder().getBuilder(),
                      extensionRegistry);

                  break;
                } // case 10
                case 16: {
                  dtype_ = input.readEnum();

                  break;
                } // case 16
                case 34: {
                  input.readMessage(
                      getTypeFieldBuilder().getBuilder(),
                      extensionRegistry);

                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }

        private org.tensorflow.proto.TensorShapeProto shape_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.TensorShapeProto, org.tensorflow.proto.TensorShapeProto.Builder, org.tensorflow.proto.TensorShapeProtoOrBuilder> shapeBuilder_;
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         * @return Whether the shape field is set.
         */
        public boolean hasShape() {
          return shapeBuilder_ != null || shape_ != null;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         * @return The shape.
         */
        public org.tensorflow.proto.TensorShapeProto getShape() {
          if (shapeBuilder_ == null) {
            return shape_ == null ? org.tensorflow.proto.TensorShapeProto.getDefaultInstance() : shape_;
          } else {
            return shapeBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder setShape(org.tensorflow.proto.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shape_ = value;
            onChanged();
          } else {
            shapeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder setShape(
            org.tensorflow.proto.TensorShapeProto.Builder builderForValue) {
          if (shapeBuilder_ == null) {
            shape_ = builderForValue.build();
            onChanged();
          } else {
            shapeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder mergeShape(org.tensorflow.proto.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (shape_ != null) {
              shape_ =
                org.tensorflow.proto.TensorShapeProto.newBuilder(shape_).mergeFrom(value).buildPartial();
            } else {
              shape_ = value;
            }
            onChanged();
          } else {
            shapeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder clearShape() {
          if (shapeBuilder_ == null) {
            shape_ = null;
            onChanged();
          } else {
            shape_ = null;
            shapeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public org.tensorflow.proto.TensorShapeProto.Builder getShapeBuilder() {
          
          onChanged();
          return getShapeFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public org.tensorflow.proto.TensorShapeProtoOrBuilder getShapeOrBuilder() {
          if (shapeBuilder_ != null) {
            return shapeBuilder_.getMessageOrBuilder();
          } else {
            return shape_ == null ?
                org.tensorflow.proto.TensorShapeProto.getDefaultInstance() : shape_;
          }
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.TensorShapeProto, org.tensorflow.proto.TensorShapeProto.Builder, org.tensorflow.proto.TensorShapeProtoOrBuilder> 
            getShapeFieldBuilder() {
          if (shapeBuilder_ == null) {
            shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.tensorflow.proto.TensorShapeProto, org.tensorflow.proto.TensorShapeProto.Builder, org.tensorflow.proto.TensorShapeProtoOrBuilder>(
                    getShape(),
                    getParentForChildren(),
                    isClean());
            shape_ = null;
          }
          return shapeBuilder_;
        }

        private int dtype_ = 0;
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         * @return The enum numeric value on the wire for dtype.
         */
        @java.lang.Override public int getDtypeValue() {
          return dtype_;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         * @param value The enum numeric value on the wire for dtype to set.
         * @return This builder for chaining.
         */
        public Builder setDtypeValue(int value) {
          
          dtype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         * @return The dtype.
         */
        @java.lang.Override
        public org.tensorflow.proto.DataType getDtype() {
          @SuppressWarnings("deprecation")
          org.tensorflow.proto.DataType result = org.tensorflow.proto.DataType.valueOf(dtype_);
          return result == null ? org.tensorflow.proto.DataType.UNRECOGNIZED : result;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         * @param value The dtype to set.
         * @return This builder for chaining.
         */
        public Builder setDtype(org.tensorflow.proto.DataType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          dtype_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDtype() {
          
          dtype_ = 0;
          onChanged();
          return this;
        }

        private org.tensorflow.proto.FullTypeDef type_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.FullTypeDef, org.tensorflow.proto.FullTypeDef.Builder, org.tensorflow.proto.FullTypeDefOrBuilder> typeBuilder_;
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         * @return Whether the type field is set.
         */
        public boolean hasType() {
          return typeBuilder_ != null || type_ != null;
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         * @return The type.
         */
        public org.tensorflow.proto.FullTypeDef getType() {
          if (typeBuilder_ == null) {
            return type_ == null ? org.tensorflow.proto.FullTypeDef.getDefaultInstance() : type_;
          } else {
            return typeBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        public Builder setType(org.tensorflow.proto.FullTypeDef value) {
          if (typeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            typeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        public Builder setType(
            org.tensorflow.proto.FullTypeDef.Builder builderForValue) {
          if (typeBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            typeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        public Builder mergeType(org.tensorflow.proto.FullTypeDef value) {
          if (typeBuilder_ == null) {
            if (type_ != null) {
              type_ =
                org.tensorflow.proto.FullTypeDef.newBuilder(type_).mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            typeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        public Builder clearType() {
          if (typeBuilder_ == null) {
            type_ = null;
            onChanged();
          } else {
            type_ = null;
            typeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        public org.tensorflow.proto.FullTypeDef.Builder getTypeBuilder() {
          
          onChanged();
          return getTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        public org.tensorflow.proto.FullTypeDefOrBuilder getTypeOrBuilder() {
          if (typeBuilder_ != null) {
            return typeBuilder_.getMessageOrBuilder();
          } else {
            return type_ == null ?
                org.tensorflow.proto.FullTypeDef.getDefaultInstance() : type_;
          }
        }
        /**
         * <code>.tensorflow.FullTypeDef type = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.proto.FullTypeDef, org.tensorflow.proto.FullTypeDef.Builder, org.tensorflow.proto.FullTypeDefOrBuilder> 
            getTypeFieldBuilder() {
          if (typeBuilder_ == null) {
            typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.tensorflow.proto.FullTypeDef, org.tensorflow.proto.FullTypeDef.Builder, org.tensorflow.proto.FullTypeDefOrBuilder>(
                    getType(),
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          return typeBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
      private static final org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType();
      }

      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HandleShapeAndType>
          PARSER = new com.google.protobuf.AbstractParser<HandleShapeAndType>() {
        @java.lang.Override
        public HandleShapeAndType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<HandleShapeAndType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HandleShapeAndType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HandleDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.core.CppShapeInferenceResult.HandleData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool is_set = 1;</code>
       * @return The isSet.
       */
      boolean getIsSet();

      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      java.util.List<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> 
          getShapeAndTypeList();
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getShapeAndType(int index);
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      int getShapeAndTypeCount();
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      java.util.List<? extends org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
          getShapeAndTypeOrBuilderList();
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder getShapeAndTypeOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code tensorflow.core.CppShapeInferenceResult.HandleData}
     */
    public static final class HandleData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.core.CppShapeInferenceResult.HandleData)
        HandleDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HandleData.newBuilder() to construct.
      private HandleData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HandleData() {
        shapeAndType_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HandleData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder.class);
      }

      public static final int IS_SET_FIELD_NUMBER = 1;
      private boolean isSet_;
      /**
       * <code>bool is_set = 1;</code>
       * @return The isSet.
       */
      @java.lang.Override
      public boolean getIsSet() {
        return isSet_;
      }

      public static final int SHAPE_AND_TYPE_FIELD_NUMBER = 2;
      private java.util.List<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> shapeAndType_;
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> getShapeAndTypeList() {
        return shapeAndType_;
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
          getShapeAndTypeOrBuilderList() {
        return shapeAndType_;
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      @java.lang.Override
      public int getShapeAndTypeCount() {
        return shapeAndType_.size();
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getShapeAndType(int index) {
        return shapeAndType_.get(index);
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder getShapeAndTypeOrBuilder(
          int index) {
        return shapeAndType_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (isSet_ != false) {
          output.writeBool(1, isSet_);
        }
        for (int i = 0; i < shapeAndType_.size(); i++) {
          output.writeMessage(2, shapeAndType_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (isSet_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isSet_);
        }
        for (int i = 0; i < shapeAndType_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, shapeAndType_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData)) {
          return super.equals(obj);
        }
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData other = (org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData) obj;

        if (getIsSet()
            != other.getIsSet()) return false;
        if (!getShapeAndTypeList()
            .equals(other.getShapeAndTypeList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + IS_SET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsSet());
        if (getShapeAndTypeCount() > 0) {
          hash = (37 * hash) + SHAPE_AND_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getShapeAndTypeList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.core.CppShapeInferenceResult.HandleData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.core.CppShapeInferenceResult.HandleData)
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder.class);
        }

        // Construct using org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isSet_ = false;

          if (shapeAndTypeBuilder_ == null) {
            shapeAndType_ = java.util.Collections.emptyList();
          } else {
            shapeAndType_ = null;
            shapeAndTypeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_descriptor;
        }

        @java.lang.Override
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData getDefaultInstanceForType() {
          return org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance();
        }

        @java.lang.Override
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData build() {
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData buildPartial() {
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData result = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData(this);
          int from_bitField0_ = bitField0_;
          result.isSet_ = isSet_;
          if (shapeAndTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              shapeAndType_ = java.util.Collections.unmodifiableList(shapeAndType_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.shapeAndType_ = shapeAndType_;
          } else {
            result.shapeAndType_ = shapeAndTypeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData) {
            return mergeFrom((org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData other) {
          if (other == org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance()) return this;
          if (other.getIsSet() != false) {
            setIsSet(other.getIsSet());
          }
          if (shapeAndTypeBuilder_ == null) {
            if (!other.shapeAndType_.isEmpty()) {
              if (shapeAndType_.isEmpty()) {
                shapeAndType_ = other.shapeAndType_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureShapeAndTypeIsMutable();
                shapeAndType_.addAll(other.shapeAndType_);
              }
              onChanged();
            }
          } else {
            if (!other.shapeAndType_.isEmpty()) {
              if (shapeAndTypeBuilder_.isEmpty()) {
                shapeAndTypeBuilder_.dispose();
                shapeAndTypeBuilder_ = null;
                shapeAndType_ = other.shapeAndType_;
                bitField0_ = (bitField0_ & ~0x00000001);
                shapeAndTypeBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getShapeAndTypeFieldBuilder() : null;
              } else {
                shapeAndTypeBuilder_.addAllMessages(other.shapeAndType_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  isSet_ = input.readBool();

                  break;
                } // case 8
                case 18: {
                  org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType m =
                      input.readMessage(
                          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.parser(),
                          extensionRegistry);
                  if (shapeAndTypeBuilder_ == null) {
                    ensureShapeAndTypeIsMutable();
                    shapeAndType_.add(m);
                  } else {
                    shapeAndTypeBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private boolean isSet_ ;
        /**
         * <code>bool is_set = 1;</code>
         * @return The isSet.
         */
        @java.lang.Override
        public boolean getIsSet() {
          return isSet_;
        }
        /**
         * <code>bool is_set = 1;</code>
         * @param value The isSet to set.
         * @return This builder for chaining.
         */
        public Builder setIsSet(boolean value) {
          
          isSet_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool is_set = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsSet() {
          
          isSet_ = false;
          onChanged();
          return this;
        }

        private java.util.List<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> shapeAndType_ =
          java.util.Collections.emptyList();
        private void ensureShapeAndTypeIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            shapeAndType_ = new java.util.ArrayList<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType>(shapeAndType_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> shapeAndTypeBuilder_;

        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public java.util.List<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> getShapeAndTypeList() {
          if (shapeAndTypeBuilder_ == null) {
            return java.util.Collections.unmodifiableList(shapeAndType_);
          } else {
            return shapeAndTypeBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public int getShapeAndTypeCount() {
          if (shapeAndTypeBuilder_ == null) {
            return shapeAndType_.size();
          } else {
            return shapeAndTypeBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getShapeAndType(int index) {
          if (shapeAndTypeBuilder_ == null) {
            return shapeAndType_.get(index);
          } else {
            return shapeAndTypeBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder setShapeAndType(
            int index, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType value) {
          if (shapeAndTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureShapeAndTypeIsMutable();
            shapeAndType_.set(index, value);
            onChanged();
          } else {
            shapeAndTypeBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder setShapeAndType(
            int index, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder builderForValue) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.set(index, builderForValue.build());
            onChanged();
          } else {
            shapeAndTypeBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType value) {
          if (shapeAndTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(value);
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(
            int index, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType value) {
          if (shapeAndTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(index, value);
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(
            org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder builderForValue) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(builderForValue.build());
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(
            int index, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder builderForValue) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(index, builderForValue.build());
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addAllShapeAndType(
            java.lang.Iterable<? extends org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> values) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, shapeAndType_);
            onChanged();
          } else {
            shapeAndTypeBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder clearShapeAndType() {
          if (shapeAndTypeBuilder_ == null) {
            shapeAndType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            shapeAndTypeBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder removeShapeAndType(int index) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.remove(index);
            onChanged();
          } else {
            shapeAndTypeBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder getShapeAndTypeBuilder(
            int index) {
          return getShapeAndTypeFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder getShapeAndTypeOrBuilder(
            int index) {
          if (shapeAndTypeBuilder_ == null) {
            return shapeAndType_.get(index);  } else {
            return shapeAndTypeBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public java.util.List<? extends org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
             getShapeAndTypeOrBuilderList() {
          if (shapeAndTypeBuilder_ != null) {
            return shapeAndTypeBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(shapeAndType_);
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder addShapeAndTypeBuilder() {
          return getShapeAndTypeFieldBuilder().addBuilder(
              org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance());
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder addShapeAndTypeBuilder(
            int index) {
          return getShapeAndTypeFieldBuilder().addBuilder(
              index, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance());
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public java.util.List<org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder> 
             getShapeAndTypeBuilderList() {
          return getShapeAndTypeFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
            getShapeAndTypeFieldBuilder() {
          if (shapeAndTypeBuilder_ == null) {
            shapeAndTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder>(
                    shapeAndType_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            shapeAndType_ = null;
          }
          return shapeAndTypeBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.core.CppShapeInferenceResult.HandleData)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.core.CppShapeInferenceResult.HandleData)
      private static final org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData();
      }

      public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HandleData>
          PARSER = new com.google.protobuf.AbstractParser<HandleData>() {
        @java.lang.Override
        public HandleData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<HandleData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HandleData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SHAPE_FIELD_NUMBER = 1;
    private org.tensorflow.proto.TensorShapeProto shape_;
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     * @return Whether the shape field is set.
     */
    @java.lang.Override
    public boolean hasShape() {
      return shape_ != null;
    }
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     * @return The shape.
     */
    @java.lang.Override
    public org.tensorflow.proto.TensorShapeProto getShape() {
      return shape_ == null ? org.tensorflow.proto.TensorShapeProto.getDefaultInstance() : shape_;
    }
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    @java.lang.Override
    public org.tensorflow.proto.TensorShapeProtoOrBuilder getShapeOrBuilder() {
      return getShape();
    }

    public static final int HANDLE_DATA_FIELD_NUMBER = 4;
    private org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData handleData_;
    /**
     * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     * @return Whether the handleData field is set.
     */
    @java.lang.Override
    public boolean hasHandleData() {
      return handleData_ != null;
    }
    /**
     * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     * @return The handleData.
     */
    @java.lang.Override
    public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData getHandleData() {
      return handleData_ == null ? org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance() : handleData_;
    }
    /**
     * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    @java.lang.Override
    public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder getHandleDataOrBuilder() {
      return getHandleData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (shape_ != null) {
        output.writeMessage(1, getShape());
      }
      if (handleData_ != null) {
        output.writeMessage(4, getHandleData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (shape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getShape());
      }
      if (handleData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHandleData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult)) {
        return super.equals(obj);
      }
      org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult other = (org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult) obj;

      if (hasShape() != other.hasShape()) return false;
      if (hasShape()) {
        if (!getShape()
            .equals(other.getShape())) return false;
      }
      if (hasHandleData() != other.hasHandleData()) return false;
      if (hasHandleData()) {
        if (!getHandleData()
            .equals(other.getHandleData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasShape()) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShape().hashCode();
      }
      if (hasHandleData()) {
        hash = (37 * hash) + HANDLE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getHandleData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.core.CppShapeInferenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.core.CppShapeInferenceResult)
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.Builder.class);
      }

      // Construct using org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (shapeBuilder_ == null) {
          shape_ = null;
        } else {
          shape_ = null;
          shapeBuilder_ = null;
        }
        if (handleDataBuilder_ == null) {
          handleData_ = null;
        } else {
          handleData_ = null;
          handleDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceResult_descriptor;
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult getDefaultInstanceForType() {
        return org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.getDefaultInstance();
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult build() {
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult buildPartial() {
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult result = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult(this);
        if (shapeBuilder_ == null) {
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        if (handleDataBuilder_ == null) {
          result.handleData_ = handleData_;
        } else {
          result.handleData_ = handleDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult) {
          return mergeFrom((org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult other) {
        if (other == org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.getDefaultInstance()) return this;
        if (other.hasShape()) {
          mergeShape(other.getShape());
        }
        if (other.hasHandleData()) {
          mergeHandleData(other.getHandleData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getShapeFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 10
              case 34: {
                input.readMessage(
                    getHandleDataFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private org.tensorflow.proto.TensorShapeProto shape_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.TensorShapeProto, org.tensorflow.proto.TensorShapeProto.Builder, org.tensorflow.proto.TensorShapeProtoOrBuilder> shapeBuilder_;
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       * @return Whether the shape field is set.
       */
      public boolean hasShape() {
        return shapeBuilder_ != null || shape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       * @return The shape.
       */
      public org.tensorflow.proto.TensorShapeProto getShape() {
        if (shapeBuilder_ == null) {
          return shape_ == null ? org.tensorflow.proto.TensorShapeProto.getDefaultInstance() : shape_;
        } else {
          return shapeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder setShape(org.tensorflow.proto.TensorShapeProto value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shape_ = value;
          onChanged();
        } else {
          shapeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder setShape(
          org.tensorflow.proto.TensorShapeProto.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          shape_ = builderForValue.build();
          onChanged();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder mergeShape(org.tensorflow.proto.TensorShapeProto value) {
        if (shapeBuilder_ == null) {
          if (shape_ != null) {
            shape_ =
              org.tensorflow.proto.TensorShapeProto.newBuilder(shape_).mergeFrom(value).buildPartial();
          } else {
            shape_ = value;
          }
          onChanged();
        } else {
          shapeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = null;
          onChanged();
        } else {
          shape_ = null;
          shapeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.proto.TensorShapeProto.Builder getShapeBuilder() {
        
        onChanged();
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.proto.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          return shape_ == null ?
              org.tensorflow.proto.TensorShapeProto.getDefaultInstance() : shape_;
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.TensorShapeProto, org.tensorflow.proto.TensorShapeProto.Builder, org.tensorflow.proto.TensorShapeProtoOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.proto.TensorShapeProto, org.tensorflow.proto.TensorShapeProto.Builder, org.tensorflow.proto.TensorShapeProtoOrBuilder>(
                  getShape(),
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      private org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData handleData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder> handleDataBuilder_;
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       * @return Whether the handleData field is set.
       */
      public boolean hasHandleData() {
        return handleDataBuilder_ != null || handleData_ != null;
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       * @return The handleData.
       */
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData getHandleData() {
        if (handleDataBuilder_ == null) {
          return handleData_ == null ? org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance() : handleData_;
        } else {
          return handleDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder setHandleData(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData value) {
        if (handleDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handleData_ = value;
          onChanged();
        } else {
          handleDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder setHandleData(
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder builderForValue) {
        if (handleDataBuilder_ == null) {
          handleData_ = builderForValue.build();
          onChanged();
        } else {
          handleDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder mergeHandleData(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData value) {
        if (handleDataBuilder_ == null) {
          if (handleData_ != null) {
            handleData_ =
              org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.newBuilder(handleData_).mergeFrom(value).buildPartial();
          } else {
            handleData_ = value;
          }
          onChanged();
        } else {
          handleDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder clearHandleData() {
        if (handleDataBuilder_ == null) {
          handleData_ = null;
          onChanged();
        } else {
          handleData_ = null;
          handleDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder getHandleDataBuilder() {
        
        onChanged();
        return getHandleDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder getHandleDataOrBuilder() {
        if (handleDataBuilder_ != null) {
          return handleDataBuilder_.getMessageOrBuilder();
        } else {
          return handleData_ == null ?
              org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance() : handleData_;
        }
      }
      /**
       * <code>.tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder> 
          getHandleDataFieldBuilder() {
        if (handleDataBuilder_ == null) {
          handleDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleData.Builder, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder>(
                  getHandleData(),
                  getParentForChildren(),
                  isClean());
          handleData_ = null;
        }
        return handleDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.core.CppShapeInferenceResult)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.core.CppShapeInferenceResult)
    private static final org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult();
    }

    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CppShapeInferenceResult>
        PARSER = new com.google.protobuf.AbstractParser<CppShapeInferenceResult>() {
      @java.lang.Override
      public CppShapeInferenceResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CppShapeInferenceResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CppShapeInferenceResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CppShapeInferenceInputsNeededOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.core.CppShapeInferenceInputsNeeded)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     * @return A list containing the inputTensorsNeeded.
     */
    java.util.List<java.lang.Integer> getInputTensorsNeededList();
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     * @return The count of inputTensorsNeeded.
     */
    int getInputTensorsNeededCount();
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     * @param index The index of the element to return.
     * @return The inputTensorsNeeded at the given index.
     */
    int getInputTensorsNeeded(int index);

    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     * @return A list containing the inputTensorsAsShapesNeeded.
     */
    java.util.List<java.lang.Integer> getInputTensorsAsShapesNeededList();
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     * @return The count of inputTensorsAsShapesNeeded.
     */
    int getInputTensorsAsShapesNeededCount();
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     * @param index The index of the element to return.
     * @return The inputTensorsAsShapesNeeded at the given index.
     */
    int getInputTensorsAsShapesNeeded(int index);
  }
  /**
   * Protobuf type {@code tensorflow.core.CppShapeInferenceInputsNeeded}
   */
  public static final class CppShapeInferenceInputsNeeded extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.core.CppShapeInferenceInputsNeeded)
      CppShapeInferenceInputsNeededOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CppShapeInferenceInputsNeeded.newBuilder() to construct.
    private CppShapeInferenceInputsNeeded(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CppShapeInferenceInputsNeeded() {
      inputTensorsNeeded_ = emptyIntList();
      inputTensorsAsShapesNeeded_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CppShapeInferenceInputsNeeded();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.Builder.class);
    }

    public static final int INPUT_TENSORS_NEEDED_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList inputTensorsNeeded_;
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     * @return A list containing the inputTensorsNeeded.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getInputTensorsNeededList() {
      return inputTensorsNeeded_;
    }
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     * @return The count of inputTensorsNeeded.
     */
    public int getInputTensorsNeededCount() {
      return inputTensorsNeeded_.size();
    }
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     * @param index The index of the element to return.
     * @return The inputTensorsNeeded at the given index.
     */
    public int getInputTensorsNeeded(int index) {
      return inputTensorsNeeded_.getInt(index);
    }
    private int inputTensorsNeededMemoizedSerializedSize = -1;

    public static final int INPUT_TENSORS_AS_SHAPES_NEEDED_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList inputTensorsAsShapesNeeded_;
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     * @return A list containing the inputTensorsAsShapesNeeded.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getInputTensorsAsShapesNeededList() {
      return inputTensorsAsShapesNeeded_;
    }
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     * @return The count of inputTensorsAsShapesNeeded.
     */
    public int getInputTensorsAsShapesNeededCount() {
      return inputTensorsAsShapesNeeded_.size();
    }
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     * @param index The index of the element to return.
     * @return The inputTensorsAsShapesNeeded at the given index.
     */
    public int getInputTensorsAsShapesNeeded(int index) {
      return inputTensorsAsShapesNeeded_.getInt(index);
    }
    private int inputTensorsAsShapesNeededMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getInputTensorsNeededList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(inputTensorsNeededMemoizedSerializedSize);
      }
      for (int i = 0; i < inputTensorsNeeded_.size(); i++) {
        output.writeInt32NoTag(inputTensorsNeeded_.getInt(i));
      }
      if (getInputTensorsAsShapesNeededList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(inputTensorsAsShapesNeededMemoizedSerializedSize);
      }
      for (int i = 0; i < inputTensorsAsShapesNeeded_.size(); i++) {
        output.writeInt32NoTag(inputTensorsAsShapesNeeded_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < inputTensorsNeeded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputTensorsNeeded_.getInt(i));
        }
        size += dataSize;
        if (!getInputTensorsNeededList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputTensorsNeededMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inputTensorsAsShapesNeeded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputTensorsAsShapesNeeded_.getInt(i));
        }
        size += dataSize;
        if (!getInputTensorsAsShapesNeededList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputTensorsAsShapesNeededMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded)) {
        return super.equals(obj);
      }
      org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded other = (org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded) obj;

      if (!getInputTensorsNeededList()
          .equals(other.getInputTensorsNeededList())) return false;
      if (!getInputTensorsAsShapesNeededList()
          .equals(other.getInputTensorsAsShapesNeededList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInputTensorsNeededCount() > 0) {
        hash = (37 * hash) + INPUT_TENSORS_NEEDED_FIELD_NUMBER;
        hash = (53 * hash) + getInputTensorsNeededList().hashCode();
      }
      if (getInputTensorsAsShapesNeededCount() > 0) {
        hash = (37 * hash) + INPUT_TENSORS_AS_SHAPES_NEEDED_FIELD_NUMBER;
        hash = (53 * hash) + getInputTensorsAsShapesNeededList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.core.CppShapeInferenceInputsNeeded}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.core.CppShapeInferenceInputsNeeded)
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeededOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.class, org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.Builder.class);
      }

      // Construct using org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        inputTensorsNeeded_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        inputTensorsAsShapesNeeded_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.proto.core.CppShapeInference.internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_descriptor;
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstanceForType() {
        return org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.getDefaultInstance();
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded build() {
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded buildPartial() {
        org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded result = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          inputTensorsNeeded_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.inputTensorsNeeded_ = inputTensorsNeeded_;
        if (((bitField0_ & 0x00000002) != 0)) {
          inputTensorsAsShapesNeeded_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.inputTensorsAsShapesNeeded_ = inputTensorsAsShapesNeeded_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded) {
          return mergeFrom((org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded other) {
        if (other == org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded.getDefaultInstance()) return this;
        if (!other.inputTensorsNeeded_.isEmpty()) {
          if (inputTensorsNeeded_.isEmpty()) {
            inputTensorsNeeded_ = other.inputTensorsNeeded_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInputTensorsNeededIsMutable();
            inputTensorsNeeded_.addAll(other.inputTensorsNeeded_);
          }
          onChanged();
        }
        if (!other.inputTensorsAsShapesNeeded_.isEmpty()) {
          if (inputTensorsAsShapesNeeded_.isEmpty()) {
            inputTensorsAsShapesNeeded_ = other.inputTensorsAsShapesNeeded_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInputTensorsAsShapesNeededIsMutable();
            inputTensorsAsShapesNeeded_.addAll(other.inputTensorsAsShapesNeeded_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readInt32();
                ensureInputTensorsNeededIsMutable();
                inputTensorsNeeded_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureInputTensorsNeededIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  inputTensorsNeeded_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                int v = input.readInt32();
                ensureInputTensorsAsShapesNeededIsMutable();
                inputTensorsAsShapesNeeded_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureInputTensorsAsShapesNeededIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  inputTensorsAsShapesNeeded_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList inputTensorsNeeded_ = emptyIntList();
      private void ensureInputTensorsNeededIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          inputTensorsNeeded_ = mutableCopy(inputTensorsNeeded_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @return A list containing the inputTensorsNeeded.
       */
      public java.util.List<java.lang.Integer>
          getInputTensorsNeededList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(inputTensorsNeeded_) : inputTensorsNeeded_;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @return The count of inputTensorsNeeded.
       */
      public int getInputTensorsNeededCount() {
        return inputTensorsNeeded_.size();
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @param index The index of the element to return.
       * @return The inputTensorsNeeded at the given index.
       */
      public int getInputTensorsNeeded(int index) {
        return inputTensorsNeeded_.getInt(index);
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @param index The index to set the value at.
       * @param value The inputTensorsNeeded to set.
       * @return This builder for chaining.
       */
      public Builder setInputTensorsNeeded(
          int index, int value) {
        ensureInputTensorsNeededIsMutable();
        inputTensorsNeeded_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @param value The inputTensorsNeeded to add.
       * @return This builder for chaining.
       */
      public Builder addInputTensorsNeeded(int value) {
        ensureInputTensorsNeededIsMutable();
        inputTensorsNeeded_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @param values The inputTensorsNeeded to add.
       * @return This builder for chaining.
       */
      public Builder addAllInputTensorsNeeded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputTensorsNeededIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputTensorsNeeded_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputTensorsNeeded() {
        inputTensorsNeeded_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList inputTensorsAsShapesNeeded_ = emptyIntList();
      private void ensureInputTensorsAsShapesNeededIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          inputTensorsAsShapesNeeded_ = mutableCopy(inputTensorsAsShapesNeeded_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @return A list containing the inputTensorsAsShapesNeeded.
       */
      public java.util.List<java.lang.Integer>
          getInputTensorsAsShapesNeededList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_) : inputTensorsAsShapesNeeded_;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @return The count of inputTensorsAsShapesNeeded.
       */
      public int getInputTensorsAsShapesNeededCount() {
        return inputTensorsAsShapesNeeded_.size();
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @param index The index of the element to return.
       * @return The inputTensorsAsShapesNeeded at the given index.
       */
      public int getInputTensorsAsShapesNeeded(int index) {
        return inputTensorsAsShapesNeeded_.getInt(index);
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @param index The index to set the value at.
       * @param value The inputTensorsAsShapesNeeded to set.
       * @return This builder for chaining.
       */
      public Builder setInputTensorsAsShapesNeeded(
          int index, int value) {
        ensureInputTensorsAsShapesNeededIsMutable();
        inputTensorsAsShapesNeeded_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @param value The inputTensorsAsShapesNeeded to add.
       * @return This builder for chaining.
       */
      public Builder addInputTensorsAsShapesNeeded(int value) {
        ensureInputTensorsAsShapesNeededIsMutable();
        inputTensorsAsShapesNeeded_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @param values The inputTensorsAsShapesNeeded to add.
       * @return This builder for chaining.
       */
      public Builder addAllInputTensorsAsShapesNeeded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputTensorsAsShapesNeededIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputTensorsAsShapesNeeded_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputTensorsAsShapesNeeded() {
        inputTensorsAsShapesNeeded_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.core.CppShapeInferenceInputsNeeded)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.core.CppShapeInferenceInputsNeeded)
    private static final org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded();
    }

    public static org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CppShapeInferenceInputsNeeded>
        PARSER = new com.google.protobuf.AbstractParser<CppShapeInferenceInputsNeeded>() {
      @java.lang.Override
      public CppShapeInferenceInputsNeeded parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CppShapeInferenceInputsNeeded> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CppShapeInferenceInputsNeeded> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.tensorflow.proto.core.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_core_CppShapeInferenceResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_core_CppShapeInferenceResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3tensorflow/core/framework/cpp_shape_in" +
      "ference.proto\022\017tensorflow.core\032)tensorfl" +
      "ow/core/framework/full_type.proto\032,tenso" +
      "rflow/core/framework/tensor_shape.proto\032" +
      "%tensorflow/core/framework/types.proto\"\245" +
      "\003\n\027CppShapeInferenceResult\022+\n\005shape\030\001 \001(" +
      "\0132\034.tensorflow.TensorShapeProto\022H\n\013handl" +
      "e_data\030\004 \001(\01323.tensorflow.core.CppShapeI" +
      "nferenceResult.HandleData\032\223\001\n\022HandleShap" +
      "eAndType\022+\n\005shape\030\001 \001(\0132\034.tensorflow.Ten" +
      "sorShapeProto\022#\n\005dtype\030\002 \001(\0162\024.tensorflo" +
      "w.DataType\022%\n\004type\030\004 \001(\0132\027.tensorflow.Fu" +
      "llTypeDefJ\004\010\003\020\004\032q\n\nHandleData\022\016\n\006is_set\030" +
      "\001 \001(\010\022S\n\016shape_and_type\030\002 \003(\0132;.tensorfl" +
      "ow.core.CppShapeInferenceResult.HandleSh" +
      "apeAndTypeJ\004\010\002\020\003J\004\010\003\020\004\"e\n\035CppShapeInfere" +
      "nceInputsNeeded\022\034\n\024input_tensors_needed\030" +
      "\001 \003(\005\022&\n\036input_tensors_as_shapes_needed\030" +
      "\002 \003(\005B|\n\031org.tensorflow.proto.coreZ\\gith" +
      "ub.com/tensorflow/tensorflow/tensorflow/" +
      "go/python/framework/cpp_shape_inference_" +
      "go_proto\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.proto.FullTypeProtos.getDescriptor(),
          org.tensorflow.proto.TensorShapeProtos.getDescriptor(),
          org.tensorflow.proto.TypesProtos.getDescriptor(),
        });
    internal_static_tensorflow_core_CppShapeInferenceResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_core_CppShapeInferenceResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_core_CppShapeInferenceResult_descriptor,
        new java.lang.String[] { "Shape", "HandleData", });
    internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_descriptor =
      internal_static_tensorflow_core_CppShapeInferenceResult_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_core_CppShapeInferenceResult_HandleShapeAndType_descriptor,
        new java.lang.String[] { "Shape", "Dtype", "Type", });
    internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_descriptor =
      internal_static_tensorflow_core_CppShapeInferenceResult_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_core_CppShapeInferenceResult_HandleData_descriptor,
        new java.lang.String[] { "IsSet", "ShapeAndType", });
    internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_core_CppShapeInferenceInputsNeeded_descriptor,
        new java.lang.String[] { "InputTensorsNeeded", "InputTensorsAsShapesNeeded", });
    org.tensorflow.proto.FullTypeProtos.getDescriptor();
    org.tensorflow.proto.TensorShapeProtos.getDescriptor();
    org.tensorflow.proto.TypesProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
