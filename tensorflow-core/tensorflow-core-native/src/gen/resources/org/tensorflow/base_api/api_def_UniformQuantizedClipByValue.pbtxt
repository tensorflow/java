op {
  graph_op_name: "UniformQuantizedClipByValue"
  visibility: HIDDEN
  in_arg {
    name: "operand"
    description: <<END
Must be a Tensor of T.
END
  }
  in_arg {
    name: "min"
    description: <<END
The min value(s) to clip operand. Must be a Tensor of T.
Must be a scalar Tensor if quantization_axis is -1 (per-tensor quantization), otherwise 1D Tensor of size (operand.dim_size(quantization_axis),) (per-axis quantization).
END
  }
  in_arg {
    name: "max"
    description: <<END
The min value(s) to clip operand. Must be a Tensor of T.
Must be a scalar Tensor if quantization_axis is -1 (per-tensor quantization), otherwise 1D Tensor of size (operand.dim_size(quantization_axis),) (per-axis quantization).
END
  }
  in_arg {
    name: "scales"
    description: <<END
The float value(s) used as scale(s) when quantizing `operand`, `min` and `max`.
Must be a scalar Tensor if quantization_axis is -1 (per-tensor quantization), otherwise 1D Tensor of size (operand.dim_size(quantization_axis),) (per-axis quantization).
END
  }
  in_arg {
    name: "zero_points"
    description: <<END
The int32 value(s) used as zero_point(s) when quantizing `operand`, `min` and `max`.
Same shape condition as scales.
END
  }
  out_arg {
    name: "output"
    description: <<END
The output clipped Tensor of T, whose shape is same as operand.
END
  }
  attr {
    name: "T"
    description: <<END
The type of operand, min, max, and output. A tf.DType from: tf.qint32
END
  }
  attr {
    name: "quantization_axis"
    description: <<END
Indicates the dimension index of the tensor where per-axis quantization is applied for the slices along that dimension.
If set to -1 (default), this indicates per-tensor quantization. Otherwise, it must be set within range [0, operand.dims()).
END
  }
  attr {
    name: "quantization_min_val"
    description: <<END
The quantization min value that was used when operand was quantized.
END
  }
  attr {
    name: "quantization_max_val"
    description: <<END
The quantization max value that was used when operand was quantized.
END
  }
  summary: "Perform clip by value on the quantized Tensor `operand`."
  description: <<END
Given quantized `operand` which was quantized using `scales` and `zero_points`, performs clip by value using `min` and `max` values.
If quantization_axis is -1 (per-tensor quantized), the entire operand is clipped using scalar min, max.
Otherwise (per-channel quantized), the clipping is also done per-channel.
END
}
